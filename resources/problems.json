{
  "1873": {
    "H": {
      "name": "Mad City",
      "type": "PROGRAMMING",
      "tags": [
        "dfs and similar",
        "dsu",
        "games",
        "graphs",
        "shortest paths",
        "trees"
      ]
    },
    "G": {
      "name": "ABBC or BACB",
      "type": "PROGRAMMING",
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "F": {
      "name": "Money Trees",
      "type": "PROGRAMMING",
      "tags": [
        "binary search",
        "greedy",
        "math",
        "two pointers"
      ]
    },
    "E": {
      "name": "Building an Aquarium",
      "type": "PROGRAMMING",
      "tags": [
        "binary search",
        "sortings"
      ]
    },
    "D": {
      "name": "1D Eraser",
      "type": "PROGRAMMING",
      "tags": [
        "greedy",
        "implementation",
        "two pointers"
      ]
    },
    "C": {
      "name": "Target Practice",
      "type": "PROGRAMMING",
      "tags": [
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Good Kid",
      "type": "PROGRAMMING",
      "tags": [
        "brute force",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Short Sort",
      "type": "PROGRAMMING",
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "1872": {
    "G": {
      "name": "Replace With Product",
      "type": "PROGRAMMING",
      "tags": [
        "brute force",
        "greedy",
        "math"
      ]
    },
    "F": {
      "name": "Selling a Menagerie",
      "type": "PROGRAMMING",
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "implementation",
        "math"
      ]
    },
    "E": {
      "name": "Data Structures Fan",
      "type": "PROGRAMMING",
      "tags": [
        "binary search",
        "bitmasks",
        "data structures",
        "dp"
      ]
    },
    "D": {
      "name": "Plus Minus Permutation",
      "type": "PROGRAMMING",
      "tags": [
        "math"
      ]
    },
    "C": {
      "name": "Non-coprime Split",
      "type": "PROGRAMMING",
      "tags": [
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "The Corridor or There and Back Again",
      "type": "PROGRAMMING",
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Two Vessels",
      "type": "PROGRAMMING",
      "tags": [
        "brute force",
        "greedy",
        "math"
      ]
    }
  },
  "1870": {
    "H": {
      "name": "Standard Graph Problem",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "tags": [
        "data structures",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "G": {
      "name": "MEXanization",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "tags": [
        "data structures"
      ]
    },
    "F": {
      "name": "Lazy Numbers",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "tags": [
        "binary search",
        "math"
      ]
    },
    "E": {
      "name": "Another MEX Problem",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Prefix Purchase",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "C": {
      "name": "Colorful Table",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "implementation",
        "math",
        "two pointers"
      ]
    },
    "B": {
      "name": "Friendly Arrays",
      "type": "PROGRAMMING",
      "points": 750.0,
      "tags": [
        "bitmasks",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "MEXanized Array",
      "type": "PROGRAMMING",
      "points": 500.0,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    }
  },
  "1869": {
    "B": {
      "name": "2D Traveling",
      "type": "PROGRAMMING",
      "points": 750.0,
      "tags": [
        "geometry",
        "math",
        "shortest paths",
        "sortings"
      ]
    },
    "A": {
      "name": "Make It Zero",
      "type": "PROGRAMMING",
      "points": 500.0,
      "tags": [
        "constructive algorithms"
      ]
    }
  },
  "1868": {
    "F": {
      "name": "LIS?",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "tags": [
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "E": {
      "name": "Min-Sum-Max",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Flower-like Pseudotree",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "tags": [
        "constructive algorithms",
        "graphs",
        "greedy",
        "implementation",
        "trees"
      ]
    },
    "C": {
      "name": "Travel Plan",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "tags": [
        "combinatorics",
        "dp",
        "implementation",
        "math",
        "trees"
      ]
    },
    "B2": {
      "name": "Candy Party (Hard Version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "dp",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "B1": {
      "name": "Candy Party (Easy Version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "graphs",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Fill in the Matrix",
      "type": "PROGRAMMING",
      "points": 500.0,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "1867": {
    "F": {
      "name": "Most Different Tree",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "greedy",
        "hashing"
      ]
    },
    "E2": {
      "name": "Salyg1n and Array (hard version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "tags": [
        "constructive algorithms",
        "interactive"
      ]
    },
    "E1": {
      "name": "Salyg1n and Array (simple version)",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "tags": [
        "constructive algorithms",
        "interactive",
        "math"
      ]
    },
    "D": {
      "name": "Cyclic Operations",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Salyg1n and the MEX Game",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "tags": [
        "constructive algorithms",
        "data structures",
        "games",
        "greedy",
        "interactive"
      ]
    },
    "B": {
      "name": "XOR Palindromes",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "strings"
      ]
    },
    "A": {
      "name": "green_gold_dog, array and permutation",
      "type": "PROGRAMMING",
      "points": 500.0,
      "tags": [
        "constructive algorithms",
        "sortings"
      ]
    }
  },
  "1866": {
    "M": {
      "name": "Mighty Rock Tower",
      "type": "PROGRAMMING",
      "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "math",
        "probabilities"
      ]
    },
    "L": {
      "name": "Lihmuf Balling",
      "type": "PROGRAMMING",
      "tags": [
        "binary search",
        "brute force",
        "math"
      ]
    },
    "K": {
      "name": "Keen Tree Calculation",
      "type": "PROGRAMMING",
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "geometry",
        "graphs",
        "implementation",
        "trees"
      ]
    },
    "J": {
      "name": "Jackets and Packets",
      "type": "PROGRAMMING",
      "tags": [
        "dp"
      ]
    },
    "I": {
      "name": "Imagination Castle",
      "type": "PROGRAMMING",
      "tags": [
        "dp",
        "games",
        "two pointers"
      ]
    },
    "H": {
      "name": "Happy Sets",
      "type": "PROGRAMMING",
      "tags": [
        "combinatorics"
      ]
    },
    "G": {
      "name": "Grouped Carriages",
      "type": "PROGRAMMING",
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "flows",
        "greedy"
      ]
    },
    "F": {
      "name": "Freak Joker Process",
      "type": "PROGRAMMING",
      "tags": [
        "binary search",
        "data structures",
        "sortings"
      ]
    },
    "E": {
      "name": "Elevators of Tamem",
      "type": "PROGRAMMING",
      "tags": [
        "dp"
      ]
    },
    "D": {
      "name": "Digital Wallet",
      "type": "PROGRAMMING",
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Completely Searching for Inversions",
      "type": "PROGRAMMING",
      "tags": [
        "dfs and similar",
        "dp",
        "graphs"
      ]
    },
    "B": {
      "name": "Battling with Numbers",
      "type": "PROGRAMMING",
      "tags": [
        "combinatorics",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Ambitious Kid",
      "type": "PROGRAMMING",
      "tags": [
        "math"
      ]
    }
  },
  "1864": {
    "I": {
      "name": "Future Dominators",
      "type": "PROGRAMMING",
      "points": 4250.0,
      "tags": [
        "graphs",
        "greedy"
      ]
    },
    "H": {
      "name": "Asterism Stream",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "tags": [
        "dp",
        "math",
        "matrices"
      ]
    },
    "G": {
      "name": "Magic Square",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "implementation"
      ]
    },
    "F": {
      "name": "Exotic Queries",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "tags": [
        "data structures",
        "implementation",
        "sortings"
      ]
    },
    "E": {
      "name": "Guess Game",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "tags": [
        "bitmasks",
        "data structures",
        "games",
        "math",
        "probabilities",
        "sortings",
        "strings",
        "trees"
      ]
    },
    "D": {
      "name": "Matrix Cascade",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "tags": [
        "brute force",
        "constructive algorithms",
        "data structures",
        "dp",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Divisor Chain",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Swap and Reverse",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "tags": [
        "constructive algorithms",
        "greedy",
        "sortings",
        "strings"
      ]
    },
    "A": {
      "name": "Increasing and Decreasing",
      "type": "PROGRAMMING",
      "points": 500.0,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "1863": {
    "I": {
      "name": "Redundant Routes",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "tags": [
        "constructive algorithms",
        "dp",
        "trees"
      ]
    },
    "H": {
      "name": "Goldberg Machine 3",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "tags": [
        "dp",
        "trees"
      ]
    },
    "G": {
      "name": "Swaps",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "tags": [
        "combinatorics",
        "dp",
        "graphs",
        "math"
      ]
    },
    "F": {
      "name": "Divide, XOR, and Conquer",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "tags": [
        "bitmasks",
        "dp",
        "math"
      ]
    },
    "E": {
      "name": "Speedrun",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "tags": [
        "brute force",
        "dfs and similar",
        "dp",
        "graphs",
        "greedy",
        "math",
        "sortings",
        "two pointers"
      ]
    },
    "D": {
      "name": "Two-Colored Dominoes",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "C": {
      "name": "MEX Repetition",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Split Sort",
      "type": "PROGRAMMING",
      "points": 750.0,
      "tags": [
        "greedy",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Channel",
      "type": "PROGRAMMING",
      "points": 500.0,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "1862": {
    "G": {
      "name": "The Great Equalizer",
      "type": "PROGRAMMING",
      "tags": [
        "binary search",
        "data structures",
        "math",
        "sortings"
      ]
    },
    "F": {
      "name": "Magic Will Save the World",
      "type": "PROGRAMMING",
      "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "dp"
      ]
    },
    "E": {
      "name": "Kolya and Movie Theatre",
      "type": "PROGRAMMING",
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy"
      ]
    },
    "D": {
      "name": "Ice Cream Balls",
      "type": "PROGRAMMING",
      "tags": [
        "binary search",
        "combinatorics",
        "constructive algorithms",
        "math"
      ]
    },
    "C": {
      "name": "Flower City Fence",
      "type": "PROGRAMMING",
      "tags": [
        "binary search",
        "data structures",
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Sequence Game",
      "type": "PROGRAMMING",
      "tags": [
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "Gift Carpet",
      "type": "PROGRAMMING",
      "tags": [
        "dp",
        "greedy",
        "implementation",
        "strings"
      ]
    }
  },
  "1861": {
    "F": {
      "name": "Four Suits",
      "type": "PROGRAMMING",
      "tags": [
        "binary search",
        "bitmasks",
        "flows",
        "greedy"
      ]
    },
    "E": {
      "name": "Non-Intersecting Subpermutations",
      "type": "PROGRAMMING",
      "tags": [
        "combinatorics",
        "dp",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Sorting By Multiplication",
      "type": "PROGRAMMING",
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Queries for the Array",
      "type": "PROGRAMMING",
      "tags": [
        "data structures",
        "dfs and similar",
        "implementation",
        "strings",
        "trees"
      ]
    },
    "B": {
      "name": "Two Binary Strings",
      "type": "PROGRAMMING",
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy"
      ]
    },
    "A": {
      "name": "Prime Deletion",
      "type": "PROGRAMMING",
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1860": {
    "F": {
      "name": "Evaluate RBS",
      "type": "PROGRAMMING",
      "tags": [
        "data structures",
        "geometry",
        "implementation",
        "math",
        "sortings"
      ]
    },
    "E": {
      "name": "Fast Travel Text Editor",
      "type": "PROGRAMMING",
      "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Balanced String",
      "type": "PROGRAMMING",
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Game on Permutation",
      "type": "PROGRAMMING",
      "tags": [
        "data structures",
        "dp",
        "games",
        "greedy"
      ]
    },
    "B": {
      "name": "Fancy Coins",
      "type": "PROGRAMMING",
      "tags": [
        "binary search",
        "brute force",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Not a Substring",
      "type": "PROGRAMMING",
      "tags": [
        "constructive algorithms",
        "strings"
      ]
    }
  },
  "1859": {
    "F": {
      "name": "Teleportation in Byteland",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3200,
      "tags": [
        "data structures",
        "dfs and similar",
        "divide and conquer",
        "graphs",
        "shortest paths",
        "trees"
      ]
    },
    "E": {
      "name": "Maximum Monogonosity",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "Andrey and Escape from Capygrad",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "dsu",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Another Permutation Problem",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Olya and Game with Arrays",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "United We Stand",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory"
      ]
    }
  },
  "1858": {
    "E2": {
      "name": "Rollbacks (Hard Version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "interactive",
        "trees"
      ]
    },
    "E1": {
      "name": "Rollbacks (Easy Version)",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "data structures",
        "dfs and similar",
        "trees"
      ]
    },
    "D": {
      "name": "Trees and Segments",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "data structures",
        "dp",
        "greedy",
        "two pointers"
      ]
    },
    "C": {
      "name": "Yet Another Permutation Problem",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "The Walkway",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Buttons",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "games",
        "greedy",
        "math"
      ]
    }
  },
  "1857": {
    "G": {
      "name": "Counting Graphs",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "combinatorics",
        "divide and conquer",
        "dsu",
        "graphs",
        "greedy",
        "sortings",
        "trees"
      ]
    },
    "F": {
      "name": "Sum and Product",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "binary search",
        "data structures",
        "math"
      ]
    },
    "E": {
      "name": "Power of Points",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "math",
        "sortings"
      ]
    },
    "D": {
      "name": "Strong Vertices",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "math",
        "sortings",
        "trees"
      ]
    },
    "C": {
      "name": "Assembly via Minimums",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Maximum Rounding",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Array Coloring",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1856": {
    "E2": {
      "name": "PermuTree (hard version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2700,
      "tags": [
        "bitmasks",
        "dfs and similar",
        "dp",
        "fft",
        "greedy",
        "implementation",
        "math",
        "trees"
      ]
    },
    "E1": {
      "name": "PermuTree (easy version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "D": {
      "name": "More Wrong",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "divide and conquer",
        "interactive"
      ]
    },
    "C": {
      "name": "To Become Max",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dp"
      ]
    },
    "B": {
      "name": "Good Arrays",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 900,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Tales of a Sort",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1855": {
    "B": {
      "name": "Longest Divisors Interval",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "brute force",
        "combinatorics",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Dalton the Teacher",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1854": {
    "F": {
      "name": "Mark and Spaceship",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3500,
      "tags": [
        "brute force",
        "dp"
      ]
    },
    "E": {
      "name": "Game Bundles",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3000,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dp",
        "greedy",
        "math"
      ]
    },
    "D": {
      "name": "Michael and Hotel",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3000,
      "tags": [
        "binary search",
        "interactive",
        "trees"
      ]
    },
    "C": {
      "name": "Expected Destruction",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "probabilities"
      ]
    },
    "B": {
      "name": "Earn or Unlock",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "bitmasks",
        "brute force",
        "dp"
      ]
    },
    "A2": {
      "name": "Dual (Hard Version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A1": {
      "name": "Dual (Easy Version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1853": {
    "B": {
      "name": "Fibonaccharsis",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "binary search",
        "brute force",
        "math"
      ]
    },
    "A": {
      "name": "Desorting",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "greedy",
        "math"
      ]
    }
  },
  "1852": {
    "F": {
      "name": "Panda Meetups",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3500,
      "tags": [
        "data structures",
        "dp",
        "flows"
      ]
    },
    "E": {
      "name": "Rivalries",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3400,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy"
      ]
    },
    "D": {
      "name": "Miriany and Matchstick",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2800,
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Ina of the Mountain",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Imbalanced Arrays",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "graphs",
        "greedy",
        "math",
        "sortings",
        "two pointers"
      ]
    },
    "A": {
      "name": "Ntarsis' Set",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "math",
        "number theory"
      ]
    }
  },
  "1851": {
    "G": {
      "name": "Vlad and the Mountains",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "binary search",
        "data structures",
        "dsu",
        "graphs",
        "implementation",
        "sortings",
        "trees",
        "two pointers"
      ]
    },
    "F": {
      "name": "Lisa and the Martians",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "bitmasks",
        "greedy",
        "math",
        "strings",
        "trees"
      ]
    },
    "E": {
      "name": "Nastya and Potions",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "sortings"
      ]
    },
    "D": {
      "name": "Prefix Permutation Sums",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Tiles Comeback",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Parity Sort",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "A": {
      "name": "Escalator Conversations",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1850": {
    "H": {
      "name": "The Third Letter",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "implementation"
      ]
    },
    "G": {
      "name": "The Morning Star",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "combinatorics",
        "data structures",
        "geometry",
        "implementation",
        "math",
        "sortings"
      ]
    },
    "F": {
      "name": "We Were Both Children",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "brute force",
        "implementation",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Cardboard for Pictures",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "binary search",
        "geometry",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Balanced Round",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "brute force",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "C": {
      "name": "Word on the Paper",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "B": {
      "name": "Ten Words of Wisdom",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "To My Critics",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "sortings"
      ]
    }
  },
  "1849": {
    "F": {
      "name": "XOR Partition",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "binary search",
        "bitmasks",
        "data structures",
        "divide and conquer",
        "greedy",
        "trees"
      ]
    },
    "E": {
      "name": "Max to the Right of Min",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "binary search",
        "data structures",
        "divide and conquer",
        "dp",
        "dsu",
        "two pointers"
      ]
    },
    "D": {
      "name": "Array Painting",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "greedy",
        "two pointers"
      ]
    },
    "C": {
      "name": "Binary String Copying",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "hashing",
        "strings"
      ]
    },
    "B": {
      "name": "Monsters",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "greedy",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Morning Sandwich",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1848": {
    "F": {
      "name": "Vika and Wiki",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "bitmasks",
        "combinatorics",
        "divide and conquer",
        "dp",
        "math"
      ]
    },
    "E": {
      "name": "Vika and Stone Skipping",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2600,
      "tags": [
        "brute force",
        "implementation",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Vika and Bonuses",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "brute force",
        "math",
        "ternary search"
      ]
    },
    "C": {
      "name": "Vika and Price Tags",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Vika and the Bridge",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "implementation",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Vika and Her Friends",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "games",
        "math"
      ]
    }
  },
  "1847": {
    "F": {
      "name": "The Boss's Identity",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "bitmasks",
        "data structures",
        "dfs and similar",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "E": {
      "name": "Triangle Platinum?",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2900,
      "tags": [
        "brute force",
        "combinatorics",
        "implementation",
        "interactive",
        "math",
        "probabilities"
      ]
    },
    "D": {
      "name": "Professor Higashikata",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "dsu",
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "C": {
      "name": "Vampiric Powers, anyone?",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "greedy"
      ]
    },
    "B": {
      "name": "Hamon Odyssey",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "bitmasks",
        "greedy",
        "two pointers"
      ]
    },
    "A": {
      "name": "The Man who became a God ",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "sortings"
      ]
    }
  },
  "1846": {
    "G": {
      "name": "Rudolf and CodeVid-23",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "bitmasks",
        "dp",
        "graphs",
        "greedy",
        "shortest paths"
      ]
    },
    "F": {
      "name": "Rudolph and Mimic",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "implementation",
        "interactive"
      ]
    },
    "E2": {
      "name": "Rudolf and Snowflakes (hard version)",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "binary search",
        "brute force",
        "implementation",
        "math"
      ]
    },
    "E1": {
      "name": "Rudolf and Snowflakes (simple version)",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Rudolph and Christmas Tree",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "geometry",
        "math"
      ]
    },
    "C": {
      "name": "Rudolf and the Another Competition",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "data structures",
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Rudolph and Tic-Tac-Toe",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Rudolph and Cut the Rope ",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1845": {
    "F": {
      "name": "Swimmers in the Pool",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "dp",
        "fft",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Boxes and Balls",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "dp",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Rating System",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dp",
        "dsu",
        "greedy",
        "math",
        "two pointers"
      ]
    },
    "C": {
      "name": "Strong Password",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "binary search",
        "dp",
        "greedy",
        "strings"
      ]
    },
    "B": {
      "name": "Come Together",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "geometry",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Forbidden Integer",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "implementation",
        "math",
        "number theory"
      ]
    }
  },
  "1844": {
    "H": {
      "name": "Multiple of Three Cycles",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3400,
      "tags": [
        "combinatorics",
        "data structures",
        "dp",
        "dsu",
        "math"
      ]
    },
    "G": {
      "name": "Tree Weights",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3000,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "data structures",
        "dfs and similar",
        "implementation",
        "math",
        "matrices",
        "number theory",
        "trees"
      ]
    },
    "F2": {
      "name": "Min Cost Permutation (Hard Version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2800,
      "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "F1": {
      "name": "Min Cost Permutation (Easy Version)",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "E": {
      "name": "Great Grids",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "2-sat",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "D": {
      "name": "Row Major",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "number theory",
        "strings"
      ]
    },
    "C": {
      "name": "Particles",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1300,
      "tags": [
        "dp",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Permutations & Primes",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Subtraction Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "games"
      ]
    }
  },
  "1843": {
    "F2": {
      "name": "Omsk Metro (hard version)",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "data structures",
        "dfs and similar",
        "divide and conquer",
        "dp",
        "math",
        "trees"
      ]
    },
    "F1": {
      "name": "Omsk Metro (simple version)",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "graphs",
        "greedy",
        "math",
        "trees"
      ]
    },
    "E": {
      "name": "Tracking Segments",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "two pointers"
      ]
    },
    "D": {
      "name": "Apple Tree",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "dp",
        "math",
        "trees"
      ]
    },
    "C": {
      "name": "Sum in Binary Tree",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "bitmasks",
        "combinatorics",
        "math",
        "trees"
      ]
    },
    "B": {
      "name": "Long Long",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "math",
        "two pointers"
      ]
    },
    "A": {
      "name": "Sasha and Array Coloring",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "sortings",
        "two pointers"
      ]
    }
  },
  "1842": {
    "I": {
      "name": "Tenzing and Necklace",
      "type": "PROGRAMMING",
      "points": 5000.0,
      "rating": 3500,
      "tags": [
        "divide and conquer",
        "dp",
        "greedy"
      ]
    },
    "H": {
      "name": "Tenzing and Random Real Numbers",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 3000,
      "tags": [
        "bitmasks",
        "dp",
        "graphs",
        "math",
        "probabilities"
      ]
    },
    "G": {
      "name": "Tenzing and Random Operations",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "probabilities"
      ]
    },
    "F": {
      "name": "Tenzing and Tree",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "dfs and similar",
        "greedy",
        "shortest paths",
        "sortings",
        "trees"
      ]
    },
    "E": {
      "name": "Tenzing and Triangle",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "dp",
        "geometry",
        "greedy",
        "math"
      ]
    },
    "D": {
      "name": "Tenzing and His Animal Friends ",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "graphs",
        "greedy"
      ]
    },
    "C": {
      "name": "Tenzing and Balls",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Tenzing and Books",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "bitmasks",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Tenzing and Tsondu",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 800,
      "tags": [
        "games",
        "math"
      ]
    }
  },
  "1841": {
    "F": {
      "name": "Monocarp and a Strategic Game",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "geometry",
        "sortings",
        "two pointers"
      ]
    },
    "E": {
      "name": "Fill the Matrix",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "data structures",
        "greedy",
        "math"
      ]
    },
    "D": {
      "name": "Pairs of Segments",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "data structures",
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Ranom Numbers",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "math",
        "strings"
      ]
    },
    "B": {
      "name": "Keep it Beautiful",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Game with Board",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "games"
      ]
    }
  },
  "1840": {
    "G2": {
      "name": "In Search of Truth (Hard Version)",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "interactive",
        "math",
        "meet-in-the-middle",
        "probabilities"
      ]
    },
    "G1": {
      "name": "In Search of Truth (Easy Version)",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "interactive",
        "math",
        "meet-in-the-middle",
        "probabilities"
      ]
    },
    "F": {
      "name": "Railguns",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "brute force",
        "dfs and similar",
        "dp",
        "graphs"
      ]
    },
    "E": {
      "name": "Character Blocking",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "data structures",
        "hashing",
        "implementation"
      ]
    },
    "D": {
      "name": "Wooden Toy Festival",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "binary search",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Ski Resort",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "combinatorics",
        "math",
        "two pointers"
      ]
    },
    "B": {
      "name": "Binary Cafe",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "bitmasks",
        "combinatorics",
        "math"
      ]
    },
    "A": {
      "name": "Cipher Shifer",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "strings",
        "two pointers"
      ]
    }
  },
  "1839": {
    "E": {
      "name": "Decreasing Game",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "greedy",
        "interactive"
      ]
    },
    "D": {
      "name": "Ball Sorting",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "dp",
        "sortings"
      ]
    },
    "C": {
      "name": "Insert Zero and Invert Prefix",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Lamps",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "The Good Array",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "1838": {
    "F": {
      "name": "Stuck Conveyor",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "binary search",
        "constructive algorithms",
        "interactive"
      ]
    },
    "E": {
      "name": "Count Supersequences",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2500,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "Bracket Walk",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "greedy",
        "strings"
      ]
    },
    "C": {
      "name": "No Prime Differences",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Minimize Permutation Subarrays",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Blackboard List",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1837": {
    "F": {
      "name": "Editorial for Two",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "E": {
      "name": "Playoff Fixing",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "combinatorics",
        "trees"
      ]
    },
    "D": {
      "name": "Bracket Coloring",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "C": {
      "name": "Best Binary String",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "B": {
      "name": "Comparison String",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Grasshopper on a Line",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1836": {
    "B": {
      "name": "Astrophysicists",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Destroyer",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "implementation",
        "sortings"
      ]
    }
  },
  "1835": {
    "F": {
      "name": "Good Graph",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3500,
      "tags": [
        "bitmasks",
        "dfs and similar",
        "graph matchings",
        "graphs",
        "implementation"
      ]
    },
    "E": {
      "name": "Old Mobile",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3500,
      "tags": [
        "combinatorics",
        "dp",
        "probabilities"
      ]
    },
    "D": {
      "name": "Doctor's Brown Hypothesis",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2900,
      "tags": [
        "dfs and similar",
        "graphs",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Twin Clusters",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2600,
      "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "math",
        "probabilities"
      ]
    },
    "B": {
      "name": "Lottery",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "brute force",
        "greedy",
        "math",
        "two pointers"
      ]
    },
    "A": {
      "name": "k-th equality",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    }
  },
  "1834": {
    "F": {
      "name": "Typewriter",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "math"
      ]
    },
    "E": {
      "name": "MEX of LCM",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "data structures",
        "implementation",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Survey in Class",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "data structures",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "C": {
      "name": "Game with Reversing",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1200,
      "tags": [
        "games",
        "greedy",
        "math",
        "strings"
      ]
    },
    "B": {
      "name": "Maximum Strength",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Unit Array",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1833": {
    "G": {
      "name": "Ksyusha and Chinchilla",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "dsu",
        "greedy",
        "implementation",
        "trees"
      ]
    },
    "F": {
      "name": "Ira and Flamenco",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "data structures",
        "implementation",
        "math",
        "sortings",
        "two pointers"
      ]
    },
    "E": {
      "name": "Round Dance",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Flipper",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
      ]
    },
    "C": {
      "name": "Vlad Building Beautiful Array",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Restore the Weather",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Musical Puzzle",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1832": {
    "F": {
      "name": "Zombies",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": [
        "binary search",
        "dp"
      ]
    },
    "E": {
      "name": "Combinatorics Problem",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "brute force",
        "combinatorics",
        "dp"
      ]
    },
    "D2": {
      "name": "Red-Blue Operations (Hard Version)",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "D1": {
      "name": "Red-Blue Operations (Easy Version)",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "binary search",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Contrast Value",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Maximum Sum",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "brute force",
        "sortings",
        "two pointers"
      ]
    },
    "A": {
      "name": "New Palindrome",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "strings"
      ]
    }
  },
  "1831": {
    "B": {
      "name": "Array merging",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "Twin Permutations",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms"
      ]
    }
  },
  "1830": {
    "F": {
      "name": "The Third Grace",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3200,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "E": {
      "name": "Bully Sort",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3500,
      "tags": [
        "data structures",
        "math"
      ]
    },
    "D": {
      "name": "Mex Tree",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2800,
      "tags": [
        "brute force",
        "dp",
        "trees"
      ]
    },
    "C": {
      "name": "Hyperregular Bracket Strings",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2400,
      "tags": [
        "combinatorics",
        "greedy",
        "hashing",
        "math",
        "number theory",
        "sortings"
      ]
    },
    "B": {
      "name": "The BOSS Can Count Pairs",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "math"
      ]
    },
    "A": {
      "name": "Copil Copac Draws Trees",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
      ]
    }
  },
  "1829": {
    "H": {
      "name": "Don't Blame Me",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "G": {
      "name": "Hits Different",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "data structures",
        "dp",
        "implementation",
        "math"
      ]
    },
    "F": {
      "name": "Forever Winter",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "dfs and similar",
        "graphs",
        "math"
      ]
    },
    "E": {
      "name": "The Lakes",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "implementation"
      ]
    },
    "D": {
      "name": "Gold Rush",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "brute force",
        "dfs and similar",
        "dp",
        "implementation"
      ]
    },
    "C": {
      "name": "Mr. Perfectly Fine",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "bitmasks",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Blank Space",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Love Story",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1828": {
    "B": {
      "name": "Permutation Swap",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Divisible Array",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1827": {
    "F": {
      "name": "Copium Permutation",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3500,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy"
      ]
    },
    "E": {
      "name": "Bus Routes",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3400,
      "tags": [
        "binary search",
        "constructive algorithms",
        "dfs and similar",
        "greedy",
        "trees"
      ]
    },
    "D": {
      "name": "Two Centroids",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "dfs and similar",
        "greedy",
        "trees"
      ]
    },
    "C": {
      "name": "Palindrome Partition",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2600,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dp",
        "hashing",
        "strings"
      ]
    },
    "B2": {
      "name": "Range Sorting (Hard Version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "B1": {
      "name": "Range Sorting (Easy Version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "dp",
        "dsu",
        "greedy",
        "trees",
        "two pointers"
      ]
    },
    "A": {
      "name": "Counting Orders",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "combinatorics",
        "math",
        "sortings",
        "two pointers"
      ]
    }
  },
  "1826": {
    "F": {
      "name": "Fading into Fog",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "geometry",
        "interactive",
        "math",
        "probabilities"
      ]
    },
    "E": {
      "name": "Walk the Runway",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "brute force",
        "data structures",
        "dp",
        "graphs",
        "implementation",
        "sortings"
      ]
    },
    "D": {
      "name": "Running Miles",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Dreaming of Freedom",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Lunatic Never Content",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Trust Nobody",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "greedy",
        "implementation",
        "sortings"
      ]
    }
  },
  "1825": {
    "B": {
      "name": "LuoTianyi and the Table",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "LuoTianyi and the Palindrome String",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "strings"
      ]
    }
  },
  "1824": {
    "E": {
      "name": "LuoTianyi and Cartridge",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3500,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "D": {
      "name": "LuoTianyi and the Function",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3000,
      "tags": [
        "data structures"
      ]
    },
    "C": {
      "name": "LuoTianyi and XOR-Tree",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "dsu",
        "greedy",
        "trees"
      ]
    },
    "B2": {
      "name": "LuoTianyi and the Floating Islands (Hard Version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2300,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "math",
        "probabilities",
        "trees"
      ]
    },
    "B1": {
      "name": "LuoTianyi and the Floating Islands (Easy Version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "combinatorics",
        "math",
        "probabilities",
        "trees"
      ]
    },
    "A": {
      "name": "LuoTianyi and the Show",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "1823": {
    "F": {
      "name": "Random Walk",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "dp",
        "graphs",
        "math",
        "probabilities",
        "trees"
      ]
    },
    "E": {
      "name": "Removing Graph",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "dp",
        "games",
        "graphs",
        "math"
      ]
    },
    "D": {
      "name": "Unique Palindromes",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "math",
        "strings"
      ]
    },
    "C": {
      "name": "Strongly Composite",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Sort with Step",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "brute force",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "A-characteristic",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1822": {
    "G2": {
      "name": "Magic Triples (Hard Version)",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "brute force",
        "data structures",
        "math",
        "number theory"
      ]
    },
    "G1": {
      "name": "Magic Triples (Easy Version)",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "brute force",
        "data structures",
        "math",
        "number theory"
      ]
    },
    "F": {
      "name": "Gardening Friends",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "brute force",
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "Making Anti-Palindromes",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "greedy",
        "math",
        "strings"
      ]
    },
    "D": {
      "name": "Super-Permutation",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "C": {
      "name": "Bun Lover",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    },
    "B": {
      "name": "Karina and Array",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "TubeTube Feed",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "1821": {
    "F": {
      "name": "Timber",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "combinatorics",
        "dp",
        "fft",
        "math"
      ]
    },
    "E": {
      "name": "Rearrange Brackets",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "sortings",
        "strings"
      ]
    },
    "D": {
      "name": "Black Cells",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "brute force",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Tear It Apart",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "brute force",
        "implementation",
        "math",
        "strings"
      ]
    },
    "B": {
      "name": "Sort the Subarray",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "brute force",
        "greedy"
      ]
    },
    "A": {
      "name": "Matching",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "combinatorics",
        "math"
      ]
    }
  },
  "1820": {
    "B": {
      "name": "JoJo's Incredible Adventures",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "math",
        "strings",
        "two pointers"
      ]
    },
    "A": {
      "name": "Yura's New Name",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1819": {
    "F": {
      "name": "Willy-nilly, Crack, Into Release!",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3500,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "E": {
      "name": "Roads in E City",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3200,
      "tags": [
        "interactive",
        "math",
        "probabilities",
        "trees"
      ]
    },
    "D": {
      "name": "Misha and Apples",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2800,
      "tags": [
        "brute force",
        "data structures",
        "dp",
        "two pointers"
      ]
    },
    "C": {
      "name": "The Fox and the Complete Tree Traversal",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "dp",
        "implementation",
        "math",
        "trees"
      ]
    },
    "B": {
      "name": "The Butcher",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1900,
      "tags": [
        "geometry",
        "greedy",
        "implementation",
        "sortings",
        "two pointers"
      ]
    },
    "A": {
      "name": "Constructive Problem",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "greedy"
      ]
    }
  },
  "1818": {
    "B": {
      "name": "Indivisible",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "Politics",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "1817": {
    "F": {
      "name": "Entangled Substrings",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3500,
      "tags": [
        "string suffix structures",
        "strings"
      ]
    },
    "E": {
      "name": "Half-sum",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3400,
      "tags": [
        "brute force",
        "divide and conquer",
        "greedy"
      ]
    },
    "D": {
      "name": "Toy Machine",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "games",
        "implementation"
      ]
    },
    "C": {
      "name": "Similar Polynomials",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2400,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "B": {
      "name": "Fish Graph",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "graphs"
      ]
    },
    "A": {
      "name": "Almost Increasing Subsequence",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "data structures",
        "greedy"
      ]
    }
  },
  "1816": {
    "B": {
      "name": "Grid Reconstruction",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "Ian Visits Mary",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "geometry",
        "number theory"
      ]
    }
  },
  "1815": {
    "F": {
      "name": "OH NO1 (-2-3-4)",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3500,
      "tags": [
        "constructive algorithms",
        "graphs",
        "math"
      ]
    },
    "E": {
      "name": "Bosco and Particle",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3100,
      "tags": [
        "dp",
        "math",
        "number theory",
        "strings"
      ]
    },
    "D": {
      "name": "XOR Counting",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "C": {
      "name": "Between",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy"
      ]
    },
    "B": {
      "name": "Sum Graph",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "constructive algorithms",
        "graphs",
        "implementation",
        "interactive",
        "shortest paths",
        "trees"
      ]
    },
    "A": {
      "name": "Ian and Array Sorting",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1814": {
    "F": {
      "name": "Communication Towers",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "brute force",
        "divide and conquer",
        "dsu"
      ]
    },
    "E": {
      "name": "Chain Chips",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "data structures",
        "dp",
        "matrices"
      ]
    },
    "D": {
      "name": "Balancing Weapons",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "math",
        "two pointers"
      ]
    },
    "C": {
      "name": "Search in Parallel",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Long Legs",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "brute force",
        "math"
      ]
    },
    "A": {
      "name": "Coins",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1812": {
    "J": {
      "name": "Unmysterious Language",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "constructive algorithms",
        "strings"
      ]
    },
    "I": {
      "name": "Mountain Climber",
      "type": "PROGRAMMING",
      "tags": [
        "*special"
      ]
    },
    "H": {
      "name": "Expected Twist",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "interactive"
      ]
    },
    "G": {
      "name": "Colour Vision",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "F": {
      "name": "Factorization",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "number theory"
      ]
    },
    "E": {
      "name": "Not a Geometry Problem",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "*special",
        "constructive algorithms",
        "geometry",
        "math"
      ]
    },
    "D": {
      "name": "Trivial Conjecture",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Digits",
      "type": "PROGRAMMING",
      "tags": [
        "*special"
      ]
    },
    "B": {
      "name": "Was it Rated?",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "*special",
        "*special",
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Are You a Robot?",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "*special",
        "*special",
        "expression parsing",
        "strings"
      ]
    }
  },
  "1811": {
    "G2": {
      "name": "Vlad and the Nice Paths (hard version)",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "binary search",
        "combinatorics",
        "data structures",
        "dp",
        "math",
        "two pointers"
      ]
    },
    "G1": {
      "name": "Vlad and the Nice Paths (easy version)",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "F": {
      "name": "Is It Flower?",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dfs and similar",
        "graphs",
        "implementation"
      ]
    },
    "E": {
      "name": "Living Sequence",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "binary search",
        "dp",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Umka and a Long Flight",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Restore the Array",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "B": {
      "name": "Conveyor Belts",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Insert Digit",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "math",
        "strings"
      ]
    }
  },
  "1810": {
    "H": {
      "name": "Last Number",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 2900,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "G": {
      "name": "The Maximum Prefix",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3200,
      "tags": [
        "dp"
      ]
    },
    "F": {
      "name": "M-tree",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "math",
        "sortings",
        "trees"
      ]
    },
    "E": {
      "name": "Monsters",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy"
      ]
    },
    "D": {
      "name": "Climbing the Tree",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "math"
      ]
    },
    "C": {
      "name": "Make It Permutation",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Candies",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Beautiful Sequence",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "greedy"
      ]
    }
  },
  "1809": {
    "G": {
      "name": "Prediction",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "F": {
      "name": "Traveling in Berland",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "binary search",
        "data structures",
        "graphs",
        "greedy",
        "implementation"
      ]
    },
    "E": {
      "name": "Two Tanks",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "binary search",
        "dp",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Binary String Sorting",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "C": {
      "name": "Sum on Subarrays",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Points on Plane",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "binary search",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Garland",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1808": {
    "E3": {
      "name": "Minibuses on Venus (hard version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2800,
      "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "E2": {
      "name": "Minibuses on Venus (medium version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2500,
      "tags": [
        "combinatorics",
        "divide and conquer",
        "dp",
        "matrices"
      ]
    },
    "E1": {
      "name": "Minibuses on Venus (easy version)",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2200,
      "tags": [
        "combinatorics",
        "divide and conquer",
        "dp"
      ]
    },
    "D": {
      "name": "Petya, Petya, Petr, and Palindromes",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "two pointers"
      ]
    },
    "C": {
      "name": "Unlucky Numbers",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Playing in a Casino",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Lucky Numbers",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 900,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "1807": {
    "G2": {
      "name": "Subsequence Addition (Hard Version)",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "bitmasks",
        "dp",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "G1": {
      "name": "Subsequence Addition (Easy Version)",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "brute force",
        "data structures",
        "dp",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "F": {
      "name": "Bouncy Ball",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "brute force",
        "dfs and similar",
        "implementation"
      ]
    },
    "E": {
      "name": "Interview",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "binary search",
        "implementation",
        "interactive"
      ]
    },
    "D": {
      "name": "Odd Queries",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "C": {
      "name": "Find and Replace",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "B": {
      "name": "Grab the Candies",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Plus or Minus",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1806": {
    "F2": {
      "name": "GCD Master (hard version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2900,
      "tags": [
        "greedy",
        "math",
        "sortings"
      ]
    },
    "F1": {
      "name": "GCD Master (easy version)",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "greedy",
        "math",
        "number theory",
        "sortings"
      ]
    },
    "E": {
      "name": "Tree Master",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "data structures",
        "dfs and similar",
        "trees"
      ]
    },
    "D": {
      "name": "DSU Master",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "combinatorics",
        "dp",
        "dsu",
        "math"
      ]
    },
    "C": {
      "name": "Sequence Master",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "constructive algorithms",
        "math"
      ]
    },
    "B": {
      "name": "Mex Master",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "Walking Master",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "geometry",
        "greedy",
        "math"
      ]
    }
  },
  "1805": {
    "F2": {
      "name": "Survival of the Weakest (hard version)",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 3100,
      "tags": [
        "greedy",
        "math",
        "sortings",
        "two pointers"
      ]
    },
    "F1": {
      "name": "Survival of the Weakest (easy version)",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2600,
      "tags": [
        "binary search",
        "brute force",
        "implementation",
        "math",
        "sortings"
      ]
    },
    "E": {
      "name": "There Should Be a Lot of Maximums",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "data structures",
        "dfs and similar",
        "dp",
        "trees",
        "two pointers"
      ]
    },
    "D": {
      "name": "A Wide, Wide Graph",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1800,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "C": {
      "name": "Place for a Selfie",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "binary search",
        "data structures",
        "geometry",
        "math"
      ]
    },
    "B": {
      "name": "The String Has a Target",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "greedy",
        "strings"
      ]
    },
    "A": {
      "name": "We Need the Zero",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "bitmasks",
        "brute force"
      ]
    }
  },
  "1804": {
    "H": {
      "name": "Code Lock",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3300,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "G": {
      "name": "Flow Control",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3500,
      "tags": [
        "data structures",
        "dsu",
        "implementation"
      ]
    },
    "F": {
      "name": "Approximate Diameter",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2700,
      "tags": [
        "binary search",
        "divide and conquer",
        "graphs",
        "shortest paths"
      ]
    },
    "E": {
      "name": "Routing",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar",
        "dp",
        "graphs"
      ]
    },
    "D": {
      "name": "Accommodation",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Pull Your Luck",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Vaccination",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Lame King",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1802": {
    "B": {
      "name": "Settlement of Guinea Pigs",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Likes",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "1801": {
    "G": {
      "name": "A task for substrings",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3400,
      "tags": [
        "data structures",
        "string suffix structures",
        "strings"
      ]
    },
    "F": {
      "name": "Another n-dimensional chocolate bar",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 2700,
      "tags": [
        "dp",
        "math",
        "meet-in-the-middle",
        "number theory"
      ]
    },
    "E": {
      "name": "Gasoline prices",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "divide and conquer",
        "dsu",
        "hashing",
        "trees"
      ]
    },
    "D": {
      "name": "The way home",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "graphs",
        "greedy",
        "shortest paths",
        "sortings"
      ]
    },
    "C": {
      "name": "Music Festival",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Buying gifts",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "The Very Beautiful Blanket",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "bitmasks",
        "constructive algorithms"
      ]
    }
  },
  "1800": {
    "G": {
      "name": "Symmetree",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "hashing",
        "implementation",
        "trees"
      ]
    },
    "F": {
      "name": "Dasha and Nightmares",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "bitmasks",
        "hashing",
        "meet-in-the-middle",
        "strings"
      ]
    },
    "E2": {
      "name": "Unforgivable Curse (hard version)",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "strings"
      ]
    },
    "E1": {
      "name": "Unforgivable Curse (easy version)",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dsu",
        "graphs",
        "greedy",
        "strings"
      ]
    },
    "D": {
      "name": "Remove Two Letters",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "data structures",
        "greedy",
        "hashing",
        "strings"
      ]
    },
    "C2": {
      "name": "Powering the Hero (hard version)",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "C1": {
      "name": "Powering the Hero (easy version)",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "B": {
      "name": "Count the Number of Pairs",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "greedy",
        "strings"
      ]
    },
    "A": {
      "name": "Is It a Cat?",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1799": {
    "H": {
      "name": "Tree Cutting",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3200,
      "tags": [
        "bitmasks",
        "dfs and similar",
        "dp"
      ]
    },
    "G": {
      "name": "Count Voting",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2600,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "F": {
      "name": "Halve or Subtract",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "binary search",
        "brute force",
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "E": {
      "name": "City Union",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "geometry",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "D2": {
      "name": "Hot Start Up (hard version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "D1": {
      "name": "Hot Start Up (easy version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Double Lexicographically Minimum",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "greedy",
        "strings"
      ]
    },
    "B": {
      "name": "Equalize by Divide",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Recent Actions",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "data structures",
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "1798": {
    "F": {
      "name": "Gifts from Grandfather Ahmed",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2500,
      "tags": [
        "dp",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Multitest Generator",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "dp"
      ]
    },
    "D": {
      "name": "Shocking Arrangement",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Candy Store",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1700,
      "tags": [
        "greedy",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Three Sevens",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Showstopper",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    }
  },
  "1797": {
    "F": {
      "name": "Li Hua and Path",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "dfs and similar",
        "divide and conquer",
        "dsu",
        "trees"
      ]
    },
    "E": {
      "name": "Li Hua and Array",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "data structures",
        "dsu",
        "math",
        "number theory",
        "two pointers"
      ]
    },
    "D": {
      "name": "Li Hua and Tree",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "data structures",
        "dfs and similar",
        "dp",
        "implementation",
        "trees"
      ]
    },
    "C": {
      "name": "Li Hua and Chess",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "greedy",
        "interactive"
      ]
    },
    "B": {
      "name": "Li Hua and Pattern",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "Li Hua and Maze",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "flows",
        "graphs",
        "greedy",
        "implementation"
      ]
    }
  },
  "1796": {
    "F": {
      "name": "Strange Triples",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Colored Subgraphs",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "dfs and similar",
        "dp",
        "games",
        "greedy",
        "trees"
      ]
    },
    "D": {
      "name": "Maximum Subarray",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "two pointers"
      ]
    },
    "C": {
      "name": "Maximum Set",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "binary search",
        "math"
      ]
    },
    "B": {
      "name": "Asterisk-Minor Template",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Typical Interview Problem",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    }
  },
  "1795": {
    "G": {
      "name": "Removal Sequences",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "bitmasks",
        "dfs and similar",
        "graphs"
      ]
    },
    "F": {
      "name": "Blocking Chips",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "binary search",
        "constructive algorithms",
        "dfs and similar",
        "greedy",
        "trees"
      ]
    },
    "E": {
      "name": "Explosions?",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "math"
      ]
    },
    "D": {
      "name": "Triangle Coloring",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "C": {
      "name": "Tea Tasting",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "binary search",
        "data structures",
        "implementation"
      ]
    },
    "B": {
      "name": "Ideal Point",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "brute force",
        "geometry",
        "greedy"
      ]
    },
    "A": {
      "name": "Two Towers",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    }
  },
  "1794": {
    "E": {
      "name": "Labeling the Tree with Distances",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "hashing",
        "implementation",
        "trees"
      ]
    },
    "D": {
      "name": "Counting Factorizations",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "combinatorics",
        "divide and conquer",
        "dp",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Scoring Subsequences",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1300,
      "tags": [
        "binary search",
        "greedy",
        "math",
        "two pointers"
      ]
    },
    "B": {
      "name": "Not Dividing",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Prefix and Suffix Array",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "strings"
      ]
    }
  },
  "1793": {
    "F": {
      "name": "Rebrending",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 2600,
      "tags": [
        "brute force",
        "data structures",
        "divide and conquer",
        "implementation"
      ]
    },
    "E": {
      "name": "Velepin and Marketing",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "D": {
      "name": "Moscow Gorillas",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "dp",
        "greedy",
        "implementation",
        "math",
        "two pointers"
      ]
    },
    "C": {
      "name": "Dora and Search",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "data structures",
        "two pointers"
      ]
    },
    "B": {
      "name": "Fedya and Array",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Yet Another Promotion",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1792": {
    "F2": {
      "name": "Graph Coloring (hard version)",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "brute force",
        "combinatorics",
        "divide and conquer",
        "dp",
        "fft",
        "graphs"
      ]
    },
    "F1": {
      "name": "Graph Coloring (easy version)",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "combinatorics",
        "dp",
        "graphs"
      ]
    },
    "E": {
      "name": "Divisors and Table",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "brute force",
        "dfs and similar",
        "dp",
        "number theory"
      ]
    },
    "D": {
      "name": "Fixed Prefix Permutations",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "binary search",
        "bitmasks",
        "data structures",
        "hashing",
        "math",
        "sortings"
      ]
    },
    "C": {
      "name": "Min Max Sort",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "binary search",
        "brute force",
        "greedy",
        "math",
        "two pointers"
      ]
    },
    "B": {
      "name": "Stand-up Comedian",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "GamingForces",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "sortings"
      ]
    }
  },
  "1791": {
    "G2": {
      "name": "Teleporters (Hard Version)",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "greedy",
        "sortings"
      ]
    },
    "G1": {
      "name": "Teleporters (Easy Version)",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "F": {
      "name": "Range Update Point Query",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "binary search",
        "brute force",
        "data structures"
      ]
    },
    "E": {
      "name": "Negatives and Positives",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "D": {
      "name": "Distinct Split",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "brute force",
        "greedy",
        "strings"
      ]
    },
    "C": {
      "name": "Prepend and Append",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "two pointers"
      ]
    },
    "B": {
      "name": "Following Directions",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "geometry",
        "implementation"
      ]
    },
    "A": {
      "name": "Codeforces Checking",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1790": {
    "G": {
      "name": "Tokens on Graph",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "shortest paths"
      ]
    },
    "F": {
      "name": "Timofey and Black-White Tree",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "brute force",
        "dfs and similar",
        "divide and conquer",
        "graphs",
        "greedy",
        "math",
        "shortest paths",
        "trees"
      ]
    },
    "E": {
      "name": "Vlad and a Pair of Numbers",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "bitmasks",
        "constructive algorithms"
      ]
    },
    "D": {
      "name": "Matryoshkas",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Premutation",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Taisia and Dice",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Polycarp and the Day of Pi",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "math",
        "strings"
      ]
    }
  },
  "1789": {
    "F": {
      "name": "Serval and Brain Power",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2700,
      "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "E": {
      "name": "Serval and Music Game",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "dp",
        "implementation",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Serval and Shift-Shift-Shift",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2200,
      "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "implementation"
      ]
    },
    "C": {
      "name": "Serval and Toxel's Arrays",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "combinatorics",
        "dp",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Serval and Inversion Magic",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 800,
      "tags": [
        "brute force",
        "implementation",
        "strings",
        "two pointers"
      ]
    },
    "A": {
      "name": "Serval and Mocha's Array",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    }
  },
  "1788": {
    "F": {
      "name": "XOR, Tree, and Queries",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "implementation",
        "trees"
      ]
    },
    "E": {
      "name": "Sum Over Zero",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "dfs and similar",
        "dp"
      ]
    },
    "D": {
      "name": "Moving Dots",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "brute force",
        "combinatorics",
        "math",
        "two pointers"
      ]
    },
    "C": {
      "name": "Matching Numbers",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Sum of Two Numbers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math",
        "probabilities"
      ]
    },
    "A": {
      "name": "One and Two",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    }
  },
  "1787": {
    "I": {
      "name": "Treasure Hunt",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 3400,
      "tags": [
        "data structures",
        "divide and conquer",
        "two pointers"
      ]
    },
    "H": {
      "name": "Codeforces Scoreboard",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3300,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "geometry"
      ]
    },
    "G": {
      "name": "Colorful Tree Again",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3000,
      "tags": [
        "brute force",
        "data structures",
        "trees"
      ]
    },
    "F": {
      "name": "Inverse Transformation",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "implementation",
        "math"
      ]
    },
    "E": {
      "name": "The Harmonization of XOR",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2100,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "D": {
      "name": "Game on Axis",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "dsu",
        "graphs",
        "implementation"
      ]
    },
    "C": {
      "name": "Remove the Bracket",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1600,
      "tags": [
        "dp",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Number Factorization",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Exponential Equation",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1786": {
    "B": {
      "name": "Cake Assembly Line",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "sortings"
      ]
    },
    "A2": {
      "name": "Alternating Deck (hard version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    },
    "A1": {
      "name": "Non-alternating Deck (easy version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1784": {
    "F": {
      "name": "Minimums or Medians",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3400,
      "tags": []
    },
    "E": {
      "name": "Infinite Game",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3100,
      "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "games",
        "probabilities"
      ]
    },
    "D": {
      "name": "Wooden Spoon",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "C": {
      "name": "Monsters (hard version)",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "B": {
      "name": "Letter Exchange",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "Monsters (easy version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "greedy"
      ]
    }
  },
  "1783": {
    "G": {
      "name": "Weighed Tree Radius",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "data structures",
        "divide and conquer",
        "implementation",
        "trees"
      ]
    },
    "F": {
      "name": "Double Sort II",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "dfs and similar",
        "flows",
        "graph matchings",
        "graphs"
      ]
    },
    "E": {
      "name": "Game of the Year",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "brute force",
        "data structures",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Different Arrays",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "brute force",
        "dp",
        "implementation"
      ]
    },
    "C": {
      "name": "Yet Another Tournament",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "binary search",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Matrix of Differences",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Make it Beautiful",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math",
        "sortings"
      ]
    }
  },
  "1781": {
    "H2": {
      "name": "Window Signals (hard version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 3500,
      "tags": []
    },
    "H1": {
      "name": "Window Signals (easy version)",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 3200,
      "tags": []
    },
    "G": {
      "name": "Diverse Coloring",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3200,
      "tags": [
        "constructive algorithms",
        "trees"
      ]
    },
    "F": {
      "name": "Bracket Insertion",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 2700,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "trees"
      ]
    },
    "E": {
      "name": "Rectangle Shrinking",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "greedy",
        "implementation",
        "two pointers"
      ]
    },
    "D": {
      "name": "Many Perfect Squares",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Equal Frequencies",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "implementation",
        "sortings",
        "strings"
      ]
    },
    "B": {
      "name": "Going to the Cinema",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Parallel Projection",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "geometry",
        "math"
      ]
    }
  },
  "1780": {
    "G": {
      "name": "Delicious Dessert",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "dsu",
        "hashing",
        "math",
        "number theory",
        "string suffix structures"
      ]
    },
    "F": {
      "name": "Three Chairs",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "bitmasks",
        "brute force",
        "combinatorics",
        "data structures",
        "dp",
        "number theory",
        "sortings"
      ]
    },
    "E": {
      "name": "Josuke and Complete Graph",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Bit Guessing Game",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "bitmasks",
        "constructive algorithms",
        "interactive"
      ]
    },
    "B": {
      "name": "GCD Partition",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Hayato and School",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    }
  },
  "1779": {
    "H": {
      "name": "Olympic Team Building",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3500,
      "tags": [
        "brute force",
        "meet-in-the-middle"
      ]
    },
    "G": {
      "name": "The Game of the Century",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3000,
      "tags": [
        "constructive algorithms",
        "graphs",
        "shortest paths"
      ]
    },
    "F": {
      "name": "Xorcerer's Stones",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "dp",
        "trees"
      ]
    },
    "E": {
      "name": "Anya's Simultaneous Exhibition",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "graphs",
        "greedy",
        "interactive",
        "sortings"
      ]
    },
    "D": {
      "name": "Boris and His Amazing Haircut",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "data structures",
        "dp",
        "dsu",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Least Prefix Sum",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1600,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "B": {
      "name": "MKnez's ConstructiveForces Task",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 900,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Hall of Fame",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "strings"
      ]
    }
  },
  "1778": {
    "F": {
      "name": "Maximizing Root",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2600,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "math",
        "number theory",
        "trees"
      ]
    },
    "E": {
      "name": "The Tree Has Fallen!",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "dfs and similar",
        "math",
        "trees"
      ]
    },
    "D": {
      "name": "Flexible String Revisit",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2100,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "probabilities"
      ]
    },
    "C": {
      "name": "Flexible String",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1600,
      "tags": [
        "bitmasks",
        "brute force",
        "strings"
      ]
    },
    "B": {
      "name": "The Forbidden Permutation",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Flip Flop Sum",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "1777": {
    "F": {
      "name": "Comfortably Numb",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "data structures",
        "divide and conquer",
        "strings",
        "trees"
      ]
    },
    "E": {
      "name": "Edge Reverse",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "D": {
      "name": "Score of a Tree",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dfs and similar",
        "dp",
        "math",
        "probabilities",
        "trees"
      ]
    },
    "C": {
      "name": "Quiz Master",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "math",
        "number theory",
        "sortings",
        "two pointers"
      ]
    },
    "B": {
      "name": "Emordnilap",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "combinatorics",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Everybody Likes Good Arrays!",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1776": {
    "N": {
      "name": "Count Permutations",
      "type": "PROGRAMMING",
      "rating": 3500,
      "tags": [
        "math"
      ]
    },
    "M": {
      "name": "Parmigiana With Seafood",
      "type": "PROGRAMMING",
      "rating": 3000,
      "tags": [
        "binary search",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "L": {
      "name": "Controllers",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "binary search",
        "math"
      ]
    },
    "K": {
      "name": "Uniform Chemistry",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": [
        "dp",
        "math"
      ]
    },
    "J": {
      "name": "Italian Data Centers",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "graphs",
        "shortest paths"
      ]
    },
    "I": {
      "name": "Spinach Pizza",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "games",
        "geometry",
        "greedy",
        "interactive"
      ]
    },
    "H": {
      "name": "Beppa and SwerChat",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "two pointers"
      ]
    },
    "G": {
      "name": "Another Wine Tasting Event",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "math",
        "strings"
      ]
    },
    "F": {
      "name": "Train Splitting",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "graphs",
        "greedy"
      ]
    },
    "E": {
      "name": "Crossing the Railways",
      "type": "PROGRAMMING",
      "rating": 3500,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "D": {
      "name": "Teamwork",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Library game",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "games",
        "greedy",
        "interactive",
        "sortings"
      ]
    },
    "B": {
      "name": "Vittorio Plays with LEGO Bricks",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "dp",
        "geometry"
      ]
    },
    "A": {
      "name": "Walking Boy",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy"
      ]
    }
  },
  "1775": {
    "F": {
      "name": "Laboratory on Pluto",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy",
        "math"
      ]
    },
    "E": {
      "name": "The Human Equation",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2100,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "D": {
      "name": "Friendly Spiders",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "dfs and similar",
        "graphs",
        "math",
        "number theory",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Interesting Sequence",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "bitmasks",
        "math"
      ]
    },
    "B": {
      "name": "Gardener and the Array",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "bitmasks",
        "constructive algorithms"
      ]
    },
    "A2": {
      "name": "Gardener and the Capybaras (hard version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "A1": {
      "name": "Gardener and the Capybaras (easy version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "1774": {
    "H": {
      "name": "Maximum Permutation",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3500,
      "tags": [
        "constructive algorithms"
      ]
    },
    "G": {
      "name": "Segment Covering",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3200,
      "tags": [
        "brute force",
        "combinatorics",
        "constructive algorithms",
        "data structures",
        "dp",
        "trees"
      ]
    },
    "F2": {
      "name": "Magician and Pigs (Hard Version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2700,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "implementation"
      ]
    },
    "F1": {
      "name": "Magician and Pigs (Easy Version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "brute force",
        "data structures",
        "implementation"
      ]
    },
    "E": {
      "name": "Two Chess Pieces",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "D": {
      "name": "Same Count One",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "implementation",
        "two pointers"
      ]
    },
    "C": {
      "name": "Ice and Fire",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy"
      ]
    },
    "B": {
      "name": "Coloring",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Add Plus Minus Sign",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1773": {
    "L": {
      "name": "Lisa's Sequences",
      "type": "PROGRAMMING",
      "rating": 3500,
      "tags": [
        "dp"
      ]
    },
    "K": {
      "name": "King's Puzzle",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "constructive algorithms"
      ]
    },
    "J": {
      "name": "Jumbled Trees",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "I": {
      "name": "Interactive Factorial Guessing",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "brute force",
        "games",
        "implementation",
        "interactive"
      ]
    },
    "H": {
      "name": "Hot and Cold",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "binary search",
        "interactive"
      ]
    },
    "G": {
      "name": "Game of Questions",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "fft",
        "math",
        "probabilities"
      ]
    },
    "F": {
      "name": "Football",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "constructive algorithms"
      ]
    },
    "E": {
      "name": "Easy Assembly",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "D": {
      "name": "Dominoes",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "combinatorics",
        "flows",
        "graph matchings",
        "greedy"
      ]
    },
    "C": {
      "name": "Cactus Meets Torus",
      "type": "PROGRAMMING",
      "rating": 3500,
      "tags": []
    },
    "B": {
      "name": "BinCoin",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "binary search",
        "divide and conquer",
        "hashing",
        "implementation",
        "probabilities",
        "trees"
      ]
    },
    "A": {
      "name": "Amazing Trick",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "graph matchings",
        "math",
        "probabilities"
      ]
    }
  },
  "1772": {
    "G": {
      "name": "Gaining Rating",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "binary search",
        "greedy",
        "implementation",
        "math",
        "sortings",
        "two pointers"
      ]
    },
    "F": {
      "name": "Copy of a Copy of a Copy",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "implementation",
        "sortings"
      ]
    },
    "E": {
      "name": "Permutation Game",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "games"
      ]
    },
    "D": {
      "name": "Absolute Sorting",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "C": {
      "name": "Different Differences",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Matrix Rotation",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "A+B?",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1771": {
    "F": {
      "name": "Hossam and Range Minimum Query",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "bitmasks",
        "data structures",
        "hashing",
        "probabilities",
        "strings",
        "trees"
      ]
    },
    "E": {
      "name": "Hossam and a Letter",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "dp",
        "implementation",
        "two pointers"
      ]
    },
    "D": {
      "name": "Hossam and (sub-)palindromic tree",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "data structures",
        "dfs and similar",
        "dp",
        "strings",
        "trees"
      ]
    },
    "C": {
      "name": "Hossam and Trainees",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1600,
      "tags": [
        "greedy",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Hossam and Friends",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "binary search",
        "constructive algorithms",
        "dp",
        "two pointers"
      ]
    },
    "A": {
      "name": "Hossam and Combinatorics",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "combinatorics",
        "math",
        "sortings"
      ]
    }
  },
  "1770": {
    "H": {
      "name": "Koxia, Mahiru and Winter Festival",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3500,
      "tags": [
        "constructive algorithms"
      ]
    },
    "G": {
      "name": "Koxia and Bracket",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3400,
      "tags": [
        "divide and conquer",
        "fft",
        "math"
      ]
    },
    "F": {
      "name": "Koxia and Sequence",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Koxia and Tree",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "dp",
        "dsu",
        "math",
        "probabilities",
        "trees"
      ]
    },
    "D": {
      "name": "Koxia and Game",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "data structures",
        "dfs and similar",
        "dsu",
        "flows",
        "games",
        "graph matchings",
        "graphs",
        "implementation"
      ]
    },
    "C": {
      "name": "Koxia and Number Theory",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "chinese remainder theorem",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Koxia and Permutation",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "Koxia and Whiteboards",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "greedy"
      ]
    }
  },
  "1769": {
    "D3": {
      "name": "\u0418\u0433\u0440\u0430 \u0432 \u0414\u0435\u0432\u044f\u0442\u043a\u0443 III",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "*special",
        "brute force"
      ]
    },
    "D2": {
      "name": "\u0418\u0433\u0440\u0430 \u0432 \u0414\u0435\u0432\u044f\u0442\u043a\u0443 II",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "*special",
        "brute force"
      ]
    },
    "D1": {
      "name": "\u0418\u0433\u0440\u0430 \u0432 \u0414\u0435\u0432\u044f\u0442\u043a\u0443 I",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special",
        "brute force",
        "dp"
      ]
    },
    "C2": {
      "name": "\u041f\u043e\u0434\u043a\u0440\u0443\u0442\u043a\u0430 II",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "*special",
        "dp"
      ]
    },
    "C1": {
      "name": "\u041f\u043e\u0434\u043a\u0440\u0443\u0442\u043a\u0430 I",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "*special",
        "brute force",
        "dp",
        "greedy"
      ]
    },
    "B2": {
      "name": "\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 II",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "*special",
        "binary search",
        "brute force",
        "math"
      ]
    },
    "B1": {
      "name": "\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 I",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "*special",
        "brute force",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "\u0423\u0437\u043a\u0430\u044f \u0434\u043e\u0440\u043e\u0433\u0430",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "*special",
        "math"
      ]
    }
  },
  "1768": {
    "F": {
      "name": "Wonderful Jump",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 2900,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "E": {
      "name": "Partial Sorting",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "combinatorics",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Lucky Permutation",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy"
      ]
    },
    "C": {
      "name": "Elemental Decompress",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Quick Sort",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Greatest Convex",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "math",
        "number theory"
      ]
    }
  },
  "1767": {
    "F": {
      "name": "Two Subtrees",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "E": {
      "name": "Algebra Flash",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "graphs",
        "math",
        "meet-in-the-middle",
        "trees"
      ]
    },
    "D": {
      "name": "Playoff",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "dp",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Count Binary Strings",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "B": {
      "name": "Block Towers",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Cut the Triangle",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1766": {
    "F": {
      "name": "MCF",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "flows"
      ]
    },
    "E": {
      "name": "Decomposition",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "divide and conquer",
        "dp",
        "two pointers"
      ]
    },
    "D": {
      "name": "Lucky Chains",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Hamiltonian Wall",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "dp",
        "implementation"
      ]
    },
    "B": {
      "name": "Notepad#",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Extremely Round",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "1765": {
    "N": {
      "name": "Number Reduction",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "greedy"
      ]
    },
    "M": {
      "name": "Minimum LCM",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "L": {
      "name": "Project Manager",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "brute force",
        "data structures",
        "implementation"
      ]
    },
    "K": {
      "name": "Torus Path",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "J": {
      "name": "Hero to Zero",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "graph matchings",
        "math"
      ]
    },
    "I": {
      "name": "Infinite Chess",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "implementation",
        "shortest paths"
      ]
    },
    "H": {
      "name": "Hospital Queue",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "binary search",
        "graphs",
        "greedy",
        "implementation"
      ]
    },
    "G": {
      "name": "Guess the String",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "constructive algorithms",
        "interactive",
        "probabilities"
      ]
    },
    "F": {
      "name": "Chemistry Lab",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "dp",
        "geometry",
        "probabilities"
      ]
    },
    "E": {
      "name": "Exchange",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "brute force",
        "math"
      ]
    },
    "D": {
      "name": "Watch the Videos",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "binary search",
        "constructive algorithms",
        "two pointers"
      ]
    },
    "C": {
      "name": "Card Guessing",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "combinatorics",
        "dp",
        "probabilities"
      ]
    },
    "B": {
      "name": "Broken Keyboard",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Access Levels",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "bitmasks",
        "dsu",
        "flows",
        "graph matchings"
      ]
    }
  },
  "1764": {
    "H": {
      "name": "Doremy's Paint 2",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3400,
      "tags": [
        "data structures"
      ]
    },
    "G3": {
      "name": "Doremy's Perfect DS Class (Hard Version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 3300,
      "tags": [
        "binary search",
        "interactive"
      ]
    },
    "G2": {
      "name": "Doremy's Perfect DS Class (Medium Version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 3000,
      "tags": [
        "binary search",
        "interactive"
      ]
    },
    "G1": {
      "name": "Doremy's Perfect DS Class (Easy Version)",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "binary search",
        "interactive"
      ]
    },
    "F": {
      "name": "Doremy's Experimental Tree",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "sortings",
        "trees"
      ]
    },
    "E": {
      "name": "Doremy's Number Line",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2400,
      "tags": [
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "D": {
      "name": "Doremy's Pegging Game",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2000,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "C": {
      "name": "Doremy's City Construction",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "graphs",
        "greedy"
      ]
    },
    "B": {
      "name": "Doremy's Perfect Math Class",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Doremy's Paint",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy"
      ]
    }
  },
  "1763": {
    "F": {
      "name": "Edge Queries",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "dsu",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "Node Pairs",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "dp",
        "graphs",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Valid Bitonic Permutations",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "combinatorics",
        "dp",
        "implementation",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Another Array Problem",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
      ]
    },
    "B": {
      "name": "Incinerate",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "implementation",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Absolute Maximization",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "greedy",
        "math"
      ]
    }
  },
  "1762": {
    "G": {
      "name": "Unequal Adjacent Elements",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3100,
      "tags": [
        "constructive algorithms",
        "sortings"
      ]
    },
    "F": {
      "name": "Good Pairs ",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2600,
      "tags": [
        "binary search",
        "data structures",
        "dp"
      ]
    },
    "E": {
      "name": "Tree Sum",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "combinatorics",
        "math",
        "trees"
      ]
    },
    "D": {
      "name": "GCD Queries ",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "interactive",
        "number theory"
      ]
    },
    "C": {
      "name": "Binary Strings are Fun",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1400,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "B": {
      "name": "Make Array Good",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "implementation",
        "number theory",
        "sortings"
      ]
    },
    "A": {
      "name": "Divide and Conquer",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "math",
        "number theory"
      ]
    }
  },
  "1761": {
    "G": {
      "name": "Centroid Guess",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3500,
      "tags": [
        "interactive",
        "probabilities",
        "trees"
      ]
    },
    "F2": {
      "name": "Anti-median (Hard Version)",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3500,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "F1": {
      "name": "Anti-median (Easy Version)",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "dp",
        "math"
      ]
    },
    "E": {
      "name": "Make It Connected",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "brute force",
        "constructive algorithms",
        "dsu",
        "graphs",
        "greedy",
        "matrices",
        "trees",
        "two pointers"
      ]
    },
    "D": {
      "name": "Carry Bit",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2100,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "C": {
      "name": "Set Construction",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy"
      ]
    },
    "B": {
      "name": "Elimination of a Ring",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Two Permutations",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "constructive algorithms"
      ]
    }
  },
  "1760": {
    "G": {
      "name": "SlavicG's Favorite Problem",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "bitmasks",
        "dfs and similar",
        "graphs"
      ]
    },
    "F": {
      "name": "Quests",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "binary search",
        "greedy",
        "sortings"
      ]
    },
    "E": {
      "name": "Binary Inversions",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "data structures",
        "greedy",
        "math"
      ]
    },
    "D": {
      "name": "Challenging Valleys",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation",
        "two pointers"
      ]
    },
    "C": {
      "name": "Advantage",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "data structures",
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Atilla's Favorite Problem",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Medium Number",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "sortings"
      ]
    }
  },
  "1759": {
    "G": {
      "name": "Restore the Permutation",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "greedy",
        "math"
      ]
    },
    "F": {
      "name": "All Possible Digits",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "The Humanoid",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "brute force",
        "dp",
        "sortings"
      ]
    },
    "D": {
      "name": "Make It Round",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "brute force",
        "number theory"
      ]
    },
    "C": {
      "name": "Thermostat",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "greedy",
        "math",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Lost Permutation",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Yes-Yes?",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1758": {
    "F": {
      "name": "Decent Division",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "constructive algorithms",
        "data structures"
      ]
    },
    "E": {
      "name": "Tick, Tock",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2500,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "D": {
      "name": "Range = \u221aSum",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "brute force",
        "constructive algorithms",
        "math",
        "two pointers"
      ]
    },
    "C": {
      "name": "Almost All Multiples",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "number theory"
      ]
    },
    "B": {
      "name": "XOR = Average",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "SSeeeeiinngg DDoouubbllee",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "strings"
      ]
    }
  },
  "1754": {
    "B": {
      "name": "Kevin and Permutation",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Technical Support",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy"
      ]
    }
  },
  "1753": {
    "F": {
      "name": "Minecraft Series",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3500,
      "tags": [
        "brute force",
        "two pointers"
      ]
    },
    "E": {
      "name": "N Machines",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3300,
      "tags": [
        "binary search",
        "brute force",
        "greedy"
      ]
    },
    "D": {
      "name": "The Beach",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Wish I Knew How to Sort",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2000,
      "tags": [
        "dp",
        "math",
        "probabilities"
      ]
    },
    "B": {
      "name": "Factorial Divisibility",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1600,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "A2": {
      "name": "Make Nonzero Sum (hard version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy"
      ]
    },
    "A1": {
      "name": "Make Nonzero Sum (easy version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy"
      ]
    }
  },
  "1750": {
    "H": {
      "name": "BinaryStringForces",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3500,
      "tags": [
        "constructive algorithms",
        "data structures",
        "dp"
      ]
    },
    "G": {
      "name": "Doping",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3300,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "F": {
      "name": "Majority",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "strings"
      ]
    },
    "E": {
      "name": "Bracket Cost",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "data structures",
        "divide and conquer",
        "dp",
        "greedy",
        "strings"
      ]
    },
    "D": {
      "name": "Count GCD",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1800,
      "tags": [
        "combinatorics",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Complementary XOR",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "B": {
      "name": "Maximum Substring",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Indirect Sort",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "implementation",
        "math"
      ]
    }
  },
  "1749": {
    "F": {
      "name": "Distance to the Path",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "data structures",
        "dfs and similar",
        "trees"
      ]
    },
    "E": {
      "name": "Cactus Wall",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Counting Arrays",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Number Game",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "binary search",
        "data structures",
        "games",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Death's Blessing",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Cowardly Rooks",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "1748": {
    "F": {
      "name": "Circular Xor Reversal",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3000,
      "tags": [
        "bitmasks",
        "constructive algorithms"
      ]
    },
    "E": {
      "name": "Yet Another Array Counting Problem",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "data structures",
        "divide and conquer",
        "dp",
        "flows",
        "math",
        "trees"
      ]
    },
    "D": {
      "name": "ConstructOR ",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "bitmasks",
        "chinese remainder theorem",
        "combinatorics",
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Zero-Sum Prefixes",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "data structures",
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Diverse Substrings",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "The Ultimate Square",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1747": {
    "E": {
      "name": "List Generation",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "Yet Another Problem",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "bitmasks",
        "constructive algorithms",
        "data structures"
      ]
    },
    "C": {
      "name": "Swap Game",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1200,
      "tags": [
        "games"
      ]
    },
    "B": {
      "name": "BAN BAN",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "Two Groups",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    }
  },
  "1746": {
    "G": {
      "name": "Olympiad Training",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3500,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "flows",
        "geometry",
        "implementation",
        "sortings"
      ]
    },
    "F": {
      "name": "Kazaee",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "hashing",
        "probabilities"
      ]
    },
    "E2": {
      "name": "Joking (Hard Version)",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 3200,
      "tags": [
        "dp",
        "interactive"
      ]
    },
    "E1": {
      "name": "Joking (Easy Version)",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "constructive algorithms",
        "interactive",
        "ternary search"
      ]
    },
    "D": {
      "name": "Paths on the Tree",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "sortings",
        "trees"
      ]
    },
    "C": {
      "name": "Permutation Operations",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Rebellion",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "two pointers"
      ]
    },
    "A": {
      "name": "Maxmina",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    }
  },
  "1744": {
    "F": {
      "name": "MEX vs MED",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "math",
        "two pointers"
      ]
    },
    "E2": {
      "name": "Divisible Numbers (hard version)",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    },
    "E1": {
      "name": "Divisible Numbers (easy version)",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Divisibility by 2^n",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "greedy",
        "math",
        "sortings"
      ]
    },
    "C": {
      "name": "Traffic Light",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "binary search",
        "implementation",
        "two pointers"
      ]
    },
    "B": {
      "name": "Even-Odd Increments ",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Number Replacement",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "1743": {
    "G": {
      "name": "Antifibonacci Cut",
      "type": "PROGRAMMING",
      "rating": 3000,
      "tags": [
        "bitmasks",
        "combinatorics",
        "constructive algorithms",
        "data structures",
        "dp",
        "hashing",
        "math"
      ]
    },
    "F": {
      "name": "Intersection and Union",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "data structures",
        "dp",
        "matrices",
        "probabilities"
      ]
    },
    "E": {
      "name": "FTL",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "binary search",
        "dp"
      ]
    },
    "D": {
      "name": "Problem with Random Tests",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "probabilities"
      ]
    },
    "C": {
      "name": "Save the Magazines",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy"
      ]
    },
    "B": {
      "name": "Permutation Value",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "Password",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "combinatorics",
        "implementation",
        "math"
      ]
    }
  },
  "1742": {
    "G": {
      "name": "Orray",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "bitmasks",
        "brute force",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "F": {
      "name": "Smaller",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "greedy",
        "strings"
      ]
    },
    "E": {
      "name": "Scuza",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "binary search",
        "greedy",
        "math"
      ]
    },
    "D": {
      "name": "Coprime",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "brute force",
        "greedy",
        "number theory"
      ]
    },
    "C": {
      "name": "Stripes",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "implementation"
      ]
    },
    "B": {
      "name": "Increasing",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Sum",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1741": {
    "G": {
      "name": "Kirill and Company",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar",
        "dp",
        "flows",
        "graphs",
        "shortest paths"
      ]
    },
    "F": {
      "name": "Multi-Colored Segments",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "binary search",
        "data structures",
        "math",
        "sortings"
      ]
    },
    "E": {
      "name": "Sending a Sequence Over the Network",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "dp"
      ]
    },
    "D": {
      "name": "Masha and a Beautiful Tree",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "dfs and similar",
        "divide and conquer",
        "graphs",
        "sortings",
        "trees"
      ]
    },
    "C": {
      "name": "Minimize the Thickness",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "brute force",
        "greedy",
        "math",
        "two pointers"
      ]
    },
    "B": {
      "name": "Funny Permutation",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Compare T-Shirt Sizes",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "implementation",
        "strings"
      ]
    }
  },
  "1740": {
    "I": {
      "name": "Arranging Crystal Balls",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3500,
      "tags": [
        "data structures",
        "divide and conquer",
        "divide and conquer",
        "dp",
        "geometry",
        "graphs",
        "number theory"
      ]
    },
    "H": {
      "name": "MEX Tree Manipulation",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3300,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "G": {
      "name": "Dangerous Laser Power",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3100,
      "tags": [
        "constructive algorithms",
        "dsu",
        "sortings"
      ]
    },
    "F": {
      "name": "Conditional Mix",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "E": {
      "name": "Hanging Hearts",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "data structures",
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "D": {
      "name": "Knowledge Cards",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "data structures"
      ]
    },
    "C": {
      "name": "Bricks and Bags",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "games",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Jumbo Extra Cheese 2",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 800,
      "tags": [
        "geometry",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Factorise N+M",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "number theory"
      ]
    }
  },
  "1739": {
    "F": {
      "name": "Keyboard Design",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "bitmasks",
        "data structures",
        "dp",
        "string suffix structures",
        "strings"
      ]
    },
    "E": {
      "name": "Cleaning Robot",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "D": {
      "name": "Reset K Edges",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "C": {
      "name": "Card Game",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "dp",
        "games"
      ]
    },
    "B": {
      "name": "Array Recovery",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Immobile Knight",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1738": {
    "H": {
      "name": "Palindrome Addicts",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3300,
      "tags": [
        "data structures",
        "strings"
      ]
    },
    "G": {
      "name": "Anti-Increasing Addicts",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2900,
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy",
        "math"
      ]
    },
    "F": {
      "name": "Connectivity Addicts",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "dsu",
        "graphs",
        "greedy",
        "interactive",
        "shortest paths",
        "trees"
      ]
    },
    "E": {
      "name": "Balance Addicts",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "two pointers"
      ]
    },
    "D": {
      "name": "Permutation Addicts",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "trees"
      ]
    },
    "C": {
      "name": "Even Number Addicts",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "dp",
        "games",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Prefix Sum Addicts",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Glory Addicts",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    }
  },
  "1737": {
    "G": {
      "name": "Ela Takes Dancing Class",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 3500,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "F": {
      "name": "Ela and Prime GCD",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3300,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Ela Goes Hiking",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2500,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "probabilities"
      ]
    },
    "D": {
      "name": "Ela and the Wiring Wizard",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "dp",
        "graphs",
        "greedy",
        "implementation",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Ela and Crickets",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "games",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Ela's Fitness and the Luxury Number",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "binary search",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Ela Sorting Books",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "greedy",
        "implementation",
        "strings"
      ]
    }
  },
  "1736": {
    "E": {
      "name": "Swap and Take",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Equal Binary Subsequences",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "geometry",
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "C2": {
      "name": "Good Subarrays (Hard Version)",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "two pointers"
      ]
    },
    "C1": {
      "name": "Good Subarrays (Easy Version)",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1300,
      "tags": [
        "binary search",
        "data structures",
        "schedules",
        "two pointers"
      ]
    },
    "B": {
      "name": "Playing with GCD",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Make A Equal to B",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "greedy",
        "sortings"
      ]
    }
  },
  "1735": {
    "F": {
      "name": "Pebbles and Beads",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2900,
      "tags": [
        "data structures",
        "geometry"
      ]
    },
    "E": {
      "name": "House Planning",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "data structures",
        "graph matchings",
        "greedy"
      ]
    },
    "D": {
      "name": "Meta-set",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "combinatorics",
        "data structures",
        "hashing",
        "math"
      ]
    },
    "C": {
      "name": "Phase Shift",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "B": {
      "name": "Tea with Tangerines",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 900,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Working Week",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    }
  },
  "1734": {
    "F": {
      "name": "Zeros and Ones",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "divide and conquer",
        "dp",
        "math"
      ]
    },
    "E": {
      "name": "Rectangular Congruence",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "number theory"
      ]
    },
    "D": {
      "name": "Slime Escape",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "two pointers"
      ]
    },
    "C": {
      "name": "Removing Smallest Multiples",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Bright, Nice, Brilliant",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "Select Three Sticks",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "greedy",
        "sortings"
      ]
    }
  },
  "1733": {
    "E": {
      "name": "Conveyor",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "dp",
        "math"
      ]
    },
    "D2": {
      "name": "Zero-One (Hard Version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2000,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "D1": {
      "name": "Zero-One (Easy Version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Parity Shuffle Sorting",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "sortings"
      ]
    },
    "B": {
      "name": "Rule of League",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Consecutive Sum",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "sortings"
      ]
    }
  },
  "1732": {
    "E": {
      "name": "Location",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "dp",
        "math",
        "number theory"
      ]
    },
    "D2": {
      "name": "Balance (Hard version)",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2400,
      "tags": [
        "brute force",
        "data structures",
        "number theory"
      ]
    },
    "D1": {
      "name": "Balance (Easy version)",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "data structures",
        "implementation",
        "number theory"
      ]
    },
    "C2": {
      "name": "Sheikh (Hard Version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "greedy",
        "implementation",
        "two pointers"
      ]
    },
    "C1": {
      "name": "Sheikh (Easy version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "bitmasks",
        "greedy",
        "two pointers"
      ]
    },
    "B": {
      "name": "Ugu",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 900,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Bestie",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "combinatorics",
        "constructive algorithms",
        "implementation",
        "math",
        "number theory"
      ]
    }
  },
  "1731": {
    "F": {
      "name": "Function Sum",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "fft",
        "math"
      ]
    },
    "E": {
      "name": "Graph Cost",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "dp",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Valiant's New Map",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dp",
        "two pointers"
      ]
    },
    "C": {
      "name": "Even Subarrays",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "bitmasks",
        "brute force",
        "hashing",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Kill Demodogs",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Joey Takes Money",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1730": {
    "F": {
      "name": "Almost Sorted",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "bitmasks",
        "data structures",
        "dp"
      ]
    },
    "E": {
      "name": "Maximums and Minimums",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2700,
      "tags": [
        "combinatorics",
        "data structures",
        "divide and conquer",
        "number theory"
      ]
    },
    "D": {
      "name": "Prefixes and Suffixes",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "strings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Minimum Notation",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1200,
      "tags": [
        "data structures",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "B": {
      "name": "Meeting on the Line",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "geometry",
        "greedy",
        "implementation",
        "math",
        "ternary search"
      ]
    },
    "A": {
      "name": "Planets",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "data structures",
        "greedy",
        "sortings"
      ]
    }
  },
  "1729": {
    "G": {
      "name": "Cut Substrings",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "combinatorics",
        "dp",
        "hashing",
        "strings",
        "two pointers"
      ]
    },
    "F": {
      "name": "Kirei and the Linear Function",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "hashing",
        "math"
      ]
    },
    "E": {
      "name": "Guess the Cycle Size",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "interactive",
        "probabilities"
      ]
    },
    "D": {
      "name": "Friends and the Restaurant",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Jumping on Tiles",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "strings"
      ]
    },
    "B": {
      "name": "Decode String",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "strings"
      ]
    },
    "A": {
      "name": "Two Elevators",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1728": {
    "G": {
      "name": "Illumination",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "combinatorics",
        "dp",
        "math",
        "two pointers"
      ]
    },
    "F": {
      "name": "Fishermen",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": [
        "flows",
        "graph matchings",
        "greedy"
      ]
    },
    "E": {
      "name": "Red-Black Pepper",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "brute force",
        "data structures",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Letter Picking",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "dp",
        "games",
        "two pointers"
      ]
    },
    "C": {
      "name": "Digital Logarithm",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Best Permutation",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "Colored Balls: Revisited",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "greedy",
        "implementation",
        "sortings"
      ]
    }
  },
  "1726": {
    "H": {
      "name": "Mainak and the Bleeding Polygon",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3500,
      "tags": [
        "binary search",
        "geometry",
        "implementation",
        "math"
      ]
    },
    "G": {
      "name": "A Certain Magical Party",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3300,
      "tags": [
        "combinatorics",
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "F": {
      "name": "Late For Work (submissions are not allowed)",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2900,
      "tags": [
        "data structures",
        "greedy",
        "schedules",
        "shortest paths"
      ]
    },
    "E": {
      "name": "Almost Perfect",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2400,
      "tags": [
        "combinatorics",
        "fft",
        "math"
      ]
    },
    "D": {
      "name": "Edge Split",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "probabilities",
        "trees"
      ]
    },
    "C": {
      "name": "Jatayu's Balanced Bracket Sequence",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "data structures",
        "dsu",
        "graphs",
        "greedy"
      ]
    },
    "B": {
      "name": "Mainak and Interesting Sequence",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Mainak and Array",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1725": {
    "M": {
      "name": "Moving Both Hands",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "dp",
        "graphs",
        "shortest paths"
      ]
    },
    "L": {
      "name": "Lemper Cooking Competition",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "data structures"
      ]
    },
    "K": {
      "name": "Kingdom of Criticism",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "data structures",
        "dsu"
      ]
    },
    "J": {
      "name": "Journey",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "dp",
        "trees"
      ]
    },
    "I": {
      "name": "Imitating the Key Tree",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "combinatorics",
        "dsu",
        "trees"
      ]
    },
    "H": {
      "name": "Hot Black Hot White",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "G": {
      "name": "Garage",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "binary search",
        "geometry",
        "math"
      ]
    },
    "F": {
      "name": "Field Photography",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "bitmasks",
        "data structures",
        "sortings"
      ]
    },
    "E": {
      "name": "Electrical Efficiency",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "combinatorics",
        "data structures",
        "dp",
        "math",
        "number theory",
        "trees"
      ]
    },
    "D": {
      "name": "Deducing Sortability",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "binary search",
        "bitmasks",
        "math"
      ]
    },
    "C": {
      "name": "Circular Mirror",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "binary search",
        "combinatorics",
        "geometry",
        "math",
        "two pointers"
      ]
    },
    "B": {
      "name": "Basketball Together",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "binary search",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Accumulation of Dominoes",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1722": {
    "G": {
      "name": "Even-Odd XOR",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "greedy"
      ]
    },
    "F": {
      "name": "L-shapes",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "implementation"
      ]
    },
    "E": {
      "name": "Counting Rectangles",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "brute force",
        "data structures",
        "dp",
        "implementation"
      ]
    },
    "D": {
      "name": "Line",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Word Game",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "B": {
      "name": "Colourblindness",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Spell Check",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1721": {
    "F": {
      "name": "Matching Reduction",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "flows",
        "graph matchings",
        "graphs",
        "interactive"
      ]
    },
    "E": {
      "name": "Prefix Function Queries",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "dp",
        "hashing",
        "string suffix structures",
        "strings",
        "trees"
      ]
    },
    "D": {
      "name": "Maximum AND",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "bitmasks",
        "dfs and similar",
        "divide and conquer",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Min-Max Array Transformation",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "binary search",
        "greedy",
        "two pointers"
      ]
    },
    "B": {
      "name": "Deadly Laser",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Image",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "1720": {
    "E": {
      "name": "Misha and Paintings",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "D2": {
      "name": "Xor-Subsequence (hard version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "data structures",
        "dp",
        "strings",
        "trees"
      ]
    },
    "D1": {
      "name": "Xor-Subsequence (easy version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "strings",
        "trees",
        "two pointers"
      ]
    },
    "C": {
      "name": "Corners",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Interesting Sum",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 800,
      "tags": [
        "brute force",
        "data structures",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Burenka Plays with Fractions",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "math",
        "number theory"
      ]
    }
  },
  "1719": {
    "C": {
      "name": "Fighting Tournament",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "binary search",
        "data structures",
        "implementation",
        "two pointers"
      ]
    },
    "B": {
      "name": "Mathematical Circus",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Chip Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "games",
        "math"
      ]
    }
  },
  "1718": {
    "F": {
      "name": "Burenka, an Array and Queries",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3300,
      "tags": [
        "data structures",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Impressionism",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3500,
      "tags": [
        "constructive algorithms",
        "graphs",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Permutation for Burenka",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3300,
      "tags": [
        "data structures",
        "graph matchings",
        "greedy",
        "math",
        "trees"
      ]
    },
    "C": {
      "name": "Tonya and Burenka-179",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Fibonacci Strings",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2000,
      "tags": [
        "greedy",
        "implementation",
        "math",
        "number theory"
      ]
    },
    "A2": {
      "name": "Burenka and Traditions (hard version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "A1": {
      "name": "Burenka and Traditions (easy version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "dp",
        "greedy"
      ]
    }
  },
  "1717": {
    "F": {
      "name": "Madoka and The First Session",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "flows",
        "graph matchings",
        "graphs",
        "implementation"
      ]
    },
    "E": {
      "name": "Madoka and The Best University",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Madoka and The Corruption Scheme",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Madoka and Formal Statement",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Madoka and Underground Competitions",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "Madoka and Strange Thoughts",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math",
        "number theory"
      ]
    }
  },
  "1716": {
    "F": {
      "name": "Bags with Balls",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Swap and Maximum Block",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "bitmasks",
        "data structures",
        "dfs and similar",
        "divide and conquer",
        "dp"
      ]
    },
    "D": {
      "name": "Chip Move",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "brute force",
        "dp",
        "math"
      ]
    },
    "C": {
      "name": "Robot in a Hallway",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "implementation",
        "ternary search"
      ]
    },
    "B": {
      "name": "Permutation Chain",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "2-3 Moves",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1715": {
    "F": {
      "name": "Crop Squares",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "geometry",
        "interactive",
        "math"
      ]
    },
    "E": {
      "name": "Long Way Home",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "divide and conquer",
        "dp",
        "geometry",
        "graphs",
        "greedy",
        "shortest paths"
      ]
    },
    "D": {
      "name": "2+ doors",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 1900,
      "tags": [
        "2-sat",
        "bitmasks",
        "graphs",
        "greedy"
      ]
    },
    "C": {
      "name": "Monoblock",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1700,
      "tags": [
        "combinatorics",
        "data structures",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Beautiful Array",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Crossmarket",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    }
  },
  "1714": {
    "G": {
      "name": "Path Prefixes",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "trees"
      ]
    },
    "F": {
      "name": "Build a Tree and That Is It",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "implementation",
        "trees"
      ]
    },
    "E": {
      "name": "Add Modulo 10",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Color with Occurrences",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "brute force",
        "data structures",
        "dp",
        "greedy",
        "strings"
      ]
    },
    "C": {
      "name": "Minimum  Varied Number",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Remove Prefix",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Everyone Loves to Sleep",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1713": {
    "F": {
      "name": "Lost Array",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2900,
      "tags": [
        "bitmasks",
        "combinatorics",
        "constructive algorithms",
        "dp",
        "math"
      ]
    },
    "E": {
      "name": "Cross Swapping",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "2-sat",
        "data structures",
        "dsu",
        "greedy",
        "matrices"
      ]
    },
    "D": {
      "name": "Tournament Countdown",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "interactive",
        "number theory",
        "probabilities"
      ]
    },
    "C": {
      "name": "Build Permutation",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "dp",
        "math"
      ]
    },
    "B": {
      "name": "Optimal Reduction",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "sortings"
      ]
    },
    "A": {
      "name": "Traveling Salesman Problem",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "geometry",
        "greedy",
        "implementation"
      ]
    }
  },
  "1712": {
    "F": {
      "name": "Triameter",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3200,
      "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "trees"
      ]
    },
    "E2": {
      "name": "LCM Sum (hard version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "data structures",
        "math",
        "number theory",
        "two pointers"
      ]
    },
    "E1": {
      "name": "LCM Sum (easy version)",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "brute force",
        "combinatorics",
        "math",
        "number theory",
        "two pointers"
      ]
    },
    "D": {
      "name": "Empty Graph",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "greedy",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Sort Zero",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Woeful Permutation",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "number theory"
      ]
    },
    "A": {
      "name": "Wonderful Permutation",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "1711": {
    "B": {
      "name": "Party",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "graphs"
      ]
    },
    "A": {
      "name": "Perfect Permutation",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms"
      ]
    }
  },
  "1710": {
    "E": {
      "name": "Two Arrays",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "games",
        "graph matchings"
      ]
    },
    "D": {
      "name": "Recover the Tree",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3400,
      "tags": [
        "constructive algorithms",
        "trees"
      ]
    },
    "C": {
      "name": "XOR Triangle",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "dp",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Rain",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "geometry",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Color the Picture",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    }
  },
  "1709": {
    "F": {
      "name": "Multiset of Strings",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "fft",
        "flows",
        "graphs",
        "math",
        "meet-in-the-middle",
        "trees"
      ]
    },
    "E": {
      "name": "XOR Tree",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "bitmasks",
        "data structures",
        "dfs and similar",
        "dsu",
        "greedy",
        "trees"
      ]
    },
    "D": {
      "name": "Rorororobot",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Recover an RBS",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "B": {
      "name": "Also Try Minecraft",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "data structures",
        "dp",
        "implementation"
      ]
    },
    "A": {
      "name": "Three Doors",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "1708": {
    "B": {
      "name": "Difference of GCDs",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Difference Operations",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1707": {
    "F": {
      "name": "Bugaboo",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3500,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "dp",
        "number theory"
      ]
    },
    "E": {
      "name": "Replace",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3500,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "D": {
      "name": "Partial Virtual Trees",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 3000,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "dp",
        "math",
        "trees"
      ]
    },
    "C": {
      "name": "DFS Trees",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2400,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "sortings",
        "trees"
      ]
    },
    "B": {
      "name": "Difference Array",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "data structures",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Doremy's IQ",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    }
  },
  "1706": {
    "E": {
      "name": "Qpwoeirut and Vertices",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "divide and conquer",
        "dsu",
        "greedy",
        "trees"
      ]
    },
    "D2": {
      "name": "Chopping Carrots (Hard Version)",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2400,
      "tags": [
        "brute force",
        "constructive algorithms",
        "data structures",
        "dp",
        "greedy",
        "math",
        "number theory",
        "two pointers"
      ]
    },
    "D1": {
      "name": "Chopping Carrots (Easy Version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "brute force",
        "constructive algorithms",
        "greedy",
        "number theory"
      ]
    },
    "C": {
      "name": "Qpwoeirut And The City",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "dp",
        "flows",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Making Towers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "dp",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Another String Minimization Problem",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "2-sat",
        "constructive algorithms",
        "greedy",
        "string suffix structures",
        "strings"
      ]
    }
  },
  "1705": {
    "F": {
      "name": "Mark and the Online Exam",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2900,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "interactive",
        "probabilities"
      ]
    },
    "E": {
      "name": "Mark and Professor Koro",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "combinatorics",
        "data structures",
        "greedy"
      ]
    },
    "D": {
      "name": "Mark and Lightbulbs",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1800,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "C": {
      "name": "Mark and His Unfinished Essay",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "B": {
      "name": "Mark the Dust Sweeper",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Mark the Photographer",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "sortings"
      ]
    }
  },
  "1704": {
    "H2": {
      "name": "Game of AI (hard version)",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3500,
      "tags": [
        "combinatorics",
        "fft",
        "math"
      ]
    },
    "H1": {
      "name": "Game of AI (easy version)",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3200,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "dp",
        "fft",
        "math"
      ]
    },
    "G": {
      "name": "Mio and Lucky Array",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3500,
      "tags": [
        "constructive algorithms",
        "fft",
        "math",
        "strings"
      ]
    },
    "F": {
      "name": "Colouring Game",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2600,
      "tags": [
        "constructive algorithms",
        "dp",
        "games"
      ]
    },
    "E": {
      "name": "Count Seconds",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dp",
        "graphs",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Magical Array",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "hashing",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Virus",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Luke is a Foodie",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Two 0-1 Sequences",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    }
  },
  "1703": {
    "G": {
      "name": "Good Key, Bad Key",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "greedy",
        "math"
      ]
    },
    "F": {
      "name": "Yet Another Problem About Pairs Satisfying an Inequality",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "E": {
      "name": "Mirror Grid",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    },
    "D": {
      "name": "Double Strings",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "brute force",
        "data structures",
        "strings"
      ]
    },
    "C": {
      "name": "Cypher",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    },
    "B": {
      "name": "ICPC Balloons",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "A": {
      "name": "YES or YES?",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    }
  },
  "1702": {
    "G2": {
      "name": "Passable Paths (hard version)",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "data structures",
        "dfs and similar",
        "trees"
      ]
    },
    "G1": {
      "name": "Passable Paths (easy version)",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "dfs and similar",
        "trees"
      ]
    },
    "F": {
      "name": "Equate Multisets",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Split Into Two Sets",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "D": {
      "name": "Not a Cheap String",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "greedy"
      ]
    },
    "C": {
      "name": "Train and Queries",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "B": {
      "name": "Polycarp Writes a String from Memory",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Round Down the Price",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "constructive algorithms"
      ]
    }
  },
  "1701": {
    "F": {
      "name": "Points",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "combinatorics",
        "data structures",
        "implementation",
        "math",
        "matrices"
      ]
    },
    "E": {
      "name": "Text Editor",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "strings"
      ]
    },
    "D": {
      "name": "Permutation Restoration",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "math",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Schedule Management",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "binary search",
        "greedy",
        "implementation",
        "two pointers"
      ]
    },
    "B": {
      "name": "Permutation",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Grass Field",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1700": {
    "F": {
      "name": "Puzzle",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2600,
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy"
      ]
    },
    "E": {
      "name": "Serega the Pirate",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "brute force",
        "constructive algorithms"
      ]
    },
    "D": {
      "name": "River Locks",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "dp",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Helping the Nature",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy"
      ]
    },
    "B": {
      "name": "Palindromic Numbers ",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Optimal Path",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    }
  },
  "1699": {
    "E": {
      "name": "Three Days Grace",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "math",
        "number theory",
        "two pointers"
      ]
    },
    "D": {
      "name": "Almost Triple Deletions",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "The Third Problem",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "math"
      ]
    },
    "B": {
      "name": "Almost Ternary Matrix",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "matrices"
      ]
    },
    "A": {
      "name": "The Third Three Number Problem",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1698": {
    "G": {
      "name": "Long Binary String",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 2900,
      "tags": [
        "bitmasks",
        "math",
        "matrices",
        "meet-in-the-middle",
        "number theory"
      ]
    },
    "F": {
      "name": "Equal Reversal",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "constructive algorithms",
        "graphs",
        "implementation",
        "math"
      ]
    },
    "E": {
      "name": "PermutationForces II",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "combinatorics",
        "greedy",
        "sortings",
        "trees",
        "two pointers"
      ]
    },
    "D": {
      "name": "Fixed Point Guessing",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "constructive algorithms",
        "interactive"
      ]
    },
    "C": {
      "name": "3SUM Closure",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "data structures"
      ]
    },
    "B": {
      "name": "Rising Sand",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "XOR Mixup",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 800,
      "tags": [
        "bitmasks",
        "brute force"
      ]
    }
  },
  "1697": {
    "F": {
      "name": "Too Many Constraints",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "2-sat",
        "constructive algorithms",
        "graphs",
        "implementation"
      ]
    },
    "E": {
      "name": "Coloring",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "brute force",
        "combinatorics",
        "constructive algorithms",
        "dp",
        "geometry",
        "graphs",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Guess The String",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "constructive algorithms",
        "interactive"
      ]
    },
    "C": {
      "name": "awoo's Favorite Problem",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "greedy",
        "implementation",
        "strings",
        "two pointers"
      ]
    },
    "B": {
      "name": "Promo",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Parkway Walk",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "1696": {
    "H": {
      "name": "Maximum Product?",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3500,
      "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "greedy",
        "implementation",
        "math",
        "two pointers"
      ]
    },
    "G": {
      "name": "Fishingprince Plays With Array Again",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3300,
      "tags": [
        "brute force",
        "data structures",
        "geometry",
        "math"
      ]
    },
    "F": {
      "name": "Tree Recovery",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "Placing Jinas",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "D": {
      "name": "Permutation Graph",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "divide and conquer",
        "greedy",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Fishingprince Plays With Array",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "NIT Destroys the Universe",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "NIT orz!",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "bitmasks",
        "greedy"
      ]
    }
  },
  "1695": {
    "E": {
      "name": "Ambiguous Dominoes",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs"
      ]
    },
    "D2": {
      "name": "Tree Queries (Hard Version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "D1": {
      "name": "Tree Queries (Easy Version)",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "C": {
      "name": "Zero Path",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "data structures",
        "dp",
        "graphs",
        "greedy",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Circle Game",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "games",
        "greedy"
      ]
    },
    "A": {
      "name": "Subrectangle Guess",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "games"
      ]
    }
  },
  "1694": {
    "B": {
      "name": "Paranoid String",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "Creep",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "1693": {
    "F": {
      "name": "I Might Be Wrong",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3400,
      "tags": [
        "binary search",
        "greedy",
        "two pointers"
      ]
    },
    "E": {
      "name": "Outermost Maximums",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3400,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "D": {
      "name": "Decinc Dividing",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2800,
      "tags": [
        "brute force",
        "data structures",
        "divide and conquer",
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Keshi in Search of AmShZ",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "graphs",
        "greedy",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Fake Plastic Trees",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "A": {
      "name": "Directional Increase",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1300,
      "tags": [
        "greedy"
      ]
    }
  },
  "1692": {
    "H": {
      "name": "Gambling",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "math"
      ]
    },
    "G": {
      "name": "2^Sort",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "data structures",
        "dp",
        "sortings",
        "two pointers"
      ]
    },
    "F": {
      "name": "3SUM",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "brute force",
        "math"
      ]
    },
    "E": {
      "name": "Binary Deque",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "binary search",
        "implementation",
        "two pointers"
      ]
    },
    "D": {
      "name": "The Clock",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "C": {
      "name": "Where's the Bishop?",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    },
    "B": {
      "name": "All Distinct",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Marathon",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1691": {
    "F": {
      "name": "K-Set Tree",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2500,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "dp",
        "math",
        "trees"
      ]
    },
    "E": {
      "name": "Number of Groups",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "sortings"
      ]
    },
    "D": {
      "name": "Max GEQ Sum",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "divide and conquer",
        "implementation",
        "two pointers"
      ]
    },
    "C": {
      "name": "Sum of Substrings",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math",
        "strings"
      ]
    },
    "B": {
      "name": "Shoe Shuffling",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "two pointers"
      ]
    },
    "A": {
      "name": "Beat The Odds",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "greedy",
        "math"
      ]
    }
  },
  "1690": {
    "G": {
      "name": "Count the Trains",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "F": {
      "name": "Shifting String",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "graphs",
        "math",
        "number theory",
        "strings"
      ]
    },
    "E": {
      "name": "Price Maximization",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "binary search",
        "greedy",
        "math",
        "two pointers"
      ]
    },
    "D": {
      "name": "Black and White Stripe",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation",
        "two pointers"
      ]
    },
    "C": {
      "name": "Restoring the Duration of Tasks",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Array Decrements",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Print a Pedestal (Codeforces logo?)",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    }
  },
  "1689": {
    "E": {
      "name": "ANDfinity",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "D": {
      "name": "Lena and Matrix",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "dp",
        "geometry",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Infected Tree",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "B": {
      "name": "Mystic Permutation",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 900,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "A": {
      "name": "Lex String",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "greedy",
        "implementation",
        "sortings",
        "two pointers"
      ]
    }
  },
  "1688": {
    "C": {
      "name": "Manipulating History",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "greedy",
        "strings"
      ]
    },
    "B": {
      "name": "Patchouli's Magical Talisman",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Cirno's Perfect Bitmasks Classroom",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "bitmasks",
        "brute force"
      ]
    }
  },
  "1687": {
    "F": {
      "name": "Koishi's Unconscious Permutation",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3500,
      "tags": [
        "fft",
        "math"
      ]
    },
    "E": {
      "name": "Become Big For Me",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3500,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Cute number",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2900,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dsu",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Sanae and Giant Robot",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dsu",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Railway System",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "graphs",
        "greedy",
        "interactive",
        "sortings"
      ]
    },
    "A": {
      "name": "The Enchanted Forest",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "greedy"
      ]
    }
  },
  "1686": {
    "B": {
      "name": "Odd Subarrays",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 800,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "A": {
      "name": "Everything Everywhere All But One",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy"
      ]
    }
  },
  "1685": {
    "E": {
      "name": "The Ultimate LIS Problem",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3500,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "D2": {
      "name": "Permutation Weight (Hard Version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 3500,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "D1": {
      "name": "Permutation Weight (Easy Version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2800,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dsu"
      ]
    },
    "C": {
      "name": "Bring Balance",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2600,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
      ]
    },
    "B": {
      "name": "Linguistics",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "greedy",
        "implementation",
        "sortings",
        "strings"
      ]
    },
    "A": {
      "name": "Circular Local MiniMax",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "greedy",
        "sortings"
      ]
    }
  },
  "1684": {
    "H": {
      "name": "Hard Cut",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3400,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "divide and conquer",
        "math"
      ]
    },
    "G": {
      "name": "Euclid Guess",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "constructive algorithms",
        "flows",
        "graph matchings",
        "math",
        "number theory"
      ]
    },
    "F": {
      "name": "Diverse Segments",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "two pointers"
      ]
    },
    "E": {
      "name": "MEX vs DIFF",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "brute force",
        "constructive algorithms",
        "data structures",
        "greedy",
        "two pointers"
      ]
    },
    "D": {
      "name": "Traps",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Column Swapping",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Z mod X = C",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Digit Minimization",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "games",
        "math",
        "strings"
      ]
    }
  },
  "1682": {
    "F": {
      "name": "MCMF?",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "flows",
        "graphs",
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "E": {
      "name": "Unordered Swaps",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy",
        "math",
        "sortings",
        "trees"
      ]
    },
    "D": {
      "name": "Circular Spanning Tree",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "implementation",
        "trees"
      ]
    },
    "C": {
      "name": "LIS or Reverse LIS?",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "AND Sorting",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "sortings"
      ]
    },
    "A": {
      "name": "Palindromic Indices",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "greedy",
        "strings"
      ]
    }
  },
  "1681": {
    "F": {
      "name": "Unique Occurrences",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "data structures",
        "dfs and similar",
        "divide and conquer",
        "dp",
        "dsu",
        "trees"
      ]
    },
    "E": {
      "name": "Labyrinth Adventures",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "data structures",
        "dp",
        "matrices",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Required Length",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "brute force",
        "dfs and similar",
        "dp",
        "hashing",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Double Sort",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Card Trick",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Game with Cards",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "games",
        "greedy"
      ]
    }
  },
  "1680": {
    "F": {
      "name": "Lenient Vertex Cover",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "dfs and similar",
        "divide and conquer",
        "dsu",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "Moving Chips",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "bitmasks",
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Dog Walking",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "brute force",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Binary String",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "binary search",
        "greedy",
        "strings",
        "two pointers"
      ]
    },
    "B": {
      "name": "Robots",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Minimums and Maximums",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "math"
      ]
    }
  },
  "1679": {
    "F": {
      "name": "Formalism for Formalism",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2600,
      "tags": [
        "bitmasks",
        "dp",
        "math"
      ]
    },
    "E": {
      "name": "Typical Party in Dorm",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "strings"
      ]
    },
    "D": {
      "name": "Toss a Coin to Your Graph...",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "dfs and similar",
        "dp",
        "graphs"
      ]
    },
    "C": {
      "name": "Rooks Defenders",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "B": {
      "name": "Stone Age Problem",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "A": {
      "name": "AvtoBus",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "brute force",
        "greedy",
        "math",
        "number theory"
      ]
    }
  },
  "1678": {
    "B2": {
      "name": "Tokitsukaze and Good 01-String (hard version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "B1": {
      "name": "Tokitsukaze and Good 01-String (easy version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Tokitsukaze and All Zero Sequence",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1677": {
    "F": {
      "name": "Tokitsukaze and Gems",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3500,
      "tags": [
        "dp",
        "math"
      ]
    },
    "E": {
      "name": "Tokitsukaze and Beautiful Subsegments",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Tokitsukaze and Permutations",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "dp",
        "math"
      ]
    },
    "C": {
      "name": "Tokitsukaze and Two Colorful Tapes",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy"
      ]
    },
    "B": {
      "name": "Tokitsukaze and Meeting",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1700,
      "tags": [
        "data structures",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Tokitsukaze and Strange Inequality",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "data structures",
        "dp"
      ]
    }
  },
  "1676": {
    "H2": {
      "name": "Maximum Crossings (Hard Version)",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "data structures",
        "divide and conquer",
        "sortings"
      ]
    },
    "H1": {
      "name": "Maximum Crossings (Easy Version)",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "brute force"
      ]
    },
    "G": {
      "name": "White-Black Balanced Subtrees",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
      ]
    },
    "F": {
      "name": "Longest Strike",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "data structures",
        "greedy",
        "implementation",
        "sortings",
        "two pointers"
      ]
    },
    "E": {
      "name": "Eating Queries",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "binary search",
        "greedy",
        "sortings"
      ]
    },
    "D": {
      "name": "X-Sum",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Most Similar Words",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "greedy",
        "implementation",
        "implementation",
        "math",
        "strings"
      ]
    },
    "B": {
      "name": "Equal Candies",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Lucky?",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1675": {
    "G": {
      "name": "Sorting Pancakes",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "dp"
      ]
    },
    "F": {
      "name": "Vlad and Unfinished Business",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "E": {
      "name": "Replace With the Previous, Minimize",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "dsu",
        "greedy",
        "strings"
      ]
    },
    "D": {
      "name": "Vertical Paths",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "graphs",
        "implementation",
        "trees"
      ]
    },
    "C": {
      "name": "Detective Task",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    },
    "B": {
      "name": "Make It Increasing",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Food for Animals",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1674": {
    "G": {
      "name": "Remove Directed Edges",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs"
      ]
    },
    "F": {
      "name": "Desktop Rearrangement",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "E": {
      "name": "Breaking the Wall",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "binary search",
        "brute force",
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "D": {
      "name": "A-B-C Sort",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "implementation",
        "sortings"
      ]
    },
    "C": {
      "name": "Infinite Replacement",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "combinatorics",
        "implementation",
        "strings"
      ]
    },
    "B": {
      "name": "Dictionary",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "A": {
      "name": "Number Transformation",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1673": {
    "F": {
      "name": "Anti-Theft Road Planning",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "divide and conquer",
        "greedy",
        "interactive",
        "math"
      ]
    },
    "E": {
      "name": "Power or XOR?",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "combinatorics",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Lost Arithmetic Progression",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "combinatorics",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Palindrome Basis",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "dp",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "A Perfectly Balanced String?",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "greedy",
        "strings"
      ]
    },
    "A": {
      "name": "Subtle Substring Subtraction",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "games",
        "greedy",
        "strings"
      ]
    }
  },
  "1672": {
    "I": {
      "name": "PermutationForces",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "H": {
      "name": "Zigu Zagu",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy"
      ]
    },
    "G": {
      "name": "Cross Xor",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3200,
      "tags": [
        "constructive algorithms",
        "graphs",
        "math",
        "matrices"
      ]
    },
    "F2": {
      "name": "Checker for Array Shuffling",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2800,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs"
      ]
    },
    "F1": {
      "name": "Array Shuffling",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "graphs",
        "greedy"
      ]
    },
    "E": {
      "name": "notepad.exe",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "interactive"
      ]
    },
    "D": {
      "name": "Cyclic Rotation",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "two pointers"
      ]
    },
    "C": {
      "name": "Unequal Array",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "I love AAAB",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "Log Chopping",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 800,
      "tags": [
        "games",
        "implementation",
        "math"
      ]
    }
  },
  "1671": {
    "F": {
      "name": "Permutation Counting",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "fft",
        "math"
      ]
    },
    "E": {
      "name": "Preorder",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "combinatorics",
        "divide and conquer",
        "dp",
        "dsu",
        "hashing",
        "sortings",
        "trees"
      ]
    },
    "D": {
      "name": "Insert a Progression",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
      ]
    },
    "C": {
      "name": "Dolce Vita",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "binary search",
        "brute force",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Consecutive Points Segment",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "brute force",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "String Building",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1670": {
    "F": {
      "name": "Jee, You See?",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dp"
      ]
    },
    "E": {
      "name": "Hemose on the Tree",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2200,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "dfs and similar",
        "trees"
      ]
    },
    "D": {
      "name": "Very Suspicious",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "brute force",
        "geometry",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Where is the Pizza?",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1400,
      "tags": [
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Dorms War",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Prof. Slim",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    }
  },
  "1669": {
    "H": {
      "name": "Maximal AND",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "bitmasks",
        "greedy",
        "math"
      ]
    },
    "G": {
      "name": "Fall Down",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "dfs and similar",
        "implementation"
      ]
    },
    "F": {
      "name": "Eating Candies",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "two pointers"
      ]
    },
    "E": {
      "name": "2-Letter Strings",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "data structures",
        "math",
        "strings"
      ]
    },
    "D": {
      "name": "Colorful Stamp",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    },
    "C": {
      "name": "Odd/Even Increments",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Triple",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Division?",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1668": {
    "B": {
      "name": "Social Distance",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "greedy",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Direction Change",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1667": {
    "F": {
      "name": "Yin Yang",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3500,
      "tags": [
        "implementation"
      ]
    },
    "E": {
      "name": "Centroid Probabilities",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3000,
      "tags": [
        "combinatorics",
        "dp",
        "fft",
        "math"
      ]
    },
    "D": {
      "name": "Edge Elimination",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "C": {
      "name": "Half Queen Cover",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "B": {
      "name": "Optimal Partition",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "A": {
      "name": "Make it Increasing",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "greedy",
        "math"
      ]
    }
  },
  "1666": {
    "L": {
      "name": "Labyrinth",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "K": {
      "name": "Kingdom Partition",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": [
        "flows"
      ]
    },
    "J": {
      "name": "Job Lookup",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "dp",
        "shortest paths",
        "trees"
      ]
    },
    "I": {
      "name": "Interactive Treasure Hunt",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "brute force",
        "constructive algorithms",
        "geometry",
        "interactive",
        "math"
      ]
    },
    "H": {
      "name": "Heroes of Might",
      "type": "PROGRAMMING",
      "rating": 3500,
      "tags": [
        "math"
      ]
    },
    "G": {
      "name": "Global Warming",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": [
        "geometry",
        "math"
      ]
    },
    "F": {
      "name": "Fancy Stack",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "combinatorics",
        "dp",
        "implementation"
      ]
    },
    "E": {
      "name": "Even Split",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "D": {
      "name": "Deletive Editing",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "greedy"
      ]
    },
    "C": {
      "name": "Connect the Points",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "geometry"
      ]
    },
    "B": {
      "name": "Budget Distribution",
      "type": "PROGRAMMING",
      "rating": 3300,
      "tags": []
    },
    "A": {
      "name": "Admissible Map",
      "type": "PROGRAMMING",
      "rating": 3300,
      "tags": []
    }
  },
  "1665": {
    "E": {
      "name": "MinimizOR",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "brute force",
        "data structures",
        "divide and conquer",
        "greedy",
        "implementation",
        "two pointers"
      ]
    },
    "D": {
      "name": "GCD Guess",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "bitmasks",
        "chinese remainder theorem",
        "constructive algorithms",
        "games",
        "interactive",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Tree Infection",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "greedy",
        "sortings",
        "trees"
      ]
    },
    "B": {
      "name": "Array Cloning Technique",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 900,
      "tags": [
        "constructive algorithms",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "GCD vs LCM",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1663": {
    "H": {
      "name": "Cross-Language Program",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "constructive algorithms"
      ]
    },
    "G": {
      "name": "Six Characters",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "constructive algorithms",
        "strings"
      ]
    },
    "F": {
      "name": "In Every Generation...",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "strings"
      ]
    },
    "E": {
      "name": "Are You Safe?",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "D": {
      "name": "Is it rated - 3",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "C": {
      "name": "P\u014dja Verdon",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Mike's Sequence",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "divide and conquer",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Who Tested?",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "expression parsing",
        "trees"
      ]
    }
  },
  "1662": {
    "O": {
      "name": "Circular Maze",
      "type": "PROGRAMMING",
      "tags": [
        "brute force",
        "dfs and similar",
        "graphs",
        "implementation"
      ]
    },
    "N": {
      "name": "Drone Photo",
      "type": "PROGRAMMING",
      "tags": [
        "combinatorics",
        "math",
        "sortings"
      ]
    },
    "M": {
      "name": "Bottle Arrangements",
      "type": "PROGRAMMING",
      "tags": [
        "constructive algorithms"
      ]
    },
    "L": {
      "name": "Il Derby della Madonnina",
      "type": "PROGRAMMING",
      "tags": [
        "data structures",
        "dp",
        "math"
      ]
    },
    "K": {
      "name": "Pandemic Restrictions",
      "type": "PROGRAMMING",
      "tags": [
        "geometry",
        "ternary search"
      ]
    },
    "J": {
      "name": "Training Camp",
      "type": "PROGRAMMING",
      "tags": [
        "flows",
        "graphs"
      ]
    },
    "I": {
      "name": "Ice Cream Shop",
      "type": "PROGRAMMING",
      "tags": [
        "brute force",
        "implementation",
        "sortings"
      ]
    },
    "H": {
      "name": "Boundary",
      "type": "PROGRAMMING",
      "tags": [
        "brute force",
        "math"
      ]
    },
    "G": {
      "name": "Gastronomic Event",
      "type": "PROGRAMMING",
      "tags": [
        "dp",
        "greedy",
        "trees"
      ]
    },
    "F": {
      "name": "Antennas",
      "type": "PROGRAMMING",
      "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "graphs",
        "implementation",
        "implementation",
        "shortest paths",
        "shortest paths"
      ]
    },
    "E": {
      "name": "Round Table",
      "type": "PROGRAMMING",
      "tags": [
        "math"
      ]
    },
    "D": {
      "name": "Evolution of Weasels",
      "type": "PROGRAMMING",
      "tags": [
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "C": {
      "name": "European Trip",
      "type": "PROGRAMMING",
      "tags": [
        "dp",
        "graphs",
        "math",
        "matrices"
      ]
    },
    "B": {
      "name": "Toys",
      "type": "PROGRAMMING",
      "tags": [
        "greedy",
        "strings"
      ]
    },
    "A": {
      "name": "Organizing SWERC",
      "type": "PROGRAMMING",
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "1661": {
    "F": {
      "name": "Teleporters",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "binary search",
        "greedy"
      ]
    },
    "E": {
      "name": "Narrow Components",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "brute force",
        "data structures",
        "dp",
        "dsu",
        "math",
        "trees"
      ]
    },
    "D": {
      "name": "Progressions Covering",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "C": {
      "name": "Water the Trees",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "binary search",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Getting Zero",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar",
        "dp",
        "graphs",
        "greedy",
        "shortest paths"
      ]
    },
    "A": {
      "name": "Array Balancing",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1660": {
    "F2": {
      "name": "Promising String (hard version)",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "data structures",
        "implementation",
        "math",
        "strings"
      ]
    },
    "F1": {
      "name": "Promising String (easy version)",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "brute force",
        "implementation",
        "math",
        "strings"
      ]
    },
    "E": {
      "name": "Matrix and Shifts",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "D": {
      "name": "Maximum Product Strikes Back",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "brute force",
        "implementation",
        "math",
        "two pointers"
      ]
    },
    "C": {
      "name": "Get an Even String",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "dp",
        "greedy",
        "strings"
      ]
    },
    "B": {
      "name": "Vlad and Candies",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Vasya and Coins",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1659": {
    "F": {
      "name": "Tree and Permutation Game",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "dfs and similar",
        "games",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "AND-MEX Walk",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2200,
      "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "D": {
      "name": "Reverse Sort Sum",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "implementation",
        "math",
        "two pointers"
      ]
    },
    "C": {
      "name": "Line Empire",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "brute force",
        "dp",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Bit Flipping",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1300,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "greedy",
        "strings"
      ]
    },
    "A": {
      "name": "Red Versus Blue",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "1658": {
    "F": {
      "name": "Juju and Binary String",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "E": {
      "name": "Gojou and Matrix Game",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "dp",
        "games",
        "hashing",
        "implementation",
        "math",
        "number theory",
        "sortings"
      ]
    },
    "D2": {
      "name": "388535 (Hard Version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2300,
      "tags": [
        "bitmasks",
        "brute force",
        "data structures",
        "math"
      ]
    },
    "D1": {
      "name": "388535 (Easy Version)",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1600,
      "tags": [
        "bitmasks",
        "math"
      ]
    },
    "C": {
      "name": "Shinju and the Lost Permutation",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "B": {
      "name": "Marin and Anti-coprime Permutation",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 800,
      "tags": [
        "combinatorics",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Marin and Photoshoot",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "implementation",
        "math"
      ]
    }
  },
  "1657": {
    "F": {
      "name": "Words on Tree",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "2-sat",
        "dfs and similar",
        "dsu",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "Star MST",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "combinatorics",
        "dp",
        "graph matchings",
        "math"
      ]
    },
    "D": {
      "name": "For Gamers. By Gamers.",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "binary search",
        "brute force",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "C": {
      "name": "Bracket Sequence Deletion",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "XY Sequence",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Integer Moves",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "math"
      ]
    }
  },
  "1656": {
    "I": {
      "name": "Neighbour Ordering",
      "type": "PROGRAMMING",
      "points": 4500.0,
      "rating": 3500,
      "tags": [
        "constructive algorithms",
        "graphs"
      ]
    },
    "H": {
      "name": "Equal LCM Subsets",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 3200,
      "tags": [
        "data structures",
        "math",
        "number theory"
      ]
    },
    "G": {
      "name": "Cycle Palindrome",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3200,
      "tags": [
        "constructive algorithms",
        "graphs",
        "math"
      ]
    },
    "F": {
      "name": "Parametric MST",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2600,
      "tags": [
        "binary search",
        "constructive algorithms",
        "graphs",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "E": {
      "name": "Equal Tree Sums",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "math",
        "trees"
      ]
    },
    "D": {
      "name": "K-good",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Make Equal With Mod",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory",
        "sortings"
      ]
    },
    "B": {
      "name": "Subtract Operation",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "data structures",
        "greedy",
        "math",
        "two pointers"
      ]
    },
    "A": {
      "name": "Good Pairs",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math",
        "sortings"
      ]
    }
  },
  "1654": {
    "H": {
      "name": "Three Minimums",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3500,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "divide and conquer",
        "dp",
        "fft",
        "math"
      ]
    },
    "G": {
      "name": "Snowy Mountain",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 2900,
      "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "greedy",
        "shortest paths",
        "trees"
      ]
    },
    "F": {
      "name": "Minimal String Xoration",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "bitmasks",
        "data structures",
        "divide and conquer",
        "greedy",
        "hashing",
        "sortings",
        "strings"
      ]
    },
    "E": {
      "name": "Arithmetic Operations",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "data structures",
        "graphs",
        "math"
      ]
    },
    "D": {
      "name": "Potion Brewing Class",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "dfs and similar",
        "math",
        "number theory",
        "trees"
      ]
    },
    "C": {
      "name": "Alice and the Cake",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "data structures",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Prefix Removals",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "strings"
      ]
    },
    "A": {
      "name": "Maximum Cake Tastiness",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "greedy",
        "implementation",
        "sortings"
      ]
    }
  },
  "1651": {
    "F": {
      "name": "Tower Defense",
      "type": "PROGRAMMING",
      "rating": 3000,
      "tags": [
        "binary search",
        "brute force",
        "data structures"
      ]
    },
    "E": {
      "name": "Sum of Matchings",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "brute force",
        "combinatorics",
        "constructive algorithms",
        "dfs and similar",
        "graph matchings",
        "greedy",
        "math"
      ]
    },
    "D": {
      "name": "Nearest Excluded Points",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "graphs",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Fault-tolerant Network",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "brute force",
        "data structures",
        "implementation"
      ]
    },
    "B": {
      "name": "Prove Him Wrong",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "Playoff",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1650": {
    "G": {
      "name": "Counting Shortcuts",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "graphs",
        "shortest paths"
      ]
    },
    "F": {
      "name": "Vitaly and Advanced Useless Algorithms",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "E": {
      "name": "Rescheduling the Exam",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "implementation",
        "math",
        "sortings"
      ]
    },
    "D": {
      "name": "Twist the Permutation",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Weight of the System of Nested Segments",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "greedy",
        "hashing",
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "DIV + MOD",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Deletions of Two Adjacent Letters",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1649": {
    "B": {
      "name": "Game of Ball Passing",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1648": {
    "F": {
      "name": "Two Avenues",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 3500,
      "tags": [
        "data structures",
        "dfs and similar",
        "graphs"
      ]
    },
    "E": {
      "name": "Air Reform",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3200,
      "tags": [
        "data structures",
        "dfs and similar",
        "divide and conquer",
        "dsu",
        "graphs",
        "implementation",
        "trees"
      ]
    },
    "D": {
      "name": "Serious Business",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "divide and conquer",
        "dp",
        "implementation",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Tyler and Strings",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "combinatorics",
        "data structures",
        "implementation"
      ]
    },
    "B": {
      "name": "Integral Array",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "data structures",
        "math"
      ]
    },
    "A": {
      "name": "Weird Sum",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "combinatorics",
        "data structures",
        "geometry",
        "math",
        "matrices",
        "sortings"
      ]
    }
  },
  "1647": {
    "F": {
      "name": "Madoka and Laziness",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3100,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "E": {
      "name": "Madoka and the Sixth-graders",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "dfs and similar",
        "greedy"
      ]
    },
    "D": {
      "name": "Madoka and the Best School in Russia",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "dp",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Madoka and Childish Pranks",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "B": {
      "name": "Madoka and the Elegant Gift",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "constructive algorithms",
        "graphs",
        "implementation"
      ]
    },
    "A": {
      "name": "Madoka and Math Dad",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1646": {
    "F": {
      "name": "Playing Around the Table",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2900,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "E": {
      "name": "Power Board",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "dp",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Weight the Tree",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "implementation",
        "trees"
      ]
    },
    "C": {
      "name": "Factorials and Powers of Two",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "dp",
        "math"
      ]
    },
    "B": {
      "name": "Quality vs Quantity",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "A": {
      "name": "Square Counting",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1644": {
    "F": {
      "name": "Basis",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "combinatorics",
        "fft",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Expand the Path",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "brute force",
        "combinatorics",
        "data structures",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Cross Coloring",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "data structures",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Increase Subarray Sums",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Anti-Fibonacci Permutation",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "Doors and Keys",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1642": {
    "B": {
      "name": "Power Walking",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 900,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Hard Way",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "geometry"
      ]
    }
  },
  "1641": {
    "F": {
      "name": "Covering Circle",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3500,
      "tags": [
        "geometry"
      ]
    },
    "E": {
      "name": "Special Positions",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3300,
      "tags": [
        "combinatorics",
        "divide and conquer",
        "fft",
        "math"
      ]
    },
    "D": {
      "name": "Two Arrays",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2700,
      "tags": [
        "bitmasks",
        "brute force",
        "combinatorics",
        "greedy",
        "hashing",
        "math",
        "two pointers"
      ]
    },
    "C": {
      "name": "Anonymity Is Important",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dsu",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Repetitions Decoding",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Great Sequence",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "greedy",
        "sortings"
      ]
    }
  },
  "1639": {
    "K": {
      "name": "Treasure Hunt",
      "type": "PROGRAMMING",
      "tags": [
        "graphs",
        "interactive"
      ]
    },
    "J": {
      "name": "Treasure Hunt",
      "type": "PROGRAMMING",
      "tags": [
        "graphs",
        "interactive"
      ]
    },
    "I": {
      "name": "Treasure Hunt",
      "type": "PROGRAMMING",
      "tags": [
        "graphs",
        "interactive"
      ]
    },
    "H": {
      "name": "Treasure Hunt",
      "type": "PROGRAMMING",
      "tags": [
        "graphs",
        "interactive"
      ]
    },
    "G": {
      "name": "Treasure Hunt",
      "type": "PROGRAMMING",
      "tags": [
        "graphs",
        "interactive"
      ]
    },
    "F": {
      "name": "Treasure Hunt",
      "type": "PROGRAMMING",
      "tags": [
        "graphs",
        "interactive"
      ]
    },
    "E": {
      "name": "Treasure Hunt",
      "type": "PROGRAMMING",
      "tags": [
        "graphs",
        "interactive"
      ]
    },
    "D": {
      "name": "Treasure Hunt",
      "type": "PROGRAMMING",
      "tags": [
        "graphs",
        "interactive"
      ]
    },
    "C": {
      "name": "Treasure Hunt",
      "type": "PROGRAMMING",
      "tags": [
        "graphs",
        "interactive"
      ]
    },
    "B": {
      "name": "Treasure Hunt",
      "type": "PROGRAMMING",
      "tags": [
        "graphs",
        "interactive"
      ]
    },
    "A": {
      "name": "Treasure Hunt",
      "type": "PROGRAMMING",
      "tags": [
        "graphs",
        "interactive"
      ]
    }
  },
  "1638": {
    "F": {
      "name": "Two Posters",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3200,
      "tags": [
        "brute force",
        "data structures",
        "greedy",
        "two pointers"
      ]
    },
    "E": {
      "name": "Colorful Operations",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "brute force",
        "data structures",
        "implementation"
      ]
    },
    "D": {
      "name": "Big Brush",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Inversion Graph",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1300,
      "tags": [
        "data structures",
        "dsu",
        "graphs",
        "math"
      ]
    },
    "B": {
      "name": "Odd Swap Sort",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1100,
      "tags": [
        "data structures",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Reverse",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    }
  },
  "1637": {
    "H": {
      "name": "Minimize Inversions Number",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3500,
      "tags": [
        "data structures",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "G": {
      "name": "Birthday",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3000,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "F": {
      "name": "Towers",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "E": {
      "name": "Best Pair",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "brute force",
        "implementation"
      ]
    },
    "D": {
      "name": "Yet Another Minimization Problem",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "dp",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Andrew and Stones",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "MEX and Array",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Sorting Parts",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "sortings"
      ]
    }
  },
  "1635": {
    "F": {
      "name": "Closest Pair ",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "E": {
      "name": "Cars ",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2200,
      "tags": [
        "2-sat",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "sortings"
      ]
    },
    "D": {
      "name": "Infinite Set",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 1800,
      "tags": [
        "bitmasks",
        "dp",
        "math",
        "matrices",
        "number theory",
        "strings"
      ]
    },
    "C": {
      "name": "Differential Sorting",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "B": {
      "name": "Avoid Local Maximums",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 800,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Min Or Sum",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "bitmasks",
        "greedy"
      ]
    }
  },
  "1634": {
    "F": {
      "name": "Fibonacci Additions",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "brute force",
        "data structures",
        "hashing",
        "implementation",
        "math"
      ]
    },
    "E": {
      "name": "Fair Share",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "data structures",
        "dfs and similar",
        "graph matchings",
        "graphs"
      ]
    },
    "D": {
      "name": "Finding Zero",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "interactive",
        "math"
      ]
    },
    "C": {
      "name": "OKEA",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Fortune Telling",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "bitmasks",
        "math"
      ]
    },
    "A": {
      "name": "Reverse and Concatenate",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "strings"
      ]
    }
  },
  "1633": {
    "F": {
      "name": "Perfect Matching",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "data structures",
        "divide and conquer",
        "interactive",
        "trees"
      ]
    },
    "E": {
      "name": "Spanning Tree Queries",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "math",
        "sortings",
        "trees"
      ]
    },
    "D": {
      "name": "Make Them Equal",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Kill the Monster",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "brute force",
        "math"
      ]
    },
    "B": {
      "name": "Minority",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Div. 7",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force"
      ]
    }
  },
  "1632": {
    "E2": {
      "name": "Distance Tree (hard version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2700,
      "tags": [
        "binary search",
        "dfs and similar",
        "shortest paths",
        "trees"
      ]
    },
    "E1": {
      "name": "Distance Tree (easy version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "graphs",
        "shortest paths",
        "trees"
      ]
    },
    "D": {
      "name": "New Year Concert",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "math",
        "number theory",
        "two pointers"
      ]
    },
    "C": {
      "name": "Strange Test",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "dp",
        "math"
      ]
    },
    "B": {
      "name": "Roof Construction",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "bitmasks",
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "ABC",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1631": {
    "B": {
      "name": "Fun with Even Subarrays",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "A": {
      "name": "Min Max Swap",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy"
      ]
    }
  },
  "1630": {
    "F": {
      "name": "Making It Bipartite",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3400,
      "tags": [
        "flows",
        "graph matchings",
        "graphs",
        "number theory"
      ]
    },
    "E": {
      "name": "Expected Components",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "combinatorics",
        "math",
        "number theory",
        "probabilities"
      ]
    },
    "D": {
      "name": "Flipping Range",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy",
        "number theory"
      ]
    },
    "C": {
      "name": "Paint the Middle",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2200,
      "tags": [
        "dp",
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "B": {
      "name": "Range and Partition",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "greedy",
        "two pointers"
      ]
    },
    "A": {
      "name": "And Matching",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "bitmasks",
        "constructive algorithms"
      ]
    }
  },
  "1629": {
    "B": {
      "name": "GCD Arrays",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "greedy",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Download More RAM",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "greedy",
        "sortings"
      ]
    }
  },
  "1628": {
    "F": {
      "name": "Spaceship Crisis Management",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3500,
      "tags": [
        "binary search",
        "data structures",
        "geometry",
        "sortings"
      ]
    },
    "E": {
      "name": "Groceries in Meteor Town",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3100,
      "tags": [
        "binary search",
        "data structures",
        "dsu",
        "trees"
      ]
    },
    "D2": {
      "name": "Game on Sum (Hard Version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2400,
      "tags": [
        "combinatorics",
        "dp",
        "games",
        "math"
      ]
    },
    "D1": {
      "name": "Game on Sum (Easy Version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "combinatorics",
        "dp",
        "games",
        "math"
      ]
    },
    "C": {
      "name": "Grid Xor",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "interactive",
        "math"
      ]
    },
    "B": {
      "name": "Peculiar Movie Preferences",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1700,
      "tags": [
        "greedy",
        "strings"
      ]
    },
    "A": {
      "name": "Meximum Array",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "implementation",
        "math",
        "two pointers"
      ]
    }
  },
  "1627": {
    "F": {
      "name": "Not Splitting",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2700,
      "tags": [
        "geometry",
        "graphs",
        "greedy",
        "implementation",
        "shortest paths"
      ]
    },
    "E": {
      "name": "Not Escaping",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "dp",
        "implementation",
        "shortest paths",
        "two pointers"
      ]
    },
    "D": {
      "name": "Not Adding",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "dp",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Not Assigning",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "number theory",
        "trees"
      ]
    },
    "B": {
      "name": "Not Sitting",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1300,
      "tags": [
        "games",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Not Shading",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "1626": {
    "F": {
      "name": "A Random Code Problem",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory",
        "probabilities"
      ]
    },
    "E": {
      "name": "Black and White Tree",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "dfs and similar",
        "greedy",
        "trees"
      ]
    },
    "D": {
      "name": "Martial Arts Tournament",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "binary search",
        "brute force",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Monsters And Spells",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "implementation",
        "math",
        "two pointers"
      ]
    },
    "B": {
      "name": "Minor Reduction",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "greedy",
        "strings"
      ]
    },
    "A": {
      "name": "Equidistant Letters",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "sortings"
      ]
    }
  },
  "1625": {
    "E2": {
      "name": "Cats on the Upgrade (hard version)",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2800,
      "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "E1": {
      "name": "Cats on the Upgrade (easy version)",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "data structures",
        "dfs and similar",
        "divide and conquer",
        "dp",
        "graphs",
        "trees"
      ]
    },
    "D": {
      "name": "Binary Spiders",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "bitmasks",
        "data structures",
        "implementation",
        "math",
        "sortings",
        "trees"
      ]
    },
    "C": {
      "name": "Road Optimization",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Elementary Particles",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Ancient Civilization",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "bitmasks",
        "greedy",
        "math"
      ]
    }
  },
  "1624": {
    "G": {
      "name": "MinOr Tree",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "bitmasks",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy"
      ]
    },
    "F": {
      "name": "Interacdive Problem",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "binary search",
        "constructive algorithms",
        "interactive"
      ]
    },
    "E": {
      "name": "Masha-forgetful",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dp",
        "hashing",
        "implementation",
        "strings"
      ]
    },
    "D": {
      "name": "Palindromes Coloring",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "binary search",
        "greedy",
        "sortings",
        "strings"
      ]
    },
    "C": {
      "name": "Division by Two and Permutation",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "flows",
        "graph matchings",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Make AP",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Plus One on the Subset",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1623": {
    "E": {
      "name": "Middle Duplication",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "dfs and similar",
        "greedy",
        "strings",
        "trees"
      ]
    },
    "D": {
      "name": "Robot Cleaner Revisit",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "implementation",
        "math",
        "probabilities"
      ]
    },
    "C": {
      "name": "Balanced Stone Heaps",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "greedy"
      ]
    },
    "B": {
      "name": "Game on Ranges",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "dfs and similar",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Robot Cleaner",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    }
  },
  "1622": {
    "F": {
      "name": "Quadratic Set",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "constructive algorithms",
        "hashing",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Math Test",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "bitmasks",
        "brute force",
        "greedy"
      ]
    },
    "D": {
      "name": "Shuffle",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "combinatorics",
        "math",
        "two pointers"
      ]
    },
    "C": {
      "name": "Set or Decrease",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "binary search",
        "brute force",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Berland Music",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "data structures",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Construct a Rectangle",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "geometry",
        "math"
      ]
    }
  },
  "1621": {
    "I": {
      "name": "Two Sequences",
      "type": "PROGRAMMING",
      "points": 4500.0,
      "rating": 3500,
      "tags": [
        "data structures",
        "hashing",
        "string suffix structures"
      ]
    },
    "H": {
      "name": "Trains and Airplanes",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3500,
      "tags": [
        "dfs and similar",
        "graphs",
        "shortest paths",
        "trees"
      ]
    },
    "G": {
      "name": "Weighted Increasing Subsequences",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3200,
      "tags": [
        "data structures",
        "dp",
        "math"
      ]
    },
    "F": {
      "name": "Strange Instructions",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "E": {
      "name": "New School",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "D": {
      "name": "The Winter Hike",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Hidden Permutations",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "interactive",
        "math"
      ]
    },
    "B": {
      "name": "Integers Shop",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Stable Arrangement of Rooks",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms"
      ]
    }
  },
  "1620": {
    "G": {
      "name": "Subsequences Galore",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dp"
      ]
    },
    "F": {
      "name": "Bipartite Array",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "E": {
      "name": "Replace the Numbers",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "data structures",
        "dsu",
        "implementation"
      ]
    },
    "D": {
      "name": "Exact Change",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
      ]
    },
    "C": {
      "name": "BA-String",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Triangles on a Rectangle",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "geometry",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Equal or Not Equal",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "dsu",
        "implementation"
      ]
    }
  },
  "1619": {
    "H": {
      "name": "Permutation and Queries",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "brute force",
        "data structures",
        "divide and conquer",
        "two pointers"
      ]
    },
    "G": {
      "name": "Unusual Minesweeper",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "binary search",
        "dfs and similar",
        "dsu",
        "greedy",
        "sortings"
      ]
    },
    "F": {
      "name": "Let's Play the Hat?",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "E": {
      "name": "MEX and Increments",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "data structures",
        "dp",
        "greedy",
        "implementation",
        "math",
        "sortings"
      ]
    },
    "D": {
      "name": "New Year's Problem",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "binary search",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Wrong Addition",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    },
    "B": {
      "name": "Squares and Cubes",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Square String?",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1618": {
    "G": {
      "name": "Trader Problem",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "data structures",
        "dsu",
        "greedy",
        "sortings"
      ]
    },
    "F": {
      "name": "Reverse",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "dfs and similar",
        "implementation",
        "math",
        "strings"
      ]
    },
    "E": {
      "name": "Singers' Tour",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "D": {
      "name": "Array and Operations",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "dp",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Paint the Array",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "math"
      ]
    },
    "B": {
      "name": "Missing Bigram",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Polycarp and Sums of Subsequences",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math",
        "sortings"
      ]
    }
  },
  "1617": {
    "E": {
      "name": "Christmas Chocolates",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "dfs and similar",
        "dp",
        "games",
        "graphs",
        "implementation",
        "math",
        "number theory",
        "shortest paths",
        "trees"
      ]
    },
    "D2": {
      "name": "Too Many Impostors (hard version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "implementation",
        "interactive",
        "math"
      ]
    },
    "D1": {
      "name": "Too Many Impostors (easy version)",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "implementation",
        "interactive"
      ]
    },
    "C": {
      "name": "Paprika and Permutation",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "binary search",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "B": {
      "name": "GCD Problem",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "brute force",
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Forbidden Subsequence",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "sortings",
        "strings"
      ]
    }
  },
  "1616": {
    "H": {
      "name": "Keep XOR Low",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3000,
      "tags": [
        "bitmasks",
        "combinatorics",
        "data structures",
        "divide and conquer",
        "dp",
        "math"
      ]
    },
    "G": {
      "name": "Just Add an Edge",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3500,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs"
      ]
    },
    "F": {
      "name": "Tricolor Triangles",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2900,
      "tags": [
        "brute force",
        "graphs",
        "math",
        "matrices"
      ]
    },
    "E": {
      "name": "Lexicographically Small Enough",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "data structures",
        "greedy",
        "strings"
      ]
    },
    "D": {
      "name": "Keep the Average High",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "dp",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Representative Edges",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "geometry",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Mirror in the String",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "strings"
      ]
    },
    "A": {
      "name": "Integer Diversity",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1615": {
    "H": {
      "name": "Reindeer Games",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3000,
      "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "divide and conquer",
        "flows",
        "graphs",
        "shortest paths"
      ]
    },
    "G": {
      "name": "Maximum Adjacent Pairs",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 3300,
      "tags": [
        "constructive algorithms",
        "graph matchings"
      ]
    },
    "F": {
      "name": "LEGOndary Grandmaster",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "E": {
      "name": "Purple Crayon",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "dfs and similar",
        "games",
        "graphs",
        "greedy",
        "math",
        "sortings",
        "trees"
      ]
    },
    "D": {
      "name": "X(or)-mas Tree",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2200,
      "tags": [
        "bitmasks",
        "dfs and similar",
        "dsu",
        "graphs",
        "trees"
      ]
    },
    "C": {
      "name": "Menorah",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "graphs",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "And It's Non-Zero",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "bitmasks",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Closing The Gap",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1614": {
    "E": {
      "name": "Divan and a Cottage",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2600,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "D2": {
      "name": "Divan and Kostomuksha (hard version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2300,
      "tags": [
        "dp",
        "number theory"
      ]
    },
    "D1": {
      "name": "Divan and Kostomuksha (easy version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "dp",
        "number theory"
      ]
    },
    "C": {
      "name": "Divan and bitwise operations",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "bitmasks",
        "combinatorics",
        "constructive algorithms",
        "dp",
        "math"
      ]
    },
    "B": {
      "name": "Divan and a New Project ",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "sortings"
      ]
    },
    "A": {
      "name": "Divan and a Store",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
      ]
    }
  },
  "1613": {
    "F": {
      "name": "Tree Coloring",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "combinatorics",
        "divide and conquer",
        "fft"
      ]
    },
    "E": {
      "name": "Crazy Robot",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "D": {
      "name": "MEX Sequences",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "dp",
        "math"
      ]
    },
    "C": {
      "name": "Poisoned Dagger",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "binary search"
      ]
    },
    "B": {
      "name": "Absent Remainder",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Long Comparison",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1612": {
    "G": {
      "name": "Max Sum Array",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "greedy",
        "sortings"
      ]
    },
    "F": {
      "name": "Armor and Weapons",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "shortest paths"
      ]
    },
    "E": {
      "name": "Messages",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "probabilities",
        "sortings"
      ]
    },
    "D": {
      "name": "X-Magic Pair",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Chat Ban",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "binary search",
        "math"
      ]
    },
    "B": {
      "name": "Special Permutation",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "Distance",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "constructive algorithms"
      ]
    }
  },
  "1611": {
    "G": {
      "name": "Robot and Candies",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "data structures",
        "graph matchings",
        "greedy"
      ]
    },
    "F": {
      "name": "ATM and Students",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "binary search",
        "data structures",
        "two pointers"
      ]
    },
    "E2": {
      "name": "Escape The Maze (hard version)",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "shortest paths",
        "trees"
      ]
    },
    "E1": {
      "name": "Escape The Maze (easy version)",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "greedy",
        "shortest paths",
        "trees",
        "two pointers"
      ]
    },
    "D": {
      "name": "Weights Assignment For Tree Edges",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "trees"
      ]
    },
    "C": {
      "name": "Polycarp Recovers the Permutation",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Team Composition: Programmers and Mathematicians",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "binary search",
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Make Even",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1610": {
    "I": {
      "name": "Mashtali vs AtCoder",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3100,
      "tags": [
        "games",
        "trees"
      ]
    },
    "H": {
      "name": "Squid Game",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3100,
      "tags": [
        "data structures",
        "dfs and similar",
        "greedy",
        "trees"
      ]
    },
    "G": {
      "name": "AmShZ Wins a Bet",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3300,
      "tags": [
        "data structures",
        "greedy",
        "hashing"
      ]
    },
    "F": {
      "name": "Mashtali: a Space Oddysey",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3000,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs"
      ]
    },
    "E": {
      "name": "AmShZ and G.O.A.T.",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "brute force",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Not Quite Lee",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2000,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Keshi Is Throwing a Party",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "greedy"
      ]
    },
    "B": {
      "name": "Kalindrome Array",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "two pointers"
      ]
    },
    "A": {
      "name": "Anti Light's Cell Guessing",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "math"
      ]
    }
  },
  "1609": {
    "H": {
      "name": "Pushing Robots",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 3500,
      "tags": []
    },
    "G": {
      "name": "A Stroll Around the Matrix",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "greedy",
        "math"
      ]
    },
    "F": {
      "name": "Interesting Sections",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "divide and conquer",
        "meet-in-the-middle",
        "two pointers"
      ]
    },
    "E": {
      "name": "William The Oblivious ",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "data structures",
        "dp",
        "matrices"
      ]
    },
    "D": {
      "name": "Social Network",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1600,
      "tags": [
        "dsu",
        "graphs",
        "greedy",
        "implementation",
        "trees"
      ]
    },
    "C": {
      "name": "Complex Market Analysis",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "binary search",
        "dp",
        "implementation",
        "number theory",
        "schedules",
        "two pointers"
      ]
    },
    "B": {
      "name": "William the Vigilant",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Divide and Multiply",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "greedy",
        "implementation",
        "math",
        "number theory"
      ]
    }
  },
  "1608": {
    "G": {
      "name": "Alphabetic Tree",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3500,
      "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "hashing",
        "string suffix structures",
        "strings",
        "trees"
      ]
    },
    "F": {
      "name": "MEX counting",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3200,
      "tags": [
        "combinatorics",
        "dp",
        "implementation"
      ]
    },
    "E": {
      "name": "The Cells on the Paper",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2800,
      "tags": [
        "binary search",
        "implementation",
        "sortings"
      ]
    },
    "D": {
      "name": "Dominoes",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "combinatorics",
        "fft",
        "graphs",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Game Master",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "graphs",
        "greedy",
        "two pointers"
      ]
    },
    "B": {
      "name": "Build the Permutation",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "Find Array",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1607": {
    "H": {
      "name": "Banquet Preparations 2",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "G": {
      "name": "Banquet Preparations 1",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "greedy"
      ]
    },
    "F": {
      "name": "Robot on the Board 2",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "brute force",
        "dfs and similar",
        "graphs",
        "implementation"
      ]
    },
    "E": {
      "name": "Robot on the Board 1",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    },
    "D": {
      "name": "Blue-Red Permutation",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "greedy",
        "math",
        "sortings"
      ]
    },
    "C": {
      "name": "Minimum Extraction",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "brute force",
        "sortings"
      ]
    },
    "B": {
      "name": "Odd Grasshopper",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Linear Keyboard",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1606": {
    "F": {
      "name": "Tree Queries",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "brute force",
        "dp",
        "trees"
      ]
    },
    "E": {
      "name": "Arena",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "Red-Blue Matrix",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation",
        "sortings"
      ]
    },
    "C": {
      "name": "Banknotes",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "greedy",
        "number theory"
      ]
    },
    "B": {
      "name": "Update Files",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "AB Balance",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "strings"
      ]
    }
  },
  "1605": {
    "F": {
      "name": "PalindORme",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 2900,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "E": {
      "name": "Array Equalizer",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "greedy",
        "implementation",
        "math",
        "number theory",
        "sortings",
        "two pointers"
      ]
    },
    "D": {
      "name": "Treelabeling",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "dfs and similar",
        "games",
        "greedy",
        "implementation",
        "trees"
      ]
    },
    "C": {
      "name": "Dominant Character",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "B": {
      "name": "Reverse Sort",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "A.M. Deviation",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math",
        "number theory"
      ]
    }
  },
  "1604": {
    "B": {
      "name": "XOR Specia-LIS-t",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": []
    },
    "A": {
      "name": "Era",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy"
      ]
    }
  },
  "1603": {
    "F": {
      "name": "October 18, 2017",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 2700,
      "tags": [
        "combinatorics",
        "dp",
        "implementation",
        "math"
      ]
    },
    "E": {
      "name": "A Perfect Problem",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3200,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "Artistic Partition",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "divide and conquer",
        "dp",
        "number theory"
      ]
    },
    "C": {
      "name": "Extreme Extension",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2300,
      "tags": [
        "dp",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Moderate Modular Mode",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Di-visible Confusion",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory"
      ]
    }
  },
  "1602": {
    "B": {
      "name": "Divine Array",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "Two Subsequences",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1601": {
    "F": {
      "name": "Two Sorts",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3400,
      "tags": [
        "binary search",
        "dfs and similar",
        "math",
        "meet-in-the-middle"
      ]
    },
    "E": {
      "name": "Phys Ed Online",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2900,
      "tags": [
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Difficult Mountain",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Optimal Insertion",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "divide and conquer",
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Frog Traveler",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "graphs",
        "shortest paths",
        "two pointers"
      ]
    },
    "A": {
      "name": "Array Elimination",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "bitmasks",
        "greedy",
        "math",
        "number theory"
      ]
    }
  },
  "1600": {
    "J": {
      "name": "Robot Factory",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "bitmasks",
        "dfs and similar"
      ]
    },
    "F": {
      "name": "Party Organization",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "brute force",
        "math",
        "probabilities"
      ]
    },
    "E": {
      "name": "Array Game",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "games",
        "greedy",
        "two pointers"
      ]
    }
  },
  "1599": {
    "J": {
      "name": "Bob's Beautiful Array",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "bitmasks",
        "brute force",
        "greedy"
      ]
    },
    "I": {
      "name": "Desert",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "data structures",
        "graphs"
      ]
    },
    "H": {
      "name": "Hidden Fortress",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "interactive",
        "math"
      ]
    },
    "G": {
      "name": "Shortest path",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "brute force",
        "geometry",
        "math",
        "shortest paths"
      ]
    },
    "F": {
      "name": "Mars",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "hashing"
      ]
    },
    "E": {
      "name": "Two Arrays",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": [
        "data structures",
        "matrices"
      ]
    },
    "D": {
      "name": "Bubble Popping",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": []
    },
    "C": {
      "name": "Bubble Strike",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "combinatorics",
        "math",
        "probabilities",
        "ternary search"
      ]
    },
    "B": {
      "name": "Restaurant Game",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": []
    },
    "A": {
      "name": "Weights",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "constructive algorithms",
        "greedy",
        "two pointers"
      ]
    }
  },
  "1598": {
    "G": {
      "name": "The Sum of Good Numbers",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": [
        "hashing",
        "math",
        "string suffix structures",
        "strings"
      ]
    },
    "F": {
      "name": "RBS",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "data structures",
        "dp"
      ]
    },
    "E": {
      "name": "Staircases",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "brute force",
        "combinatorics",
        "data structures",
        "dfs and similar",
        "dp",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Training Session",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "combinatorics",
        "data structures",
        "geometry",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Delete Two Elements",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "data structures",
        "dp",
        "implementation",
        "math",
        "two pointers"
      ]
    },
    "B": {
      "name": "Groups",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Computer Game",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "dfs and similar",
        "dp",
        "implementation"
      ]
    }
  },
  "1594": {
    "F": {
      "name": "Ideal Farm",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "E2": {
      "name": "Rubik's Cube Coloring (hard version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "dp",
        "implementation",
        "math",
        "trees"
      ]
    },
    "E1": {
      "name": "Rubik's Cube Coloring (easy version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "D": {
      "name": "The Number of Imposters",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "dsu",
        "graphs"
      ]
    },
    "C": {
      "name": "Make Them Equal",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "greedy",
        "math",
        "strings"
      ]
    },
    "B": {
      "name": "Special Numbers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "bitmasks",
        "math"
      ]
    },
    "A": {
      "name": "Consecutive Sum Riddle",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1593": {
    "G": {
      "name": "Changing Brackets",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "F": {
      "name": "Red-Black Number",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dfs and similar",
        "dp",
        "implementation",
        "math",
        "meet-in-the-middle"
      ]
    },
    "E": {
      "name": "Gardener and Tree",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "brute force",
        "data structures",
        "dfs and similar",
        "greedy",
        "implementation",
        "trees"
      ]
    },
    "D2": {
      "name": "Half of Same",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    },
    "D1": {
      "name": "All are Same",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Save More Mice",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "binary search",
        "greedy",
        "greedy"
      ]
    },
    "B": {
      "name": "Make it Divisible by 25",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "math",
        "math"
      ]
    },
    "A": {
      "name": "Elections",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1592": {
    "F2": {
      "name": "Alice and Recoloring 2",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2800,
      "tags": [
        "constructive algorithms",
        "flows",
        "graph matchings",
        "greedy"
      ]
    },
    "F1": {
      "name": "Alice and Recoloring 1",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2600,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "E": {
      "name": "Bored Bakry",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "greedy",
        "math",
        "two pointers"
      ]
    },
    "D": {
      "name": "Hemose in ICPC ?",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "dfs and similar",
        "implementation",
        "interactive",
        "math",
        "number theory",
        "trees"
      ]
    },
    "C": {
      "name": "Bakry and Partitioning",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
      ]
    },
    "B": {
      "name": "Hemose Shopping",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "dsu",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Gamer Hemose",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "binary search",
        "greedy",
        "math",
        "sortings"
      ]
    }
  },
  "1588": {
    "F": {
      "name": "Jumping Through the Array",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 3500,
      "tags": [
        "binary search",
        "data structures",
        "graphs",
        "two pointers"
      ]
    }
  },
  "1586": {
    "I": {
      "name": "Omkar and Mosaic",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3500,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1585": {
    "G": {
      "name": "Poachers",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 2500,
      "tags": [
        "dp",
        "games",
        "graphs",
        "trees"
      ]
    },
    "F": {
      "name": "Non-equal Neighbours",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2400,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "E": {
      "name": "Frequency Queries",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "dfs and similar",
        "trees"
      ]
    },
    "D": {
      "name": "Yet Another Sorting Problem",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "math"
      ]
    },
    "C": {
      "name": "Minimize Distance",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Array Eversion",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Life of a Flower",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1584": {
    "G": {
      "name": "Eligible Segments",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3200,
      "tags": [
        "geometry"
      ]
    },
    "F": {
      "name": "Strange LCS",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "bitmasks",
        "dp",
        "graphs",
        "greedy",
        "strings"
      ]
    },
    "E": {
      "name": "Game with Stones",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "data structures",
        "games",
        "greedy"
      ]
    },
    "D": {
      "name": "Guess the Permutation",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "combinatorics",
        "interactive",
        "math"
      ]
    },
    "C": {
      "name": "Two Arrays",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "greedy",
        "math",
        "sortings"
      ]
    },
    "B": {
      "name": "Coloring Rectangles",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Mathematical Addition",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1583": {
    "H": {
      "name": "Omkar and Tours",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3300,
      "tags": [
        "data structures",
        "divide and conquer",
        "sortings",
        "trees"
      ]
    },
    "G": {
      "name": "Omkar and Time Travel",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "math"
      ]
    },
    "F": {
      "name": "Defender of Childhood Dreams",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "divide and conquer"
      ]
    },
    "E": {
      "name": "Moment of Bloom",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graph matchings",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "D": {
      "name": "Omkar and the Meaning of Life",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "interactive"
      ]
    },
    "C": {
      "name": "Omkar and Determination",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "B": {
      "name": "Omkar and Heavenly Tree",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "trees"
      ]
    },
    "A": {
      "name": "Windblume Ode",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math",
        "number theory"
      ]
    }
  },
  "1582": {
    "G": {
      "name": "Kuzya and Homework",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "number theory"
      ]
    },
    "F2": {
      "name": "Korney Korneevich and XOR (hard version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "brute force",
        "dp",
        "greedy",
        "two pointers"
      ]
    },
    "F1": {
      "name": "Korney Korneevich and XOR (easy version)",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "bitmasks",
        "dp",
        "greedy"
      ]
    },
    "E": {
      "name": "Pchelyonok and Segments",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "math"
      ]
    },
    "D": {
      "name": "Vupsen, Pupsen and 0",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "C": {
      "name": "Grandma Capa Knits a Scarf",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "data structures",
        "greedy",
        "strings",
        "two pointers"
      ]
    },
    "B": {
      "name": "Luntik and Subsequences",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 900,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "A": {
      "name": "Luntik and Concerts",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1581": {
    "B": {
      "name": "Diameter of Graph",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "graphs",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "CQXYM Count Permutations",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "combinatorics",
        "math",
        "number theory"
      ]
    }
  },
  "1580": {
    "F": {
      "name": "Problems for Codeforces",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3300,
      "tags": [
        "combinatorics",
        "fft",
        "math"
      ]
    },
    "E": {
      "name": "Railway Construction",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3400,
      "tags": [
        "brute force",
        "constructive algorithms",
        "data structures",
        "graphs",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Subsequence",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "brute force",
        "divide and conquer",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "C": {
      "name": "Train Maintenance",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "data structures",
        "implementation"
      ]
    },
    "B": {
      "name": "Mathematics Curriculum",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2600,
      "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "trees"
      ]
    },
    "A": {
      "name": "Portal",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "data structures",
        "dp",
        "greedy",
        "implementation"
      ]
    }
  },
  "1579": {
    "G": {
      "name": "Minimal Coverage",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "dp"
      ]
    },
    "F": {
      "name": "Array Stabilization (AND version)",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "brute force",
        "graphs",
        "math",
        "number theory",
        "shortest paths"
      ]
    },
    "E2": {
      "name": "Array Optimization by Deque",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "E1": {
      "name": "Permutation Minimization by Deque",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "D": {
      "name": "Productive Meeting",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "graphs",
        "greedy"
      ]
    },
    "C": {
      "name": "Ticks",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Shifting Sort",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Casimir's String Solitaire",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math",
        "strings"
      ]
    }
  },
  "1578": {
    "M": {
      "name": "The Mind",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "interactive",
        "probabilities"
      ]
    },
    "L": {
      "name": "Labyrinth",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "binary search",
        "dsu",
        "greedy"
      ]
    },
    "K": {
      "name": "Kingdom of Islands",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "brute force",
        "graphs",
        "implementation"
      ]
    },
    "J": {
      "name": "Just Kingdom",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": [
        "brute force",
        "data structures",
        "dfs and similar"
      ]
    },
    "I": {
      "name": "Interactive Rays",
      "type": "PROGRAMMING",
      "rating": 3300,
      "tags": [
        "geometry",
        "interactive"
      ]
    },
    "H": {
      "name": "Higher Order Functions",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "G": {
      "name": "Game of Chance",
      "type": "PROGRAMMING",
      "rating": 3500,
      "tags": [
        "math",
        "probabilities"
      ]
    },
    "F": {
      "name": "Framing Pictures",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "geometry"
      ]
    },
    "E": {
      "name": "Easy Scheduling",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Dragon Curve",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": []
    },
    "C": {
      "name": "Cactus Lady and her Cing",
      "type": "PROGRAMMING",
      "rating": 3500,
      "tags": []
    },
    "B": {
      "name": "Building Forest Trails",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "data structures",
        "dsu"
      ]
    },
    "A": {
      "name": "Anti-Tetris",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "constructive algorithms",
        "graphs",
        "shortest paths"
      ]
    }
  },
  "1576": {
    "A": {
      "name": "Communication Routing Challenge",
      "type": "PROGRAMMING",
      "tags": [
        "*special"
      ]
    }
  },
  "1575": {
    "M": {
      "name": "Managing Telephone Poles",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "data structures",
        "geometry"
      ]
    },
    "L": {
      "name": "Longest Array Deconstruction",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "data structures",
        "divide and conquer",
        "dp",
        "sortings"
      ]
    },
    "K": {
      "name": "Knitting Batik",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "J": {
      "name": "Jeopardy of Dropped Balls",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "binary search",
        "brute force",
        "dsu",
        "implementation"
      ]
    },
    "I": {
      "name": "Illusions of the Desert",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "H": {
      "name": "Holiday Wall Ornaments",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "dp",
        "strings"
      ]
    },
    "G": {
      "name": "GCD Festival",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "F": {
      "name": "Finding Expected Value",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "math"
      ]
    },
    "E": {
      "name": "Eye-Pleasing City Park Tour",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "D": {
      "name": "Divisible by Twenty-Five",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "brute force",
        "dfs and similar",
        "dp"
      ]
    },
    "C": {
      "name": "Cyclic Sum",
      "type": "PROGRAMMING",
      "rating": 3000,
      "tags": [
        "data structures",
        "fft",
        "number theory"
      ]
    },
    "B": {
      "name": "Building an Amusement Park",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "binary search",
        "geometry"
      ]
    },
    "A": {
      "name": "Another Sorting Problem",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "data structures",
        "sortings",
        "strings"
      ]
    }
  },
  "1574": {
    "F": {
      "name": "Occurrences",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "dp",
        "dsu",
        "fft",
        "graphs"
      ]
    },
    "E": {
      "name": "Coloring",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "The Strongest Build",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dfs and similar",
        "graphs",
        "greedy",
        "hashing",
        "implementation"
      ]
    },
    "C": {
      "name": "Slay the Dragon",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "binary search",
        "greedy",
        "sortings",
        "ternary search"
      ]
    },
    "B": {
      "name": "Combinatorics Homework",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "combinatorics",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Regular Bracket Sequences",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "constructive algorithms"
      ]
    }
  },
  "1573": {
    "B": {
      "name": "Swaps",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Countdown",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy"
      ]
    }
  },
  "1572": {
    "F": {
      "name": "Stations",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3400,
      "tags": [
        "data structures"
      ]
    },
    "E": {
      "name": "Polygon",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "binary search",
        "dp",
        "geometry"
      ]
    },
    "D": {
      "name": "Bridge Club",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "flows",
        "graph matchings",
        "graphs",
        "greedy"
      ]
    },
    "C": {
      "name": "Paint",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2700,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "B": {
      "name": "Xor of 3",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "two pointers"
      ]
    },
    "A": {
      "name": "Book",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dp",
        "graphs",
        "implementation",
        "sortings"
      ]
    }
  },
  "1571": {
    "J": {
      "name": "Two Railroads",
      "type": "PROGRAMMING",
      "rating": 3000,
      "tags": [
        "*special"
      ]
    },
    "I": {
      "name": "Physical Examination",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": [
        "*special",
        "binary search",
        "data structures"
      ]
    },
    "H": {
      "name": "Laser Beams",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "*special",
        "geometry",
        "probabilities"
      ]
    },
    "G": {
      "name": "A Battle Against a Dragon",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "*special",
        "data structures",
        "dp"
      ]
    },
    "F": {
      "name": "Kotlinforces",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "*special",
        "constructive algorithms",
        "dp"
      ]
    },
    "E": {
      "name": "Fix the String",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "*special",
        "bitmasks",
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Sweepstake",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special",
        "brute force",
        "constructive algorithms",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Rhyme",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "B": {
      "name": "Epic Novel",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "*special",
        "math"
      ]
    },
    "A": {
      "name": "Sequence of Comparisons",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "*special"
      ]
    }
  },
  "1569": {
    "F": {
      "name": "Palindromic Hamiltonian Path",
      "type": "PROGRAMMING",
      "rating": 3000,
      "tags": [
        "brute force",
        "dfs and similar",
        "dp",
        "graphs",
        "hashing"
      ]
    },
    "E": {
      "name": "Playoff Restoration",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "bitmasks",
        "brute force",
        "hashing",
        "implementation",
        "meet-in-the-middle"
      ]
    },
    "D": {
      "name": "Inconvenient Pairs",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "data structures",
        "implementation",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Jury Meeting",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "B": {
      "name": "Chess Tournament",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "Balanced Substring",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1567": {
    "F": {
      "name": "One-Four Overload",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2700,
      "tags": [
        "2-sat",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "implementation"
      ]
    },
    "E": {
      "name": "Non-Decreasing Dilemma",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "divide and conquer",
        "math"
      ]
    },
    "D": {
      "name": "Expression Evaluation Error",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Carrying Conundrum",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "B": {
      "name": "MEXor Mixup",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "bitmasks",
        "greedy"
      ]
    },
    "A": {
      "name": "Domino Disaster",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1566": {
    "H": {
      "name": "Xor-quiz",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 3200,
      "tags": [
        "constructive algorithms",
        "dp",
        "interactive",
        "math",
        "number theory"
      ]
    },
    "G": {
      "name": "Four Vertices",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3100,
      "tags": [
        "constructive algorithms",
        "data structures",
        "graphs",
        "greedy",
        "implementation",
        "shortest paths"
      ]
    },
    "F": {
      "name": "Points Movement",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "E": {
      "name": "Buds Re-hanging",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "D2": {
      "name": "Seating Arrangements (hard version) ",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "data structures",
        "greedy",
        "implementation",
        "sortings",
        "two pointers"
      ]
    },
    "D1": {
      "name": "Seating Arrangements (easy version) ",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1100,
      "tags": [
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "MAX-MEX Cut",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "dp",
        "greedy"
      ]
    },
    "B": {
      "name": "MIN-MEX Cut",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "dp",
        "greedy"
      ]
    },
    "A": {
      "name": "Median Maximization",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "binary search",
        "greedy",
        "math"
      ]
    }
  },
  "1562": {
    "F": {
      "name": "Tubular Bells",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 2900,
      "tags": [
        "interactive",
        "math",
        "number theory",
        "probabilities"
      ]
    },
    "E": {
      "name": "Rescue Niwen!",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2500,
      "tags": [
        "dp",
        "greedy",
        "string suffix structures",
        "strings"
      ]
    },
    "D2": {
      "name": "Two Hundred Twenty One (hard version)",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "math"
      ]
    },
    "D1": {
      "name": "Two Hundred Twenty One (easy version)",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1700,
      "tags": [
        "data structures",
        "dp",
        "math"
      ]
    },
    "C": {
      "name": "Rings",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "B": {
      "name": "Scenes From a Memory",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "The Miracle and the Sleeper",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1561": {
    "D1": {
      "name": "Up the Strip (simplified version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "data structures",
        "dp",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Deep Down Below",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1300,
      "tags": [
        "binary search",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Simply Strange Sort",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "implementation",
        "sortings"
      ]
    }
  },
  "1560": {
    "F2": {
      "name": "Nearest Beautiful Number (hard version)",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "greedy"
      ]
    },
    "F1": {
      "name": "Nearest Beautiful Number (easy version)",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "greedy"
      ]
    },
    "E": {
      "name": "Polycarp and String Transformation",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "binary search",
        "implementation",
        "sortings",
        "strings"
      ]
    },
    "D": {
      "name": "Make a Power of Two",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "greedy",
        "math",
        "strings"
      ]
    },
    "C": {
      "name": "Infinity Table",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Who's Opposite?",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Dislike of Threes",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1559": {
    "E": {
      "name": "Mocha and Stars",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2200,
      "tags": [
        "combinatorics",
        "dp",
        "fft",
        "math",
        "number theory"
      ]
    },
    "D2": {
      "name": "Mocha and Diana (Hard Version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "trees",
        "two pointers"
      ]
    },
    "D1": {
      "name": "Mocha and Diana (Easy Version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dsu",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "C": {
      "name": "Mocha and Hiking",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "graphs"
      ]
    },
    "B": {
      "name": "Mocha and Red and Blue",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 900,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "A": {
      "name": "Mocha and Math",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1558": {
    "F": {
      "name": "Strange Sort",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3300,
      "tags": [
        "data structures",
        "sortings"
      ]
    },
    "E": {
      "name": "Down Below",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "binary search",
        "dfs and similar",
        "graphs",
        "greedy",
        "meet-in-the-middle",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Top-Notch Insertions",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "combinatorics",
        "data structures"
      ]
    },
    "C": {
      "name": "Bottom-Tier Reversals",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "B": {
      "name": "Up the Strip",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "dp",
        "math",
        "number theory",
        "two pointers"
      ]
    },
    "A": {
      "name": "Charmed by the Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "math"
      ]
    }
  },
  "1557": {
    "E": {
      "name": "Assiut Chess",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "interactive"
      ]
    },
    "D": {
      "name": "Ezzat and Grid",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Moamen and XOR",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1700,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "math",
        "matrices"
      ]
    },
    "B": {
      "name": "Moamen and k-subarrays",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Ezzat and Two Subsequences",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "math",
        "sortings"
      ]
    }
  },
  "1556": {
    "H": {
      "name": "DIY Tree",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3300,
      "tags": [
        "graphs",
        "greedy",
        "math",
        "probabilities"
      ]
    },
    "G": {
      "name": "Gates to Another World",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3300,
      "tags": [
        "bitmasks",
        "data structures",
        "dsu",
        "two pointers"
      ]
    },
    "F": {
      "name": "Sports Betting",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "graphs",
        "math",
        "probabilities"
      ]
    },
    "E": {
      "name": "Equilibrium",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Take a Guess",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "interactive",
        "math"
      ]
    },
    "C": {
      "name": "Compressed Bracket Sequence",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "B": {
      "name": "Take Your Places!",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "A Variety of Operations",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1555": {
    "F": {
      "name": "Good Graph",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "data structures",
        "dsu",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "Boring Segments",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "data structures",
        "sortings",
        "trees",
        "two pointers"
      ]
    },
    "D": {
      "name": "Say No to Palindromes",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dp",
        "strings"
      ]
    },
    "C": {
      "name": "Coin Rows",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dp",
        "implementation"
      ]
    },
    "B": {
      "name": "Two Tables",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "brute force"
      ]
    },
    "A": {
      "name": "PizzaForces",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "brute force",
        "math"
      ]
    }
  },
  "1554": {
    "E": {
      "name": "You",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2600,
      "tags": [
        "dfs and similar",
        "dp",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Diane",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "strings"
      ]
    },
    "C": {
      "name": "Mikasa",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "bitmasks",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Cobb",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1700,
      "tags": [
        "bitmasks",
        "brute force",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Cherry",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "greedy"
      ]
    }
  },
  "1553": {
    "I": {
      "name": "Stairs",
      "type": "PROGRAMMING",
      "points": 5250.0,
      "rating": 3400,
      "tags": [
        "combinatorics",
        "divide and conquer",
        "dp",
        "fft",
        "math"
      ]
    },
    "H": {
      "name": "XOR and Distance",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 2900,
      "tags": [
        "bitmasks",
        "divide and conquer",
        "trees"
      ]
    },
    "G": {
      "name": "Common Divisor Graph",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dsu",
        "graphs",
        "hashing",
        "math",
        "number theory"
      ]
    },
    "F": {
      "name": "Pairwise Modulo",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "math"
      ]
    },
    "E": {
      "name": "Permutation Shift",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "combinatorics",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "math"
      ]
    },
    "D": {
      "name": "Backspace",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "dp",
        "greedy",
        "strings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Penalty",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1200,
      "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "greedy"
      ]
    },
    "B": {
      "name": "Reverse String",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "dp",
        "hashing",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Digits Sum",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 800,
      "tags": [
        "math",
        "number theory"
      ]
    }
  },
  "1552": {
    "I": {
      "name": "Organizing a Music Festival",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 3400,
      "tags": [
        "dfs and similar",
        "math"
      ]
    },
    "H": {
      "name": "Guess the Perimeter",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3300,
      "tags": [
        "binary search",
        "interactive",
        "number theory"
      ]
    },
    "G": {
      "name": "A Serious Referee",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar",
        "sortings"
      ]
    },
    "F": {
      "name": "Telepanting",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "sortings"
      ]
    },
    "E": {
      "name": "Colors and Intervals",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "D": {
      "name": "Array Differentiation",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "graphs",
        "math"
      ]
    },
    "C": {
      "name": "Maximize the Intersections",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "geometry",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Running for Gold",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "combinatorics",
        "graphs",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Subsequence Permutation",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 800,
      "tags": [
        "sortings",
        "strings"
      ]
    }
  },
  "1551": {
    "F": {
      "name": "Equidistant Vertices",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "brute force",
        "combinatorics",
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "E": {
      "name": "Fixed Points",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "binary search",
        "brute force",
        "dp"
      ]
    },
    "D2": {
      "name": "Domino (hard version)",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "implementation",
        "math"
      ]
    },
    "D1": {
      "name": "Domino (easy version)",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "C": {
      "name": "Interesting Story",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "greedy",
        "sortings",
        "strings"
      ]
    },
    "B2": {
      "name": "Wonderful Coloring - 2",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "greedy"
      ]
    },
    "B1": {
      "name": "Wonderful Coloring - 1",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "strings"
      ]
    },
    "A": {
      "name": "Polycarp and Coins",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1550": {
    "F": {
      "name": "Jumping Around",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "binary search",
        "data structures",
        "divide and conquer",
        "dp",
        "dsu",
        "graphs",
        "shortest paths"
      ]
    },
    "E": {
      "name": "Stringforces",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "dp",
        "strings",
        "two pointers"
      ]
    },
    "D": {
      "name": "Excellent Arrays",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "binary search",
        "combinatorics",
        "constructive algorithms",
        "implementation",
        "math",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Manhattan Subarrays",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "brute force",
        "geometry",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Maximum Cost Deletion",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Find The Array",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1549": {
    "B": {
      "name": "Gregor and the Pawn Game",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "dfs and similar",
        "dp",
        "flows",
        "graph matchings",
        "graphs",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Gregor and Cryptography",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math",
        "number theory"
      ]
    }
  },
  "1548": {
    "E": {
      "name": "Gregor and the Two Painters",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3400,
      "tags": [
        "data structures",
        "divide and conquer",
        "graphs",
        "greedy",
        "math"
      ]
    },
    "D2": {
      "name": "Gregor and the Odd Cows (Hard)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 3300,
      "tags": [
        "brute force",
        "geometry",
        "math",
        "number theory"
      ]
    },
    "D1": {
      "name": "Gregor and the Odd Cows (Easy)",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "bitmasks",
        "geometry",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "The Three Little Pigs",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2500,
      "tags": [
        "combinatorics",
        "dp",
        "fft",
        "math"
      ]
    },
    "B": {
      "name": "Integers Have Friends",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "data structures",
        "divide and conquer",
        "math",
        "number theory",
        "two pointers"
      ]
    },
    "A": {
      "name": "Web of Lies",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "graphs",
        "greedy"
      ]
    }
  },
  "1547": {
    "G": {
      "name": "How Many Paths?",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
      ]
    },
    "F": {
      "name": "Array Stabilization (GCD version)",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "divide and conquer",
        "number theory",
        "two pointers"
      ]
    },
    "E": {
      "name": "Air Conditioners",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "data structures",
        "dp",
        "implementation",
        "shortest paths",
        "sortings",
        "two pointers"
      ]
    },
    "D": {
      "name": "Co-growing Sequence",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "greedy"
      ]
    },
    "C": {
      "name": "Pair Programming",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "greedy",
        "two pointers"
      ]
    },
    "B": {
      "name": "Alphabetical Strings",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Shortest Path with Obstacle",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1546": {
    "B": {
      "name": "AquaMoon and Stolen String",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "interactive",
        "math"
      ]
    },
    "A": {
      "name": "AquaMoon and Two Arrays",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "greedy"
      ]
    }
  },
  "1545": {
    "F": {
      "name": "AquaMoon and Potatoes",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3500,
      "tags": [
        "brute force",
        "data structures",
        "dp"
      ]
    },
    "E2": {
      "name": "AquaMoon and Time Stop (hard version)",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3500,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "E1": {
      "name": "AquaMoon and Time Stop (easy version)",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3500,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "D": {
      "name": "AquaMoon and Wrong Coordinate",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3000,
      "tags": [
        "constructive algorithms",
        "interactive",
        "math"
      ]
    },
    "C": {
      "name": "AquaMoon and Permutations",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2800,
      "tags": [
        "2-sat",
        "brute force",
        "combinatorics",
        "constructive algorithms",
        "graph matchings",
        "graphs"
      ]
    },
    "B": {
      "name": "AquaMoon and Chess",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "A": {
      "name": "AquaMoon and Strange Sort",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "sortings"
      ]
    }
  },
  "1543": {
    "E": {
      "name": "The Final Pursuit",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "divide and conquer",
        "graphs",
        "greedy",
        "math"
      ]
    },
    "D2": {
      "name": "RPD and Rap Sheet (Hard Version)",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "constructive algorithms",
        "interactive",
        "math"
      ]
    },
    "D1": {
      "name": "RPD and Rap Sheet (Easy Version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "interactive",
        "math"
      ]
    },
    "C": {
      "name": "Need for Pink Slips",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar",
        "implementation",
        "math",
        "probabilities"
      ]
    },
    "B": {
      "name": "Customising the Track",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 900,
      "tags": [
        "combinatorics",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Exciting Bets",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "greedy",
        "math",
        "number theory"
      ]
    }
  },
  "1542": {
    "E2": {
      "name": "Abnormal Permutation Pairs (hard version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2700,
      "tags": [
        "combinatorics",
        "dp",
        "fft",
        "math"
      ]
    },
    "E1": {
      "name": "Abnormal Permutation Pairs (easy version)",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "combinatorics",
        "dp",
        "fft",
        "math"
      ]
    },
    "D": {
      "name": "Priority Queue",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "combinatorics",
        "dp",
        "implementation",
        "math",
        "ternary search"
      ]
    },
    "C": {
      "name": "Strange Function",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Plus and Multiply",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Odd Set",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1541": {
    "B": {
      "name": "Pleasant Pairs",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "implementation",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Pretty Permutations",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    }
  },
  "1540": {
    "E": {
      "name": "Tasty Dishes",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3500,
      "tags": [
        "math",
        "matrices"
      ]
    },
    "D": {
      "name": "Inverse Inversions",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3200,
      "tags": [
        "binary search",
        "brute force",
        "data structures"
      ]
    },
    "C2": {
      "name": "Converging Array (Hard Version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2900,
      "tags": [
        "dp",
        "math"
      ]
    },
    "C1": {
      "name": "Converging Array (Easy Version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2700,
      "tags": [
        "dp",
        "math"
      ]
    },
    "B": {
      "name": "Tree Array",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "graphs",
        "math",
        "probabilities",
        "trees"
      ]
    },
    "A": {
      "name": "Great Graphs",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "graphs",
        "greedy",
        "shortest paths",
        "sortings"
      ]
    }
  },
  "1539": {
    "F": {
      "name": "Strange Array",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "E": {
      "name": "Game with Cards",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "D": {
      "name": "PriceFixed",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "greedy",
        "implementation",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Stable Groups",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Love Song",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "dp",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Contest Start",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "combinatorics",
        "geometry",
        "greedy",
        "math"
      ]
    }
  },
  "1538": {
    "G": {
      "name": "Gift Set",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "binary search",
        "greedy",
        "math",
        "ternary search"
      ]
    },
    "F": {
      "name": "Interesting Function",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "binary search",
        "dp",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Funny Substrings",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "data structures",
        "hashing",
        "implementation",
        "matrices",
        "strings"
      ]
    },
    "D": {
      "name": "Another Problem About Dividing Numbers",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Number of Pairs",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "binary search",
        "data structures",
        "math",
        "two pointers"
      ]
    },
    "B": {
      "name": "Friends and Candies",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Stone Game",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "dp",
        "greedy"
      ]
    }
  },
  "1537": {
    "F": {
      "name": "Figure Fixing",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "math"
      ]
    },
    "E2": {
      "name": "Erase and Extend (Hard Version)",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "hashing",
        "string suffix structures",
        "strings",
        "two pointers"
      ]
    },
    "E1": {
      "name": "Erase and Extend (Easy Version)",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "brute force",
        "dp",
        "greedy",
        "hashing",
        "implementation",
        "string suffix structures",
        "strings",
        "two pointers"
      ]
    },
    "D": {
      "name": "Deleting Divisors",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "games",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Challenging Cliffs",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Bad Boy",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 900,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Arithmetic Array",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1536": {
    "F": {
      "name": "Omkar and Akmar",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "chinese remainder theorem",
        "combinatorics",
        "constructive algorithms",
        "fft",
        "games",
        "geometry",
        "math",
        "meet-in-the-middle",
        "string suffix structures"
      ]
    },
    "E": {
      "name": "Omkar and Forest",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "combinatorics",
        "graphs",
        "math",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Omkar and Medians",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Diluc and Kaeya",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "data structures",
        "dp",
        "hashing",
        "number theory"
      ]
    },
    "B": {
      "name": "Prinzessin der Verurteilung",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "constructive algorithms",
        "strings"
      ]
    },
    "A": {
      "name": "Omkar and Bad Story",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "constructive algorithms"
      ]
    }
  },
  "1535": {
    "F": {
      "name": "String Distance",
      "type": "PROGRAMMING",
      "rating": 3000,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "hashing",
        "implementation",
        "strings"
      ]
    },
    "E": {
      "name": "Gold Transfer",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "interactive",
        "trees"
      ]
    },
    "D": {
      "name": "Playoff Tournament",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "implementation",
        "trees"
      ]
    },
    "C": {
      "name": "Unstable String",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "binary search",
        "dp",
        "greedy",
        "implementation",
        "strings",
        "two pointers"
      ]
    },
    "B": {
      "name": "Array Reodering",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "brute force",
        "greedy",
        "math",
        "number theory",
        "sortings"
      ]
    },
    "A": {
      "name": "Fair Playoff",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "1534": {
    "H": {
      "name": "Lost Nodes",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3500,
      "tags": [
        "constructive algorithms",
        "dp",
        "graphs",
        "interactive",
        "sortings",
        "trees"
      ]
    },
    "G": {
      "name": "A New Beginning",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3300,
      "tags": [
        "data structures",
        "dp",
        "geometry",
        "sortings"
      ]
    },
    "F2": {
      "name": "Falling Sand (Hard Version)",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 3000,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "greedy"
      ]
    },
    "F1": {
      "name": "Falling Sand (Easy Version)",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2500,
      "tags": [
        "dfs and similar",
        "graphs",
        "greedy"
      ]
    },
    "E": {
      "name": "Lost Array",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "graphs",
        "greedy",
        "interactive",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Lost Tree",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "interactive",
        "trees"
      ]
    },
    "C": {
      "name": "Little Alawn's Puzzle",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1300,
      "tags": [
        "combinatorics",
        "dp",
        "dsu",
        "graphs",
        "math"
      ]
    },
    "B": {
      "name": "Histogram Ugliness",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Colour the Flag",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "1533": {
    "J": {
      "name": "Pawns",
      "type": "PROGRAMMING",
      "tags": [
        "*special"
      ]
    },
    "I": {
      "name": "Excursions",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "constructive algorithms",
        "dfs and similar",
        "flows",
        "graph matchings",
        "graphs"
      ]
    },
    "H": {
      "name": "Submatrices",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "bitmasks",
        "data structures",
        "dp"
      ]
    },
    "G": {
      "name": "Biome Map",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "constructive algorithms",
        "dfs and similar",
        "graphs"
      ]
    },
    "F": {
      "name": "Binary String Partition",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "binary search",
        "greedy"
      ]
    },
    "E": {
      "name": "Chess Team Forming",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "binary search",
        "data structures",
        "greedy"
      ]
    },
    "D": {
      "name": "String Searching",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "hashing"
      ]
    },
    "C": {
      "name": "Sweets",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "data structures",
        "implementation"
      ]
    },
    "B": {
      "name": "Nearest Point Function",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "A": {
      "name": "Travel to Bertown",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "implementation",
        "math"
      ]
    }
  },
  "1532": {
    "F": {
      "name": "Prefixes and Suffixes",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "strings"
      ]
    },
    "E": {
      "name": "Good Array",
      "type": "PROGRAMMING",
      "tags": [
        "*special"
      ]
    },
    "D": {
      "name": "Teams Forming",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "sortings"
      ]
    },
    "C": {
      "name": "Uniform String",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "B": {
      "name": "Frog Jumping",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "math"
      ]
    },
    "A": {
      "name": "A+B (Trial Problem)",
      "type": "PROGRAMMING",
      "tags": [
        "*special"
      ]
    }
  },
  "1531": {
    "E3": {
      "name": "\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0441\u043b\u0438\u044f\u043d\u0438\u0435\u043c",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "binary search"
      ]
    },
    "E2": {
      "name": "\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0441\u043b\u0438\u044f\u043d\u0438\u0435\u043c",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "*special",
        "brute force"
      ]
    },
    "E1": {
      "name": "\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0441\u043b\u0438\u044f\u043d\u0438\u0435\u043c",
      "type": "PROGRAMMING",
      "tags": [
        "*special"
      ]
    },
    "D": {
      "name": "\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0443\u0435\u043c \u0417\u0438\u043d\u0433\u0435\u0440 | color",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "*special"
      ]
    },
    "C": {
      "name": "\u0421\u0438\u043c\u043c\u0435\u0442\u0440\u0438\u0447\u043d\u044b\u0439 \u0430\u043c\u0444\u0438\u0442\u0435\u0430\u0442\u0440",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "constructive algorithms",
        "dp"
      ]
    },
    "B2": {
      "name": "\u041c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433",
      "type": "PROGRAMMING",
      "tags": [
        "*special"
      ]
    },
    "B1": {
      "name": "\u041c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "*special"
      ]
    },
    "A": {
      "name": "\u0417\u0438\u043d\u0433\u0435\u0440 | color",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "implementation"
      ]
    }
  },
  "1530": {
    "H": {
      "name": "Turing's Award",
      "type": "PROGRAMMING",
      "points": 4750.0,
      "rating": 3400,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "G": {
      "name": "What a Reversal",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 3300,
      "tags": [
        "constructive algorithms"
      ]
    },
    "F": {
      "name": "Bingo",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2600,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "math",
        "probabilities"
      ]
    },
    "E": {
      "name": "Minimax",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "greedy",
        "strings"
      ]
    },
    "D": {
      "name": "Secret Santa",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "flows",
        "graphs",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Pursuit",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "binary search",
        "brute force",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Putting Plates",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "Binary Decimal",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1529": {
    "B": {
      "name": "Sifid and Strange Subsequences",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Eshag Loves Big Arrays",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    }
  },
  "1528": {
    "F": {
      "name": "AmShZ Farm",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3300,
      "tags": [
        "combinatorics",
        "fft",
        "math"
      ]
    },
    "E": {
      "name": "Mashtali and Hagh Trees",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2900,
      "tags": [
        "combinatorics",
        "dp",
        "trees"
      ]
    },
    "D": {
      "name": "It's a bird! No, it's a plane! No, it's AaParsa!",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "graphs",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Trees of Tranquillity",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "dfs and similar",
        "greedy",
        "trees"
      ]
    },
    "B": {
      "name": "Kavi on Pairing Duty",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "A": {
      "name": "Parsa's Humongous Tree",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "divide and conquer",
        "dp",
        "greedy",
        "trees"
      ]
    }
  },
  "1527": {
    "E": {
      "name": "Partition Game",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "data structures",
        "divide and conquer",
        "dp"
      ]
    },
    "D": {
      "name": "MEX Tree",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2400,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "implementation",
        "math",
        "trees"
      ]
    },
    "C": {
      "name": "Sequence Pair Weight",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "hashing",
        "implementation",
        "math"
      ]
    },
    "B2": {
      "name": "Palindrome Game (hard version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "games"
      ]
    },
    "B1": {
      "name": "Palindrome Game (easy version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "games"
      ]
    },
    "A": {
      "name": "And Then There Were K",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "bitmasks"
      ]
    }
  },
  "1526": {
    "F": {
      "name": "Median Queries",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3000,
      "tags": [
        "constructive algorithms",
        "interactive",
        "probabilities"
      ]
    },
    "E": {
      "name": "Oolimry and Suffix Array",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "math"
      ]
    },
    "D": {
      "name": "Kill Anton",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "constructive algorithms",
        "data structures",
        "math",
        "strings"
      ]
    },
    "C2": {
      "name": "Potions (Hard Version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "C1": {
      "name": "Potions (Easy Version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "B": {
      "name": "I Hate 1111",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "dp",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Mean Inequality",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "sortings"
      ]
    }
  },
  "1525": {
    "F": {
      "name": "Goblins And Gnomes",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "brute force",
        "dp",
        "flows",
        "graph matchings"
      ]
    },
    "E": {
      "name": "Assimilation IV",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "probabilities",
        "two pointers"
      ]
    },
    "D": {
      "name": "Armchairs",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "dp",
        "flows",
        "graph matchings",
        "greedy"
      ]
    },
    "C": {
      "name": "Robot Collisions",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "data structures",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Permutation Sort",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "Potion-making",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math",
        "number theory"
      ]
    }
  },
  "1523": {
    "H": {
      "name": "Hopping Around the Array ",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3500,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "G": {
      "name": "Try Booking",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3200,
      "tags": [
        "data structures",
        "divide and conquer"
      ]
    },
    "F": {
      "name": "Favorite Game",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3300,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "E": {
      "name": "Crypto Lights",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2600,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "probabilities"
      ]
    },
    "D": {
      "name": "Love-Hate",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "probabilities"
      ]
    },
    "C": {
      "name": "Compression and Expansion",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "data structures",
        "greedy",
        "implementation",
        "trees"
      ]
    },
    "B": {
      "name": "Lord of the Values",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "Game of Life",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1521": {
    "E": {
      "name": "Nastia and a Beautiful Matrix",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2700,
      "tags": [
        "binary search",
        "constructive algorithms",
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Nastia Plays with a Tree",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "data structures",
        "dfs and similar",
        "dp",
        "dsu",
        "greedy",
        "implementation",
        "trees"
      ]
    },
    "C": {
      "name": "Nastia and a Hidden Permutation",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "interactive"
      ]
    },
    "B": {
      "name": "Nastia and a Good Array",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Nastia and Nearly Good Numbers",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory"
      ]
    }
  },
  "1520": {
    "G": {
      "name": "To Go Or Not To Go?",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "brute force",
        "dfs and similar",
        "graphs",
        "greedy",
        "implementation",
        "shortest paths"
      ]
    },
    "F2": {
      "name": "Guess the K-th Zero (Hard version)",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "interactive"
      ]
    },
    "F1": {
      "name": "Guess the K-th Zero (Easy version)",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "binary search",
        "interactive"
      ]
    },
    "E": {
      "name": "Arranging The Sheep",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "D": {
      "name": "Same Differences",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "data structures",
        "hashing",
        "math"
      ]
    },
    "C": {
      "name": "Not Adjacent Matrix",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Ordinary Numbers",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Do Not Be Distracted!",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "1519": {
    "F": {
      "name": "Chests and Keys",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar",
        "dp",
        "flows"
      ]
    },
    "E": {
      "name": "Off by One",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "geometry",
        "graphs",
        "sortings",
        "trees"
      ]
    },
    "D": {
      "name": "Maximum Sum of Products",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "brute force",
        "dp",
        "implementation",
        "math",
        "two pointers"
      ]
    },
    "C": {
      "name": "Berland Regional",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "brute force",
        "data structures",
        "greedy",
        "number theory",
        "sortings"
      ]
    },
    "B": {
      "name": "The Cake Is a Lie",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "dp",
        "math"
      ]
    },
    "A": {
      "name": "Red and Blue Beans",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1517": {
    "H": {
      "name": "Fly Around the World",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3500,
      "tags": [
        "dp",
        "geometry"
      ]
    },
    "G": {
      "name": "Starry Night Camping",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3300,
      "tags": [
        "constructive algorithms",
        "flows",
        "graphs"
      ]
    },
    "F": {
      "name": "Reunion",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3200,
      "tags": [
        "combinatorics",
        "dp",
        "trees"
      ]
    },
    "E": {
      "name": "Group Photo",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "data structures",
        "implementation",
        "two pointers"
      ]
    },
    "D": {
      "name": "Explorer Space",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1800,
      "tags": [
        "dp",
        "graphs",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Fillomino 2",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Morning Jogging",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Sum of 2050",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1516": {
    "E": {
      "name": "Baby Ehab Plays with Permutations",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2500,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "Cut",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "graphs",
        "number theory",
        "two pointers"
      ]
    },
    "C": {
      "name": "Baby Ehab Partitions Again",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "dp",
        "math"
      ]
    },
    "B": {
      "name": "AGAGA XOOORRR",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "greedy"
      ]
    },
    "A": {
      "name": "Tit for Tat",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy"
      ]
    }
  },
  "1515": {
    "I": {
      "name": "Phoenix and Diamonds",
      "type": "PROGRAMMING",
      "points": 5000.0,
      "rating": 3400,
      "tags": [
        "binary search",
        "data structures",
        "sortings"
      ]
    },
    "H": {
      "name": "Phoenix and Bits",
      "type": "PROGRAMMING",
      "points": 4250.0,
      "rating": 3500,
      "tags": [
        "bitmasks",
        "brute force",
        "data structures",
        "sortings"
      ]
    },
    "G": {
      "name": "Phoenix and Odometers",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 2700,
      "tags": [
        "dfs and similar",
        "graphs",
        "math",
        "number theory"
      ]
    },
    "F": {
      "name": "Phoenix and Earthquake",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 2600,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "E": {
      "name": "Phoenix and Computers",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2200,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "Phoenix and Socks",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1500,
      "tags": [
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Phoenix and Towers",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy"
      ]
    },
    "B": {
      "name": "Phoenix and Puzzle",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "geometry",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Phoenix and Gold",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    }
  },
  "1514": {
    "E": {
      "name": "Baby Ehab's Hyper Apartment",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "binary search",
        "graphs",
        "interactive",
        "sortings",
        "two pointers"
      ]
    },
    "D": {
      "name": "Cut and Stick",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "C": {
      "name": "Product 1 Modulo N",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "greedy",
        "number theory"
      ]
    },
    "B": {
      "name": "AND 0, Sum Big",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "bitmasks",
        "combinatorics",
        "math"
      ]
    },
    "A": {
      "name": "Perfectly Imperfect Array",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math",
        "number theory"
      ]
    }
  },
  "1513": {
    "F": {
      "name": "Swapping Problem",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "constructive algorithms",
        "data structures",
        "sortings"
      ]
    },
    "E": {
      "name": "Cost Equilibrium",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2300,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "math",
        "sortings"
      ]
    },
    "D": {
      "name": "GCD and MST",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "dsu",
        "graphs",
        "greedy",
        "number theory",
        "sortings"
      ]
    },
    "C": {
      "name": "Add One",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "dp",
        "matrices"
      ]
    },
    "B": {
      "name": "AND Sequences",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "bitmasks",
        "combinatorics",
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Array and Peaks",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "1512": {
    "G": {
      "name": "Short Task",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "brute force",
        "dp",
        "math",
        "number theory"
      ]
    },
    "F": {
      "name": "Education",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "E": {
      "name": "Permutation by Sum",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "brute force",
        "greedy",
        "math"
      ]
    },
    "D": {
      "name": "Corrupted Array",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy"
      ]
    },
    "C": {
      "name": "A-B Palindrome",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "implementation",
        "strings"
      ]
    },
    "B": {
      "name": "Almost Rectangle",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Spy Detected!",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "1511": {
    "G": {
      "name": "Chips on a Board",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "bitmasks",
        "brute force",
        "data structures",
        "dp",
        "games",
        "two pointers"
      ]
    },
    "F": {
      "name": "Chainword",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "brute force",
        "data structures",
        "dp",
        "matrices",
        "string suffix structures",
        "strings"
      ]
    },
    "E": {
      "name": "Colorings and Dominoes",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "combinatorics",
        "dp",
        "greedy",
        "math"
      ]
    },
    "D": {
      "name": "Min Cost String",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "brute force",
        "constructive algorithms",
        "graphs",
        "greedy",
        "strings"
      ]
    },
    "C": {
      "name": "Yet Another Card Deck",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "brute force",
        "data structures",
        "implementation",
        "trees"
      ]
    },
    "B": {
      "name": "GCD Length",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Review Site",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy"
      ]
    }
  },
  "1510": {
    "K": {
      "name": "King's Task",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "brute force",
        "graphs",
        "implementation"
      ]
    },
    "J": {
      "name": "Japanese Game",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "I": {
      "name": "Is It Rated?",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "greedy",
        "interactive",
        "math",
        "probabilities"
      ]
    },
    "H": {
      "name": "Hard Optimization",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": [
        "dp"
      ]
    },
    "G": {
      "name": "Guide",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": []
    },
    "F": {
      "name": "Fiber Shape",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": []
    },
    "E": {
      "name": "Equilibrium Point /\\textbackslash/\\textbackslash",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": []
    },
    "D": {
      "name": "Digits",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dp",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Cactus Not Enough",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "dfs and similar",
        "graph matchings",
        "graphs"
      ]
    },
    "B": {
      "name": "Button Lock",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "flows",
        "graph matchings",
        "graphs"
      ]
    },
    "A": {
      "name": "ASCII Automata Art",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": []
    }
  },
  "1509": {
    "C": {
      "name": "The Sports Festival",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "B": {
      "name": "TMT Document",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Average Height",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms"
      ]
    }
  },
  "1508": {
    "F": {
      "name": "Optimal Encoding",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3500,
      "tags": [
        "brute force",
        "data structures"
      ]
    },
    "E": {
      "name": "Tree Calendar",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3100,
      "tags": [
        "brute force",
        "constructive algorithms",
        "data structures",
        "dfs and similar",
        "sortings",
        "trees"
      ]
    },
    "D": {
      "name": "Swap Pass",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3000,
      "tags": [
        "constructive algorithms",
        "geometry",
        "sortings"
      ]
    },
    "C": {
      "name": "Complete the MST",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "brute force",
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "B": {
      "name": "Almost Sorted",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "combinatorics",
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "Binary Literature",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "strings",
        "two pointers"
      ]
    }
  },
  "1506": {
    "G": {
      "name": "Maximize the Remaining String",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "brute force",
        "data structures",
        "dp",
        "greedy",
        "strings"
      ]
    },
    "F": {
      "name": "Triangular Paths",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "graphs",
        "math",
        "shortest paths",
        "sortings"
      ]
    },
    "E": {
      "name": "Restoring the Permutation",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "D": {
      "name": "Epic Transformation",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy"
      ]
    },
    "C": {
      "name": "Double-ended Strings",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    },
    "B": {
      "name": "Partial Replacement",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Strange Table",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1505": {
    "I": {
      "name": "Mysterious language again, seriously?",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "*special"
      ]
    },
    "H": {
      "name": "L BREAK into program",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "*special"
      ]
    },
    "G": {
      "name": "Encoded message",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "F": {
      "name": "Math",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "*special",
        "math"
      ]
    },
    "E": {
      "name": "Cakewalk",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special",
        "greedy",
        "implementation",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Xenolith? Hippodrome?",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special",
        "number theory"
      ]
    },
    "C": {
      "name": "Fibonacci Words",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "B": {
      "name": "DMCA",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "*special",
        "implementation",
        "number theory"
      ]
    },
    "A": {
      "name": "Is it rated - 2",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "*special",
        "implementation",
        "interactive"
      ]
    }
  },
  "1504": {
    "B": {
      "name": "Flip the Bits",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": " D\u00e9j\u00e0 Vu",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "strings"
      ]
    }
  },
  "1503": {
    "F": {
      "name": "Balance the Cards",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3500,
      "tags": [
        "constructive algorithms",
        "data structures",
        "divide and conquer",
        "geometry",
        "graphs",
        "implementation"
      ]
    },
    "E": {
      "name": "2-Coloring",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "Flip the Cards",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2600,
      "tags": [
        "2-sat",
        "constructive algorithms",
        "data structures",
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Travelling Salesman Problem",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "shortest paths",
        "sortings",
        "two pointers"
      ]
    },
    "B": {
      "name": "3-Coloring",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "games",
        "interactive"
      ]
    },
    "A": {
      "name": "Balance the Bits",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    }
  },
  "1501": {
    "B": {
      "name": "Napoleon Cake",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "dp",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Alexey and Train",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1500": {
    "F": {
      "name": "Cupboards Jumps",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3500,
      "tags": [
        "dp"
      ]
    },
    "E": {
      "name": "Subset Trick",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3300,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "D": {
      "name": "Tiles for Bathroom",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "data structures",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Matrix Sorting",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2600,
      "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "greedy",
        "two pointers"
      ]
    },
    "B": {
      "name": "Two chandeliers",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "brute force",
        "chinese remainder theorem",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Going Home",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "hashing",
        "implementation",
        "math"
      ]
    }
  },
  "1499": {
    "G": {
      "name": "Graph Coloring",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": [
        "data structures",
        "graphs",
        "interactive"
      ]
    },
    "F": {
      "name": "Diameter Cuts",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "E": {
      "name": "Chaotic Merge",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "strings"
      ]
    },
    "D": {
      "name": "The Number of Pairs",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dp",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Minimum Grid Path",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "brute force",
        "data structures",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Binary Removals",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Domino on Windowsill",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1498": {
    "F": {
      "name": "Christmas Game",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "data structures",
        "dfs and similar",
        "dp",
        "games",
        "math",
        "trees"
      ]
    },
    "E": {
      "name": "Two Houses",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "graphs",
        "greedy",
        "interactive",
        "sortings"
      ]
    },
    "D": {
      "name": "Bananas in a Microwave",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "implementation"
      ]
    },
    "C": {
      "name": "Planar Reflections",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "data structures",
        "dp"
      ]
    },
    "B": {
      "name": "Box Fitting",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "binary search",
        "bitmasks",
        "data structures",
        "greedy"
      ]
    },
    "A": {
      "name": "GCD Sum",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "math"
      ]
    }
  },
  "1497": {
    "E2": {
      "name": "Square-free division (hard version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "math",
        "number theory",
        "two pointers"
      ]
    },
    "E1": {
      "name": "Square-Free Division (easy version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "math",
        "number theory",
        "two pointers"
      ]
    },
    "D": {
      "name": "Genius",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "dp",
        "graphs",
        "number theory"
      ]
    },
    "C2": {
      "name": "k-LCM (hard version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "C1": {
      "name": "k-LCM (easy version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "B": {
      "name": "M-arrays",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Meximization",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "data structures",
        "greedy",
        "sortings"
      ]
    }
  },
  "1496": {
    "B": {
      "name": "Max and Mex",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Split it!",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "strings"
      ]
    }
  },
  "1495": {
    "F": {
      "name": "Squares",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3300,
      "tags": [
        "constructive algorithms",
        "data structures",
        "dp",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "Qingshan and Daniel",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3200,
      "tags": [
        "brute force",
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "D": {
      "name": "BFS Trees",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "graphs",
        "math",
        "shortest paths",
        "trees"
      ]
    },
    "C": {
      "name": "Garden of the Sun",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "graphs"
      ]
    },
    "B": {
      "name": "Let's Go Hiking",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "games",
        "greedy"
      ]
    },
    "A": {
      "name": "Diamond Miner",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "geometry",
        "greedy",
        "math",
        "sortings"
      ]
    }
  },
  "1494": {
    "F": {
      "name": "Delete The Edges",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "implementation"
      ]
    },
    "E": {
      "name": "A-Z Graph",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "data structures",
        "graphs",
        "hashing"
      ]
    },
    "D": {
      "name": "Dogeforces",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "data structures",
        "dfs and similar",
        "divide and conquer",
        "dsu",
        "greedy",
        "sortings",
        "trees"
      ]
    },
    "C": {
      "name": "1D Sokoban",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "dp",
        "greedy",
        "implementation",
        "two pointers"
      ]
    },
    "B": {
      "name": "Berland Crossword",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "bitmasks",
        "brute force",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "ABC String",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "bitmasks",
        "brute force",
        "implementation"
      ]
    }
  },
  "1493": {
    "F": {
      "name": "Enchanted Matrix",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 2600,
      "tags": [
        "bitmasks",
        "interactive",
        "number theory"
      ]
    },
    "E": {
      "name": "Enormous XOR",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2600,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "greedy",
        "math",
        "strings",
        "two pointers"
      ]
    },
    "D": {
      "name": "GCD of an Array",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "data structures",
        "hashing",
        "implementation",
        "math",
        "number theory",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "K-beautiful Strings",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "brute force",
        "constructive algorithms",
        "greedy",
        "strings"
      ]
    },
    "B": {
      "name": "Planet Lapituletti",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Anti-knapsack",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    }
  },
  "1492": {
    "E": {
      "name": "Almost Fault-Tolerant Database",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "greedy",
        "implementation"
      ]
    },
    "D": {
      "name": "Genius's Gambit",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 1900,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Maximum width",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "two pointers"
      ]
    },
    "B": {
      "name": "Card Deck",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "data structures",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Three swimmers",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1491": {
    "I": {
      "name": "Ruler Of The Zoo",
      "type": "PROGRAMMING",
      "points": 5000.0,
      "rating": 3500,
      "tags": [
        "brute force",
        "data structures"
      ]
    },
    "H": {
      "name": "Yuezheng Ling and Dynamic Tree",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3400,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "G": {
      "name": "Switch and Flip",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2800,
      "tags": [
        "constructive algorithms",
        "graphs",
        "math"
      ]
    },
    "F": {
      "name": "Magnets",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "binary search",
        "constructive algorithms",
        "interactive"
      ]
    },
    "E": {
      "name": "Fib-tree",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2400,
      "tags": [
        "brute force",
        "dfs and similar",
        "divide and conquer",
        "number theory",
        "trees"
      ]
    },
    "D": {
      "name": "Zookeeper and The Infinite Zoo",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1800,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "dp",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Pekora and Trampoline",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "data structures",
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Minimal Cost",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "math"
      ]
    },
    "A": {
      "name": "K-th Largest Value",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    }
  },
  "1490": {
    "G": {
      "name": "Old Floppy Drive ",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "data structures",
        "math"
      ]
    },
    "F": {
      "name": "Equalize the Array",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "E": {
      "name": "Accidental Victory",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "binary search",
        "data structures",
        "greedy"
      ]
    },
    "D": {
      "name": "Permutation Transformation",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "dfs and similar",
        "divide and conquer",
        "implementation"
      ]
    },
    "C": {
      "name": "Sum of Cubes",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "binary search",
        "brute force",
        "brute force",
        "math"
      ]
    },
    "B": {
      "name": "Balanced Remainders",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "brute force",
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Dense Array",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1488": {
    "J": {
      "name": "Flower Shop",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": [
        "*special",
        "data structures",
        "fft",
        "math"
      ]
    },
    "I": {
      "name": "Demonic Invasion",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": [
        "*special",
        "flows"
      ]
    },
    "H": {
      "name": "Build From Suffixes",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "*special",
        "combinatorics",
        "data structures"
      ]
    },
    "G": {
      "name": "Painting Numbers",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "*special",
        "data structures",
        "greedy",
        "number theory"
      ]
    },
    "F": {
      "name": "Dogecoin",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "*special",
        "*special",
        "binary search",
        "data structures"
      ]
    },
    "E": {
      "name": "Palindromic Doubles",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "*special",
        "data structures",
        "dp"
      ]
    },
    "D": {
      "name": "Problemsolving Marathon",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "*special",
        "binary search",
        "greedy"
      ]
    },
    "C": {
      "name": "Two Policemen",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "*special",
        "binary search",
        "brute force",
        "math"
      ]
    },
    "B": {
      "name": "RBS Deletion",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special",
        "greedy"
      ]
    },
    "A": {
      "name": "From Zero To Y",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "*special",
        "math"
      ]
    }
  },
  "1487": {
    "G": {
      "name": "String Counting",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "combinatorics",
        "dp",
        "fft",
        "math"
      ]
    },
    "F": {
      "name": "Ones",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "dp",
        "greedy",
        "shortest paths"
      ]
    },
    "E": {
      "name": "Cheap Dinner",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "brute force",
        "data structures",
        "graphs",
        "greedy",
        "implementation",
        "sortings",
        "two pointers"
      ]
    },
    "D": {
      "name": "Pythagorean Triples",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "binary search",
        "brute force",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Minimum Ties",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Cat Cycle",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Arena",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "sortings"
      ]
    }
  },
  "1486": {
    "F": {
      "name": "Pairs of Paths",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2600,
      "tags": [
        "combinatorics",
        "data structures",
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "E": {
      "name": "Paired Payment",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "brute force",
        "constructive algorithms",
        "dp",
        "flows",
        "graphs",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Max Median",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "data structures",
        "dp"
      ]
    },
    "C2": {
      "name": "Guessing the Greatest (hard version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "interactive"
      ]
    },
    "C1": {
      "name": "Guessing the Greatest (easy version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "interactive"
      ]
    },
    "B": {
      "name": "Eastern Exhibition",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "geometry",
        "shortest paths",
        "sortings"
      ]
    },
    "A": {
      "name": "Shifting Stacks",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "1485": {
    "F": {
      "name": "Copy or Prefix Sum",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2400,
      "tags": [
        "combinatorics",
        "data structures",
        "dp",
        "sortings"
      ]
    },
    "E": {
      "name": "Move and Swap",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "D": {
      "name": "Multiples and Power Differences",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "graphs",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Floor and Mod",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "brute force",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Replace and Keep Sorted",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "dp",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Add and Divide",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "greedy",
        "math",
        "number theory"
      ]
    }
  },
  "1482": {
    "H": {
      "name": "Exam",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3400,
      "tags": [
        "data structures",
        "string suffix structures",
        "trees"
      ]
    },
    "G": {
      "name": "Vabank",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3200,
      "tags": [
        "binary search",
        "interactive"
      ]
    },
    "F": {
      "name": "Useful Edges",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2400,
      "tags": [
        "graphs",
        "shortest paths"
      ]
    },
    "E": {
      "name": "Skyline Photo",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "divide and conquer",
        "dp"
      ]
    },
    "D": {
      "name": "Playlist",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "dsu",
        "implementation",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Basic Diplomacy",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Restore Modulo",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Prison Break",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1481": {
    "F": {
      "name": "AB Tree",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3100,
      "tags": [
        "dp",
        "greedy",
        "trees"
      ]
    },
    "E": {
      "name": "Sorting Books",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "AB Graph",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "constructive algorithms",
        "graphs",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Fence Painting",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
      ]
    },
    "B": {
      "name": "New Colony",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Space Navigation ",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "strings"
      ]
    }
  },
  "1480": {
    "B": {
      "name": "The Great Hero",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Yet Another String Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "games",
        "greedy",
        "strings"
      ]
    }
  },
  "1479": {
    "E": {
      "name": "School Clubs",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3500,
      "tags": [
        "dp",
        "fft",
        "math",
        "number theory",
        "probabilities"
      ]
    },
    "D": {
      "name": "Odd Mineral Resource",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2900,
      "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "data structures",
        "probabilities",
        "trees"
      ]
    },
    "C": {
      "name": "Continuous City",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "constructive algorithms"
      ]
    },
    "B2": {
      "name": "Painting the Array II",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "data structures",
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "B1": {
      "name": "Painting the Array I",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "data structures",
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Searching Local Minimum",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "interactive",
        "ternary search"
      ]
    }
  },
  "1478": {
    "C": {
      "name": "Nezzar and Symmetric Array",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "implementation",
        "math",
        "sortings"
      ]
    },
    "B": {
      "name": "Nezzar and Lucky Number",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Nezzar and Colorful Balls",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "greedy"
      ]
    }
  },
  "1477": {
    "F": {
      "name": "Nezzar and Chocolate Bars",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3500,
      "tags": [
        "combinatorics",
        "fft",
        "math",
        "probabilities"
      ]
    },
    "E": {
      "name": "Nezzar and Tournaments",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3300,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "D": {
      "name": "Nezzar and Hidden Permutations",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2800,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs"
      ]
    },
    "C": {
      "name": "Nezzar and Nice Beatmap",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "geometry",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "B": {
      "name": "Nezzar and Binary String",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "A": {
      "name": "Nezzar and Board",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory"
      ]
    }
  },
  "1476": {
    "G": {
      "name": "Minimum Difference",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": [
        "data structures",
        "hashing",
        "sortings",
        "two pointers"
      ]
    },
    "F": {
      "name": "Lanterns",
      "type": "PROGRAMMING",
      "rating": 3000,
      "tags": [
        "binary search",
        "data structures",
        "dp"
      ]
    },
    "E": {
      "name": "Pattern Matching",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "bitmasks",
        "data structures",
        "dfs and similar",
        "graphs",
        "hashing",
        "sortings",
        "strings"
      ]
    },
    "D": {
      "name": "Journey",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "dp",
        "dsu",
        "implementation"
      ]
    },
    "C": {
      "name": "Longest Simple Cycle",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "dp",
        "graphs",
        "greedy"
      ]
    },
    "B": {
      "name": "Inflation",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "binary search",
        "brute force",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "K-divisible Sum",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "math"
      ]
    }
  },
  "1475": {
    "G": {
      "name": "Strange Beauty",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "dp",
        "math",
        "number theory",
        "sortings"
      ]
    },
    "F": {
      "name": "Unusual Matrix",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "2-sat",
        "brute force",
        "constructive algorithms"
      ]
    },
    "E": {
      "name": "Advertising Agency",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "combinatorics",
        "math",
        "sortings"
      ]
    },
    "D": {
      "name": "Cleaning the Phone",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "binary search",
        "dp",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Ball in Berland",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "combinatorics",
        "graphs",
        "math"
      ]
    },
    "B": {
      "name": "New Year's Number",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "brute force",
        "dp",
        "math"
      ]
    },
    "A": {
      "name": "Odd Divisor",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "math",
        "number theory"
      ]
    }
  },
  "1474": {
    "F": {
      "name": "1 2 3 4 ...",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "dp",
        "math",
        "matrices"
      ]
    },
    "E": {
      "name": "What Is It?",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "D": {
      "name": "Cleaning",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Array Destruction",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "constructive algorithms",
        "data structures",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Different Divisors",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Puzzle From the Future",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy"
      ]
    }
  },
  "1473": {
    "G": {
      "name": "Tiles",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "combinatorics",
        "dp",
        "fft",
        "math"
      ]
    },
    "F": {
      "name": "Strange Set",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "flows",
        "math"
      ]
    },
    "E": {
      "name": "Minimum Path",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "graphs",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Program",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "data structures",
        "dp",
        "implementation",
        "strings"
      ]
    },
    "C": {
      "name": "No More Inversions",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "B": {
      "name": "String LCM",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "brute force",
        "math",
        "number theory",
        "strings"
      ]
    },
    "A": {
      "name": "Replacing Elements",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "implementation",
        "math",
        "sortings"
      ]
    }
  },
  "1472": {
    "G": {
      "name": "Moving to the Capital",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "shortest paths"
      ]
    },
    "F": {
      "name": "New Year's Puzzle",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "brute force",
        "dp",
        "graph matchings",
        "greedy",
        "sortings"
      ]
    },
    "E": {
      "name": "Correct Placement",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "sortings",
        "two pointers"
      ]
    },
    "D": {
      "name": "Even-Odd Game",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "dp",
        "games",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Long Jumps",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "dp",
        "graphs"
      ]
    },
    "B": {
      "name": "Fair Division",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "dp",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Cards for Friends",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1471": {
    "B": {
      "name": "Strange List",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Strange Partition",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "greedy",
        "math",
        "number theory"
      ]
    }
  },
  "1470": {
    "F": {
      "name": "Strange Covering",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3500,
      "tags": [
        "divide and conquer"
      ]
    },
    "E": {
      "name": "Strange Permutation",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3200,
      "tags": [
        "binary search",
        "combinatorics",
        "data structures",
        "dp",
        "graphs",
        "implementation",
        "two pointers"
      ]
    },
    "D": {
      "name": "Strange Housing",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graph matchings",
        "graphs",
        "greedy"
      ]
    },
    "C": {
      "name": "Strange Shuffle",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "brute force",
        "constructive algorithms",
        "interactive"
      ]
    },
    "B": {
      "name": "Strange Definition",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1900,
      "tags": [
        "bitmasks",
        "graphs",
        "hashing",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Strange Birthday Party",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "binary search",
        "dp",
        "greedy",
        "sortings",
        "two pointers"
      ]
    }
  },
  "1469": {
    "F": {
      "name": "Power Sockets",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "binary search",
        "data structures",
        "greedy"
      ]
    },
    "E": {
      "name": "A Bit Similar",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "bitmasks",
        "brute force",
        "hashing",
        "string suffix structures",
        "strings",
        "two pointers"
      ]
    },
    "D": {
      "name": "Ceil Divisions",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "brute force",
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Building a Fence",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "dp",
        "greedy",
        "implementation",
        "two pointers"
      ]
    },
    "B": {
      "name": "Red and Blue",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "A": {
      "name": "Regular Bracket Sequence",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    }
  },
  "1468": {
    "N": {
      "name": "Waste Sorting",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "M": {
      "name": "Similar Sets",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "data structures",
        "graphs",
        "implementation"
      ]
    },
    "L": {
      "name": "Prime Divisors Selection",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "binary search",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "K": {
      "name": "The Robot",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "J": {
      "name": "Road Reform",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "dsu",
        "graphs",
        "greedy"
      ]
    },
    "I": {
      "name": "Plane Tiling",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "geometry",
        "implementation",
        "math"
      ]
    },
    "H": {
      "name": "K and Medians",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "G": {
      "name": "Hobbits",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "binary search",
        "geometry"
      ]
    },
    "F": {
      "name": "Full Turn",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "geometry",
        "hashing",
        "number theory"
      ]
    },
    "E": {
      "name": "Four Segments",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy"
      ]
    },
    "D": {
      "name": "Firecrackers",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "binary search",
        "sortings"
      ]
    },
    "C": {
      "name": "Berpizza",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "B": {
      "name": "Bakery",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "data structures",
        "dsu"
      ]
    },
    "A": {
      "name": "LaIS",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "data structures",
        "dp",
        "greedy"
      ]
    }
  },
  "1467": {
    "E": {
      "name": "Distinctive Roots in a Tree",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "D": {
      "name": "Sum of Paths",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2200,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "C": {
      "name": "Three Bags",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "B": {
      "name": "Hills And Valleys",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Wizard of Orz",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    }
  },
  "1466": {
    "I": {
      "name": "The Riddle of the Sphinx",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3400,
      "tags": [
        "binary search",
        "data structures",
        "data structures",
        "interactive"
      ]
    },
    "H": {
      "name": "Finding satisfactory solutions",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3300,
      "tags": [
        "combinatorics",
        "dp",
        "graphs",
        "greedy",
        "math"
      ]
    },
    "G": {
      "name": "Song of the Sirens",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "combinatorics",
        "divide and conquer",
        "hashing",
        "math",
        "string suffix structures",
        "strings"
      ]
    },
    "F": {
      "name": "Euclid's nightmare",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2100,
      "tags": [
        "bitmasks",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "E": {
      "name": "Apollo versus Pan",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "bitmasks",
        "brute force",
        "math"
      ]
    },
    "D": {
      "name": "13th Labour of Heracles",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "data structures",
        "greedy",
        "sortings",
        "trees"
      ]
    },
    "C": {
      "name": "Canine poetry",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "dp",
        "greedy",
        "strings"
      ]
    },
    "B": {
      "name": "Last minute enhancements",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "A": {
      "name": "Bovine Dilemma",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "geometry",
        "math"
      ]
    }
  },
  "1464": {
    "F": {
      "name": "My Beautiful Madness",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3500,
      "tags": [
        "data structures",
        "trees"
      ]
    }
  },
  "1463": {
    "F": {
      "name": "Max Correct Set",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": [
        "bitmasks",
        "dp",
        "math"
      ]
    },
    "E": {
      "name": "Plan of Lectures",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "implementation",
        "sortings",
        "trees"
      ]
    },
    "D": {
      "name": "Pairs",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "two pointers"
      ]
    },
    "C": {
      "name": "Busy Robot",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "implementation"
      ]
    },
    "B": {
      "name": "Find The Array",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "Dungeon",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "binary search",
        "math"
      ]
    }
  },
  "1462": {
    "F": {
      "name": "The Treasure of The Segments",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "binary search",
        "data structures",
        "greedy"
      ]
    },
    "E2": {
      "name": "Close Tuples (hard version)",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "binary search",
        "combinatorics",
        "implementation",
        "math",
        "sortings",
        "two pointers"
      ]
    },
    "E1": {
      "name": "Close Tuples (easy version)",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "binary search",
        "combinatorics",
        "math",
        "sortings",
        "two pointers"
      ]
    },
    "D": {
      "name": "Add to Neighbour and Remove",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "greedy",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Unique Number",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "brute force",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Last Year's Substring",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "dp",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Favorite Sequence",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "two pointers"
      ]
    }
  },
  "1461": {
    "F": {
      "name": "Mathematical Expression",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy"
      ]
    },
    "E": {
      "name": "Water Level",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "graphs",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Divide and Summarize",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "divide and conquer",
        "implementation",
        "sortings"
      ]
    },
    "C": {
      "name": "Random Events",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "dp",
        "math",
        "probabilities"
      ]
    },
    "B": {
      "name": "Find the Spruce",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "dp",
        "implementation"
      ]
    },
    "A": {
      "name": "String Generation",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    }
  },
  "1459": {
    "B": {
      "name": "Move and Turn",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "dp",
        "math"
      ]
    },
    "A": {
      "name": "Red-Blue Shuffle",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "math",
        "probabilities"
      ]
    }
  },
  "1458": {
    "F": {
      "name": "Range Diameter Sum",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3500,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "E": {
      "name": "Nim Shortcuts",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3100,
      "tags": [
        "data structures",
        "games"
      ]
    },
    "D": {
      "name": "Flip and Reverse",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3100,
      "tags": [
        "data structures",
        "graphs",
        "greedy"
      ]
    },
    "C": {
      "name": "Latin Square",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2700,
      "tags": [
        "math",
        "matrices"
      ]
    },
    "B": {
      "name": "Glass Half Spilled",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "dp"
      ]
    },
    "A": {
      "name": "Row GCD",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "math",
        "number theory"
      ]
    }
  },
  "1456": {
    "E": {
      "name": "XOR-ranges",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3500,
      "tags": [
        "dp",
        "greedy"
      ]
    }
  },
  "1455": {
    "G": {
      "name": "Forbidden Value",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "F": {
      "name": "String and Operations",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "E": {
      "name": "Four Points",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "brute force",
        "constructive algorithms",
        "flows",
        "geometry",
        "greedy",
        "implementation",
        "math",
        "ternary search"
      ]
    },
    "D": {
      "name": "Sequence and Swaps",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Ping-pong",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "games",
        "math"
      ]
    },
    "B": {
      "name": "Jumps",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Strange Functions",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math",
        "number theory"
      ]
    }
  },
  "1454": {
    "F": {
      "name": "Array Partition",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "two pointers"
      ]
    },
    "E": {
      "name": "Number of Simple Paths",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "D": {
      "name": "Number into Sequence",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Sequence Transformation",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Unique Bid Auction",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Special Permutation",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "probabilities"
      ]
    }
  },
  "1453": {
    "F": {
      "name": "Even Harder",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 2700,
      "tags": [
        "dp"
      ]
    },
    "E": {
      "name": "Dog Snacks",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "D": {
      "name": "Checkpoints",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math",
        "probabilities"
      ]
    },
    "C": {
      "name": "Triangles",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Suffix Operations",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "Cancel the Trains",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1452": {
    "G": {
      "name": "Game On Tree",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "data structures",
        "dfs and similar",
        "greedy",
        "trees"
      ]
    },
    "F": {
      "name": "Divide Powers",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "E": {
      "name": "Two Editorials",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "D": {
      "name": "Radio Towers",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "C": {
      "name": "Two Brackets",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Toy Blocks",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "binary search",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Robot Program",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1451": {
    "F": {
      "name": "Nullify The Matrix",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "games"
      ]
    },
    "E2": {
      "name": "Bitwise Queries (Hard Version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2300,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "interactive",
        "math"
      ]
    },
    "E1": {
      "name": "Bitwise Queries (Easy Version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "interactive",
        "math"
      ]
    },
    "D": {
      "name": "Circle Game",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1700,
      "tags": [
        "games",
        "geometry",
        "math"
      ]
    },
    "C": {
      "name": "String Equality",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "dp",
        "greedy",
        "hashing",
        "implementation",
        "strings"
      ]
    },
    "B": {
      "name": "Non-Substring Subsequence",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 900,
      "tags": [
        "dp",
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Subtract or Divide",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1450": {
    "H2": {
      "name": "Multithreading (Hard Version)",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 3300,
      "tags": [
        "combinatorics",
        "implementation",
        "math"
      ]
    },
    "H1": {
      "name": "Multithreading (Easy Version)",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2900,
      "tags": [
        "combinatorics",
        "fft",
        "math"
      ]
    },
    "G": {
      "name": "Communism",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 3500,
      "tags": [
        "bitmasks",
        "dp",
        "trees"
      ]
    },
    "F": {
      "name": "The Struggling Contestant",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "E": {
      "name": "Capitalism",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Rating Compression",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "implementation",
        "two pointers"
      ]
    },
    "C2": {
      "name": "Errich-Tac-Toe (Hard Version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "C1": {
      "name": "Errich-Tac-Toe (Easy Version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "B": {
      "name": "Balls of Steel",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "geometry",
        "greedy"
      ]
    },
    "A": {
      "name": "Avoid Trygub",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "sortings"
      ]
    }
  },
  "1447": {
    "B": {
      "name": "Numbers Box",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Add Candies",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1446": {
    "F": {
      "name": "Line Distance",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3200,
      "tags": [
        "binary search",
        "data structures",
        "geometry"
      ]
    },
    "E": {
      "name": "Long Recovery",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3500,
      "tags": [
        "constructive algorithms",
        "dfs and similar"
      ]
    },
    "D2": {
      "name": "Frequency Problem (Hard Version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "greedy",
        "two pointers"
      ]
    },
    "D1": {
      "name": "Frequency Problem (Easy Version)",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "C": {
      "name": "Xor Tree",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "bitmasks",
        "data structures",
        "divide and conquer",
        "dp",
        "trees"
      ]
    },
    "B": {
      "name": "Catching Cheaters",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "dp",
        "strings"
      ]
    },
    "A": {
      "name": "Knapsack",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "greedy",
        "sortings"
      ]
    }
  },
  "1445": {
    "B": {
      "name": "Elimination",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Array Rearrangment",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "sortings"
      ]
    }
  },
  "1444": {
    "E": {
      "name": "Finding the Vertex",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3500,
      "tags": [
        "brute force",
        "dfs and similar",
        "dp",
        "interactive",
        "trees"
      ]
    },
    "D": {
      "name": "Rectangular Polyline",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "constructive algorithms",
        "dp",
        "geometry"
      ]
    },
    "C": {
      "name": "Team-Building",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "B": {
      "name": "Divide and Sum",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "combinatorics",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Division",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    }
  },
  "1443": {
    "E": {
      "name": "Long Permutation",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "brute force",
        "math",
        "two pointers"
      ]
    },
    "C": {
      "name": "The Delivery Dilemma",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "binary search",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Saving the City",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "dp",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Kids Seating",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1442": {
    "F": {
      "name": "Differentiating Games",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3400,
      "tags": [
        "games",
        "interactive"
      ]
    },
    "E": {
      "name": "Black, White and Grey Tree",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 3000,
      "tags": [
        "binary search",
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "D": {
      "name": "Sum",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "divide and conquer",
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Graph Transpositions",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "dfs and similar",
        "graphs",
        "greedy",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Identify the Operations",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "combinatorics",
        "data structures",
        "dsu",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Extreme Subtraction",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy"
      ]
    }
  },
  "1440": {
    "B": {
      "name": "Sum of Medians",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Buy the String",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1439": {
    "E": {
      "name": "Cheat and Win",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3500,
      "tags": [
        "bitmasks",
        "data structures",
        "games",
        "trees"
      ]
    },
    "D": {
      "name": "INOI Final Contests",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "combinatorics",
        "dp",
        "fft"
      ]
    },
    "C": {
      "name": "Greedy Shopping",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2600,
      "tags": [
        "binary search",
        "data structures",
        "divide and conquer",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Graph Subset Problem",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2600,
      "tags": [
        "constructive algorithms",
        "data structures",
        "graphs"
      ]
    },
    "A2": {
      "name": "Binary Table (Hard Version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "graphs",
        "greedy",
        "implementation"
      ]
    },
    "A1": {
      "name": "Binary Table (Easy Version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "1438": {
    "F": {
      "name": "Olha and Igor",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "interactive",
        "probabilities",
        "trees"
      ]
    },
    "E": {
      "name": "Yurii Can Do Everything",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "divide and conquer",
        "two pointers"
      ]
    },
    "D": {
      "name": "Powerful Ksenia",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2200,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "math"
      ]
    },
    "C": {
      "name": "Engineer Artem",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2000,
      "tags": [
        "2-sat",
        "chinese remainder theorem",
        "constructive algorithms",
        "fft",
        "flows"
      ]
    },
    "B": {
      "name": "Valerii Against Everyone",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Specific Tastes of Andre ",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "1437": {
    "G": {
      "name": "Death DBMS",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "data structures",
        "string suffix structures",
        "strings",
        "trees"
      ]
    },
    "F": {
      "name": "Emotional Fishermen",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "two pointers"
      ]
    },
    "E": {
      "name": "Make It Increasing",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "dp",
        "implementation"
      ]
    },
    "D": {
      "name": "Minimal Height Tree",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "graphs",
        "greedy",
        "shortest paths",
        "trees"
      ]
    },
    "C": {
      "name": "Chef Monocarp",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "dp",
        "flows",
        "graph matchings",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "B": {
      "name": "Reverse Binary Strings",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "Marketing Scheme",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math"
      ]
    }
  },
  "1436": {
    "F": {
      "name": "Sum Over Subsets",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "combinatorics",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Complicated Computations",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "data structures",
        "two pointers"
      ]
    },
    "D": {
      "name": "Bandit in a City",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "C": {
      "name": "Binary Search",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "combinatorics"
      ]
    },
    "B": {
      "name": "Prime Square",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Reorder",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1434": {
    "E": {
      "name": "A Convex Game",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3500,
      "tags": [
        "dsu",
        "games"
      ]
    }
  },
  "1433": {
    "G": {
      "name": "Reducing Delivery Cost",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "brute force",
        "graphs",
        "shortest paths"
      ]
    },
    "F": {
      "name": "Zero Remainder Sum ",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dp"
      ]
    },
    "E": {
      "name": "Two Round Dances",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "D": {
      "name": "Districts Connection",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "dfs and similar"
      ]
    },
    "C": {
      "name": "Dominant Piranha",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "B": {
      "name": "Yet Another Bookshelf",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Boring Apartments",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1431": {
    "J": {
      "name": "Zero-XOR Array",
      "type": "PROGRAMMING",
      "rating": 3400,
      "tags": [
        "*special",
        "dp"
      ]
    },
    "I": {
      "name": "Cyclic Shifts",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "*special",
        "strings"
      ]
    },
    "H": {
      "name": "Rogue-like Game",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "*special",
        "brute force",
        "greedy",
        "two pointers"
      ]
    },
    "G": {
      "name": "Number Deletion Game",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "*special",
        "dp",
        "games",
        "greedy"
      ]
    },
    "F": {
      "name": "Neural Network Problem",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "*special",
        "binary search",
        "greedy"
      ]
    },
    "E": {
      "name": "Chess Match",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "*special"
      ]
    },
    "D": {
      "name": "Used Markers",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "*special",
        "greedy"
      ]
    },
    "C": {
      "name": "Black Friday",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "B": {
      "name": "Polycarp and the Language of Gods",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "*special",
        "implementation",
        "two pointers"
      ]
    },
    "A": {
      "name": "Selling Hamburgers",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "*special"
      ]
    }
  },
  "1430": {
    "G": {
      "name": "Yet Another DAG Problem",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "bitmasks",
        "dfs and similar",
        "dp",
        "flows",
        "graphs",
        "math"
      ]
    },
    "F": {
      "name": "Realistic Gameplay",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "E": {
      "name": "String Reversal",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "data structures",
        "greedy",
        "strings"
      ]
    },
    "D": {
      "name": "String Deletion",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "two pointers"
      ]
    },
    "C": {
      "name": "Numbers on Whiteboard",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Barrels",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Number of Apartments",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "brute force",
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1428": {
    "H": {
      "name": "Rotary Laser Lock",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3500,
      "tags": [
        "binary search",
        "interactive"
      ]
    },
    "G2": {
      "name": "Lucky Numbers (Hard Version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 3000,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "G1": {
      "name": "Lucky Numbers (Easy Version)",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2900,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "F": {
      "name": "Fruit Sequences",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "data structures",
        "divide and conquer",
        "dp",
        "two pointers"
      ]
    },
    "E": {
      "name": "Carrots for Rabbits",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "D": {
      "name": "Bouncing Boomerangs",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "ABBB",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "data structures",
        "greedy",
        "strings"
      ]
    },
    "B": {
      "name": "Belted Rooms",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "graphs",
        "implementation"
      ]
    },
    "A": {
      "name": "Box is Pull",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1427": {
    "H": {
      "name": "Prison Break",
      "type": "PROGRAMMING",
      "points": 4500.0,
      "rating": 3500,
      "tags": [
        "binary search",
        "games",
        "geometry",
        "ternary search"
      ]
    },
    "G": {
      "name": "One Billion Shades of Grey",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3300,
      "tags": [
        "flows",
        "graphs"
      ]
    },
    "F": {
      "name": "Boring Card Game",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3200,
      "tags": [
        "data structures",
        "greedy",
        "trees"
      ]
    },
    "E": {
      "name": "Xum",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "math",
        "matrices",
        "number theory"
      ]
    },
    "D": {
      "name": "Unshuffling a Deck",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "C": {
      "name": "The Hard Work of Paparazzi",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Chess Cheater",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Avoiding Zero",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "math",
        "sortings"
      ]
    }
  },
  "1426": {
    "F": {
      "name": "Number of Subsequences",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "combinatorics",
        "dp",
        "strings"
      ]
    },
    "E": {
      "name": "Rock, Paper, Scissors",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "flows",
        "greedy",
        "math"
      ]
    },
    "D": {
      "name": "Non-zero Segments",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Increase and Copy",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "binary search",
        "constructive algorithms",
        "math"
      ]
    },
    "B": {
      "name": "Symmetric Matrix",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Floor Number",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1425": {
    "I": {
      "name": "Impressive Harvesting of The Orchard",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "data structures"
      ]
    },
    "H": {
      "name": "Huge Boxes of Animal Toys",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "constructive algorithms"
      ]
    },
    "F": {
      "name": "Flamingoes of Mystery",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "interactive"
      ]
    },
    "E": {
      "name": "Excitation of Atoms",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "D": {
      "name": "Danger of Mad Snakes",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "C": {
      "name": "Captain of Knights",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": [
        "math"
      ]
    },
    "B": {
      "name": "Blue and Red of Our Faculty!",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "divide and conquer",
        "dp"
      ]
    },
    "A": {
      "name": "Arena of Greed",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "games",
        "greedy"
      ]
    }
  },
  "1424": {
    "M": {
      "name": "Ancient Language",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "graphs",
        "sortings"
      ]
    },
    "G": {
      "name": "Years",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "data structures",
        "sortings"
      ]
    }
  },
  "1423": {
    "N": {
      "name": "BubbleSquare Tokens",
      "type": "PROGRAMMING",
      "rating": 3500,
      "tags": []
    },
    "M": {
      "name": "Milutin's Plums",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "interactive"
      ]
    },
    "L": {
      "name": "Light switches",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "meet-in-the-middle"
      ]
    },
    "K": {
      "name": "Lonely Numbers",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "binary search",
        "math",
        "number theory",
        "two pointers"
      ]
    },
    "J": {
      "name": "Bubble Cup hypothesis",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "dp",
        "math"
      ]
    },
    "I": {
      "name": "Lookup Tables",
      "type": "PROGRAMMING",
      "rating": 3000,
      "tags": [
        "bitmasks"
      ]
    },
    "H": {
      "name": "Virus",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "data structures",
        "divide and conquer",
        "dsu",
        "graphs"
      ]
    },
    "G": {
      "name": "Growing flowers",
      "type": "PROGRAMMING",
      "rating": 3500,
      "tags": [
        "data structures"
      ]
    },
    "F": {
      "name": "Coins",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "math"
      ]
    },
    "E": {
      "name": "5G Antenna Towers",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "geometry"
      ]
    },
    "D": {
      "name": "Does anyone else hate the wind?",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": []
    },
    "C": {
      "name": "Du\u0161an's Railway",
      "type": "PROGRAMMING",
      "rating": 3500,
      "tags": [
        "divide and conquer",
        "graphs",
        "trees"
      ]
    },
    "B": {
      "name": "Valuable Paper",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "flows",
        "graph matchings",
        "graphs"
      ]
    },
    "A": {
      "name": "Wakanda Forever",
      "type": "PROGRAMMING",
      "rating": 3500,
      "tags": []
    }
  },
  "1422": {
    "F": {
      "name": "Boring Queries",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Minlexes",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "dp",
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "D": {
      "name": "Returning Home",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "graphs",
        "shortest paths",
        "sortings"
      ]
    },
    "C": {
      "name": "Bargain",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "B": {
      "name": "Nice Matrix",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Fence",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "geometry",
        "math"
      ]
    }
  },
  "1421": {
    "E": {
      "name": "Swedish Heroes",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "brute force",
        "dp",
        "implementation"
      ]
    },
    "D": {
      "name": "Hexagons",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "implementation",
        "math",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Palindromifier",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "strings"
      ]
    },
    "B": {
      "name": "Putting Bricks in the Wall",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "XORwice",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "bitmasks",
        "greedy",
        "math"
      ]
    }
  },
  "1420": {
    "E": {
      "name": "Battle Lemmings",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2500,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Rescue Nibel!",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "combinatorics",
        "data structures",
        "sortings"
      ]
    },
    "C2": {
      "name": "Pok\u00e9mon Army (hard version)",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "divide and conquer",
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "C1": {
      "name": "Pok\u00e9mon Army (easy version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy"
      ]
    },
    "B": {
      "name": "Rock and Lever",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "bitmasks",
        "math"
      ]
    },
    "A": {
      "name": "Cubes Sorting",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "math",
        "sortings"
      ]
    }
  },
  "1419": {
    "F": {
      "name": "Rain of Fire",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "implementation"
      ]
    },
    "E": {
      "name": "Decryption",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "implementation",
        "math",
        "number theory"
      ]
    },
    "D2": {
      "name": "Sage's Birthday (hard version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "brute force",
        "constructive algorithms",
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "D1": {
      "name": "Sage's Birthday (easy version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Killjoy",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Stairs",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Digit Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "games",
        "greedy",
        "implementation"
      ]
    }
  },
  "1418": {
    "G": {
      "name": "Three Occurrences",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "data structures",
        "divide and conquer",
        "hashing",
        "two pointers"
      ]
    },
    "F": {
      "name": "Equal Product",
      "type": "PROGRAMMING",
      "rating": 3000,
      "tags": [
        "data structures",
        "math",
        "number theory",
        "two pointers"
      ]
    },
    "E": {
      "name": "Expected Damage",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "binary search",
        "combinatorics",
        "probabilities"
      ]
    },
    "D": {
      "name": "Trash Problem",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "C": {
      "name": "Mortal Kombat Tower",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "dp",
        "graphs",
        "greedy",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Negative Prefixes",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Buying Torches",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "math"
      ]
    }
  },
  "1417": {
    "B": {
      "name": "Two Arrays",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Copy-paste",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1416": {
    "F": {
      "name": "Showing Off",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3300,
      "tags": [
        "flows",
        "graph matchings",
        "greedy",
        "implementation"
      ]
    },
    "E": {
      "name": "Split",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3200,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Graph and Queries",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "dsu",
        "graphs",
        "implementation",
        "trees"
      ]
    },
    "C": {
      "name": "XOR Inverse",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2000,
      "tags": [
        "bitmasks",
        "data structures",
        "divide and conquer",
        "dp",
        "greedy",
        "math",
        "sortings",
        "strings",
        "trees"
      ]
    },
    "B": {
      "name": "Make Them Equal",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "k-Amazing Numbers",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "data structures",
        "implementation",
        "two pointers"
      ]
    }
  },
  "1415": {
    "F": {
      "name": "Cakes for Clones",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2900,
      "tags": [
        "dp"
      ]
    },
    "E": {
      "name": "New Game Plus!",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "D": {
      "name": "XOR-gun",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms"
      ]
    },
    "C": {
      "name": "Bouncing Ball",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "dp",
        "implementation"
      ]
    },
    "B": {
      "name": "Repainting Street",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "brute force",
        "greedy"
      ]
    },
    "A": {
      "name": "Prison Break",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "math"
      ]
    }
  },
  "1413": {
    "F": {
      "name": "Roads and Ramen",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "E": {
      "name": "Solo mid Oracle",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2100,
      "tags": [
        "greedy",
        "math",
        "ternary search"
      ]
    },
    "D": {
      "name": "Shurikens",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Perform Easily",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "brute force",
        "dp",
        "implementation",
        "sortings",
        "two pointers"
      ]
    },
    "B": {
      "name": "A New Technique",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Finding Sasuke",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1411": {
    "G": {
      "name": "No Game No Life",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 2700,
      "tags": [
        "bitmasks",
        "games",
        "math",
        "matrices"
      ]
    },
    "F": {
      "name": "The Thorny Path",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3000,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "E": {
      "name": "Poman Numbers",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "bitmasks",
        "greedy",
        "math",
        "strings"
      ]
    },
    "D": {
      "name": "Grime Zoo",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "C": {
      "name": "Peaceful Rooks",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "B": {
      "name": "Fair Numbers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "number theory"
      ]
    },
    "A": {
      "name": "In-game Chat",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1409": {
    "F": {
      "name": "Subsequences of Length Two",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dp",
        "strings"
      ]
    },
    "E": {
      "name": "Two Platforms",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "binary search",
        "dp",
        "sortings",
        "two pointers"
      ]
    },
    "D": {
      "name": "Decrease the Sum of Digits",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Yet Another Array Restoration",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Minimum Product",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "brute force",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Yet Another Two Integers Problem",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1408": {
    "I": {
      "name": "Bitwise Magic",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 3200,
      "tags": [
        "dp",
        "math"
      ]
    },
    "H": {
      "name": "Rainbow Triples",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 3300,
      "tags": [
        "binary search",
        "data structures",
        "flows",
        "greedy"
      ]
    },
    "G": {
      "name": "Clusterization Counting",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "combinatorics",
        "dp",
        "dsu",
        "fft",
        "graphs",
        "trees"
      ]
    },
    "F": {
      "name": "Two Different",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "divide and conquer"
      ]
    },
    "E": {
      "name": "Avoid Rainbow Cycles",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "dsu",
        "graphs",
        "greedy",
        "sortings",
        "trees"
      ]
    },
    "D": {
      "name": "Searchlights",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dp",
        "implementation",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Discrete Acceleration",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "dp",
        "implementation",
        "math",
        "two pointers"
      ]
    },
    "B": {
      "name": "Arrays Sum",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Circle Coloring",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms"
      ]
    }
  },
  "1407": {
    "E": {
      "name": "Egor in the Republic of Dagestan",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "graphs",
        "greedy",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Discrete Centrifugal Jumps",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "dp",
        "graphs"
      ]
    },
    "C": {
      "name": "Chocolate Bunny",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "interactive",
        "math",
        "two pointers"
      ]
    },
    "B": {
      "name": "Big Vova",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Ahahahahahahahaha",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1406": {
    "E": {
      "name": "Deleting Numbers",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2600,
      "tags": [
        "interactive",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Three Sequences",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Link Cut Centroids",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "B": {
      "name": "Maximum Product",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Subset Mex",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "1405": {
    "B": {
      "name": "Array Cancellation",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "Permutation Forgery",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms"
      ]
    }
  },
  "1404": {
    "E": {
      "name": "Bricks",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "flows",
        "graph matchings",
        "graphs"
      ]
    },
    "D": {
      "name": "Game of Pairs",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2800,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "interactive",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Fixed Point Removal",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "greedy",
        "two pointers"
      ]
    },
    "B": {
      "name": "Tree Tag",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "dfs and similar",
        "dp",
        "games",
        "trees"
      ]
    },
    "A": {
      "name": "Balanced Bitstring",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1403": {
    "C": {
      "name": "Chess Rush",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": [
        "*special",
        "combinatorics",
        "dp",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Spring cleaning",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "*special",
        "data structures",
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "A": {
      "name": "The Potion of Great Power",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "*special",
        "2-sat",
        "binary search",
        "data structures",
        "graphs",
        "interactive",
        "sortings",
        "two pointers"
      ]
    }
  },
  "1402": {
    "C": {
      "name": "Star Trek",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "*special",
        "combinatorics",
        "dfs and similar",
        "dp",
        "games",
        "graphs",
        "matrices",
        "trees"
      ]
    },
    "B": {
      "name": "Roads",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "*special",
        "geometry",
        "sortings"
      ]
    },
    "A": {
      "name": "Fancy Fence",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special",
        "data structures",
        "dsu",
        "implementation",
        "math",
        "sortings"
      ]
    }
  },
  "1401": {
    "F": {
      "name": "Reverse and Swap",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "bitmasks",
        "data structures"
      ]
    },
    "E": {
      "name": "Divide Square",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "geometry",
        "implementation",
        "sortings"
      ]
    },
    "D": {
      "name": "Maximum Distributed Tree",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1800,
      "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "implementation",
        "math",
        "number theory",
        "sortings",
        "trees"
      ]
    },
    "C": {
      "name": "Mere Array",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory",
        "sortings"
      ]
    },
    "B": {
      "name": "Ternary Sequence",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Distance and Axis",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1400": {
    "G": {
      "name": "Mercenaries",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "bitmasks",
        "brute force",
        "combinatorics",
        "dp",
        "dsu",
        "math",
        "two pointers"
      ]
    },
    "F": {
      "name": "x-prime Substrings",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "brute force",
        "dfs and similar",
        "dp",
        "string suffix structures",
        "strings"
      ]
    },
    "E": {
      "name": "Clear the Multiset",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "data structures",
        "divide and conquer",
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Zigzags",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "brute force",
        "combinatorics",
        "data structures",
        "math",
        "two pointers"
      ]
    },
    "C": {
      "name": "Binary String Reconstruction",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "2-sat",
        "brute force",
        "constructive algorithms",
        "greedy"
      ]
    },
    "B": {
      "name": "RPG Protagonist",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "brute force",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "String Similarity",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "strings"
      ]
    }
  },
  "1399": {
    "F": {
      "name": "Yet Another Segments Subset",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "data structures",
        "dp",
        "graphs",
        "sortings"
      ]
    },
    "E2": {
      "name": "Weights Division (hard version)",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "binary search",
        "dfs and similar",
        "greedy",
        "sortings",
        "trees",
        "two pointers"
      ]
    },
    "E1": {
      "name": "Weights Division (easy version)",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "data structures",
        "dfs and similar",
        "greedy",
        "trees"
      ]
    },
    "D": {
      "name": "Binary String To Subsequences",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Boats Competition",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "brute force",
        "greedy",
        "two pointers"
      ]
    },
    "B": {
      "name": "Gifts Fixing",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Remove Smallest",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "sortings"
      ]
    }
  },
  "1398": {
    "G": {
      "name": "Running Competition",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "bitmasks",
        "fft",
        "math",
        "number theory"
      ]
    },
    "F": {
      "name": "Controversial Rounds",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "two pointers"
      ]
    },
    "E": {
      "name": "Two Types of Spells",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "implementation",
        "math",
        "sortings"
      ]
    },
    "D": {
      "name": "Colored Rectangles",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Good Subarrays",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "data structures",
        "dp",
        "math"
      ]
    },
    "B": {
      "name": "Substring Removal Game",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "games",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Bad Triangle",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "geometry",
        "math"
      ]
    }
  },
  "1397": {
    "B": {
      "name": "Power Sequence",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "math",
        "number theory",
        "sortings"
      ]
    },
    "A": {
      "name": "Juggling Letters",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "strings"
      ]
    }
  },
  "1396": {
    "E": {
      "name": "Distance Matching",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3200,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "trees"
      ]
    },
    "D": {
      "name": "Rainbow Rectangles",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3300,
      "tags": [
        "data structures",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Monster Invaders",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2300,
      "tags": [
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Stoned Game",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "games",
        "greedy"
      ]
    },
    "A": {
      "name": "Multiples of Length",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "greedy",
        "number theory"
      ]
    }
  },
  "1395": {
    "C": {
      "name": "Boboniu and Bit Operations",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "greedy"
      ]
    },
    "B": {
      "name": "Boboniu Plays Chess",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "Boboniu Likes to Color Balls",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "math"
      ]
    }
  },
  "1394": {
    "E": {
      "name": "Boboniu and Banknote Collection",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3500,
      "tags": [
        "strings"
      ]
    },
    "D": {
      "name": "Boboniu and Jianghu",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2800,
      "tags": [
        "dp",
        "greedy",
        "sortings",
        "trees"
      ]
    },
    "C": {
      "name": "Boboniu and String",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2600,
      "tags": [
        "binary search",
        "geometry",
        "ternary search"
      ]
    },
    "B": {
      "name": "Boboniu Walks on Graph",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "dfs and similar",
        "graphs",
        "hashing"
      ]
    },
    "A": {
      "name": "Boboniu Chats with Du",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "dp",
        "greedy",
        "sortings",
        "two pointers"
      ]
    }
  },
  "1393": {
    "E2": {
      "name": "Twilight and Ancient Scroll (harder version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 3200,
      "tags": [
        "dp",
        "hashing",
        "implementation",
        "string suffix structures",
        "strings",
        "two pointers"
      ]
    },
    "E1": {
      "name": "Twilight and Ancient Scroll (easier version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2800,
      "tags": [
        "dp",
        "hashing",
        "implementation",
        "string suffix structures",
        "strings"
      ]
    },
    "D": {
      "name": "Rarity and New Dress",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2100,
      "tags": [
        "dfs and similar",
        "dp",
        "implementation",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Pinkie Pie Eats Patty-cakes",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "B": {
      "name": "Applejack and Storages",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Rainbow Dash, Fluttershy and Chess Coloring",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1392": {
    "I": {
      "name": "Kevin and Grid",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3300,
      "tags": [
        "fft",
        "graphs",
        "math"
      ]
    },
    "H": {
      "name": "ZS Shuffles Cards",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3000,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "probabilities"
      ]
    },
    "G": {
      "name": "Omkar and Pies",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2900,
      "tags": [
        "bitmasks",
        "dfs and similar",
        "dp",
        "math",
        "shortest paths"
      ]
    },
    "F": {
      "name": "Omkar and Landslide",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "greedy",
        "math"
      ]
    },
    "E": {
      "name": "Omkar and Duck",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "interactive",
        "math"
      ]
    },
    "D": {
      "name": "Omkar and Bed Wars",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Omkar and Waterslide",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Omkar and Infinity Clock",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Omkar and Password",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1391": {
    "E": {
      "name": "Pairs of Pairs",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2600,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "D": {
      "name": "505",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Cyclic Permutations ",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "combinatorics",
        "dp",
        "graphs",
        "math"
      ]
    },
    "B": {
      "name": "Fix You",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Suborrays",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1389": {
    "G": {
      "name": "Directing Edges",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
      ]
    },
    "F": {
      "name": "Bicolored Segments",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "data structures",
        "dp",
        "graph matchings",
        "sortings"
      ]
    },
    "E": {
      "name": "Calendar Ambiguity",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Segment Intersections",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "brute force",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Good String",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "two pointers"
      ]
    },
    "B": {
      "name": "Array Walk",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "brute force",
        "dp",
        "greedy"
      ]
    },
    "A": {
      "name": "LCM Problem",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "number theory"
      ]
    }
  },
  "1388": {
    "E": {
      "name": "Uncle Bogdan and Projections",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "geometry",
        "sortings"
      ]
    },
    "D": {
      "name": "Captain Flint and Treasure",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "greedy",
        "implementation",
        "trees"
      ]
    },
    "C": {
      "name": "Uncle Bogdan and Country Happiness",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "dfs and similar",
        "greedy",
        "math",
        "trees"
      ]
    },
    "B": {
      "name": "Captain Flint and a Long Voyage",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Captain Flint and Crew Recruitment",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "brute force",
        "greedy",
        "math",
        "number theory"
      ]
    }
  },
  "1387": {
    "C": {
      "name": "Viruses",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "*special",
        "dp",
        "shortest paths",
        "string suffix structures"
      ]
    },
    "B2": {
      "name": "Village (Maximum)",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "*special",
        "dfs and similar",
        "trees"
      ]
    },
    "B1": {
      "name": "Village (Minimum)",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "*special",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "A": {
      "name": "Graph",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "*special",
        "binary search",
        "dfs and similar",
        "dp",
        "math",
        "ternary search"
      ]
    }
  },
  "1386": {
    "C": {
      "name": "Joker",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "*special",
        "bitmasks",
        "data structures",
        "divide and conquer",
        "dsu"
      ]
    },
    "B": {
      "name": "Mixture",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "*special",
        "data structures",
        "geometry",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Colors",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "*special",
        "binary search",
        "constructive algorithms",
        "interactive"
      ]
    }
  },
  "1385": {
    "G": {
      "name": "Columns Swaps",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "2-sat",
        "dfs and similar",
        "dsu",
        "graphs",
        "implementation"
      ]
    },
    "F": {
      "name": "Removing Leaves",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "data structures",
        "greedy",
        "implementation",
        "trees"
      ]
    },
    "E": {
      "name": "Directing Edges",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs"
      ]
    },
    "D": {
      "name": "a-Good String",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "bitmasks",
        "brute force",
        "divide and conquer",
        "dp",
        "implementation"
      ]
    },
    "C": {
      "name": "Make It Good",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Restore the Permutation by Merger",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Three Pairwise Maximums",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1384": {
    "B2": {
      "name": "Koa and the Beach (Hard Version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "B1": {
      "name": "Koa and the Beach (Easy Version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "dp",
        "greedy"
      ]
    },
    "A": {
      "name": "Common Prefixes",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy",
        "strings"
      ]
    }
  },
  "1383": {
    "F": {
      "name": "Special Edges",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3200,
      "tags": [
        "flows",
        "graphs"
      ]
    },
    "E": {
      "name": "Strange Operation",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2800,
      "tags": [
        "combinatorics",
        "data structures",
        "dp"
      ]
    },
    "D": {
      "name": "Rearrange",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "graphs",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "String Transformation 2",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 3100,
      "tags": [
        "bitmasks",
        "dp",
        "graphs",
        "trees"
      ]
    },
    "B": {
      "name": "GameGame",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "dp",
        "games",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "String Transformation 1",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "dsu",
        "graphs",
        "greedy",
        "sortings",
        "strings",
        "trees",
        "two pointers"
      ]
    }
  },
  "1382": {
    "B": {
      "name": "Sequential Nim",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1100,
      "tags": [
        "dp",
        "games"
      ]
    },
    "A": {
      "name": "Common Subsequence",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force"
      ]
    }
  },
  "1381": {
    "E": {
      "name": "Origami",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3300,
      "tags": [
        "geometry",
        "math",
        "sortings"
      ]
    },
    "D": {
      "name": "The Majestic Brown Tree Snake",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "trees",
        "two pointers"
      ]
    },
    "C": {
      "name": "Mastermind",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "graph matchings",
        "greedy",
        "implementation",
        "sortings",
        "two pointers"
      ]
    },
    "B": {
      "name": "Unmerge",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "dp"
      ]
    },
    "A2": {
      "name": "Prefix Flip (Hard Version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "data structures",
        "implementation",
        "strings",
        "two pointers"
      ]
    },
    "A1": {
      "name": "Prefix Flip (Easy Version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "data structures",
        "strings"
      ]
    }
  },
  "1380": {
    "G": {
      "name": "Circular Dungeon",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "greedy",
        "math",
        "probabilities"
      ]
    },
    "F": {
      "name": "Strange Addition",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "data structures",
        "dp",
        "matrices"
      ]
    },
    "E": {
      "name": "Merging Towers",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "data structures",
        "dsu",
        "implementation",
        "trees"
      ]
    },
    "D": {
      "name": "Berserk And Fireball",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math",
        "two pointers"
      ]
    },
    "C": {
      "name": "Create The Teams",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Universal Solution",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Three Indices",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "brute force",
        "data structures"
      ]
    }
  },
  "1379": {
    "F2": {
      "name": "Chess Strikes Back (hard version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "divide and conquer"
      ]
    },
    "F1": {
      "name": "Chess Strikes Back (easy version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2700,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "E": {
      "name": "Inverse Genealogy",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "constructive algorithms",
        "divide and conquer",
        "dp",
        "math",
        "trees"
      ]
    },
    "D": {
      "name": "New Passenger Trams",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Choosing flowers",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dfs and similar",
        "dp",
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "B": {
      "name": "Dubious Cyrpto",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "brute force",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Acacius and String",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    }
  },
  "1375": {
    "I": {
      "name": "Cubic Lattice",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3500,
      "tags": [
        "geometry",
        "math",
        "matrices",
        "number theory"
      ]
    },
    "H": {
      "name": "Set Merging",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3300,
      "tags": [
        "constructive algorithms",
        "divide and conquer"
      ]
    },
    "G": {
      "name": "Tree Modification",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "graph matchings",
        "graphs",
        "trees"
      ]
    },
    "F": {
      "name": "Integer Game",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "constructive algorithms",
        "games",
        "interactive",
        "math"
      ]
    },
    "E": {
      "name": "Inversion SwapSort",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "greedy",
        "sortings"
      ]
    },
    "D": {
      "name": "Replace by MEX",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "constructive algorithms",
        "sortings"
      ]
    },
    "C": {
      "name": "Element Extermination",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy"
      ]
    },
    "B": {
      "name": "Neighbor Grid",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "Sign Flipping",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1374": {
    "F": {
      "name": "Cyclic Shifts Sorting",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation",
        "sortings"
      ]
    },
    "E2": {
      "name": "Reading Books (hard version)",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "data structures",
        "greedy",
        "implementation",
        "sortings",
        "ternary search",
        "two pointers"
      ]
    },
    "E1": {
      "name": "Reading Books (easy version)",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "D": {
      "name": "Zero Remainder Array",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "math",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Move Brackets",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "greedy",
        "strings"
      ]
    },
    "B": {
      "name": "Multiply by 2, divide by 6",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Required Remainder",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1373": {
    "G": {
      "name": "Pawns",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "data structures",
        "divide and conquer",
        "greedy"
      ]
    },
    "F": {
      "name": "Network Coverage",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "greedy"
      ]
    },
    "E": {
      "name": "Sum of Digits",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Maximum Sum on Even Positions",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "divide and conquer",
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Pluses and Minuses",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "math"
      ]
    },
    "B": {
      "name": "01 Game",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "games"
      ]
    },
    "A": {
      "name": "Donut Shops",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "1372": {
    "F": {
      "name": "Omkar and Modes",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "binary search",
        "divide and conquer",
        "interactive"
      ]
    },
    "E": {
      "name": "Omkar and Last Floor",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "dp",
        "greedy",
        "two pointers"
      ]
    },
    "D": {
      "name": "Omkar and Circle",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "dp",
        "games",
        "greedy"
      ]
    },
    "C": {
      "name": "Omkar and Baseball",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "B": {
      "name": "Omkar and Last Class of Math",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Omkar and Completion",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "1371": {
    "F": {
      "name": "Raging Thunder",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "divide and conquer",
        "implementation"
      ]
    },
    "E2": {
      "name": "Asterism (Hard Version)",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "combinatorics",
        "dp",
        "math",
        "number theory",
        "sortings"
      ]
    },
    "E1": {
      "name": "Asterism (Easy Version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "brute force",
        "combinatorics",
        "math",
        "number theory",
        "sortings"
      ]
    },
    "D": {
      "name": "Grid-00100",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "A Cookie for You",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Magical Calendar",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Magical Sticks",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1370": {
    "F2": {
      "name": "The Hidden Pair (Hard Version)",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2700,
      "tags": [
        "binary search",
        "dfs and similar",
        "graphs",
        "interactive",
        "shortest paths",
        "trees"
      ]
    },
    "F1": {
      "name": "The Hidden Pair (Easy Version)",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "dfs and similar",
        "graphs",
        "interactive",
        "shortest paths",
        "trees"
      ]
    },
    "E": {
      "name": "Binary Subsequence Rotation",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "greedy"
      ]
    },
    "D": {
      "name": "Odd-Even Subsequence",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "dp",
        "dsu",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Number Game",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "games",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "GCD Compression",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Maximum GCD",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation",
        "math",
        "number theory"
      ]
    }
  },
  "1369": {
    "F": {
      "name": "BareLee",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "dfs and similar",
        "dp",
        "games"
      ]
    },
    "E": {
      "name": "DeadLee",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "dfs and similar",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "D": {
      "name": "TediousLee",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "dp",
        "graphs",
        "greedy",
        "math",
        "trees"
      ]
    },
    "C": {
      "name": "RationalLee",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "math",
        "sortings",
        "two pointers"
      ]
    },
    "B": {
      "name": "AccurateLee",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "FashionabLee",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "geometry",
        "math"
      ]
    }
  },
  "1368": {
    "H2": {
      "name": "Breadboard Capacity (hard version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 3500,
      "tags": []
    },
    "H1": {
      "name": "Breadboard Capacity (easy version)",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3300,
      "tags": [
        "dp",
        "flows",
        "greedy"
      ]
    },
    "G": {
      "name": "Shifting Dominoes",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3200,
      "tags": [
        "data structures",
        "geometry",
        "graphs",
        "trees"
      ]
    },
    "F": {
      "name": "Lamps on a Circle",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2600,
      "tags": [
        "games",
        "implementation",
        "interactive",
        "math"
      ]
    },
    "E": {
      "name": "Ski Accidents",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "graphs",
        "greedy"
      ]
    },
    "D": {
      "name": "AND, OR and square sum",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1700,
      "tags": [
        "bitmasks",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Even Picture",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Codeforces Subsequences",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math",
        "strings"
      ]
    },
    "A": {
      "name": "C+=",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "1367": {
    "F2": {
      "name": "Flying Sort (Hard Version)",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "F1": {
      "name": "Flying Sort (Easy Version)",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dp",
        "greedy",
        "two pointers"
      ]
    },
    "E": {
      "name": "Necklace Assembly",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "brute force",
        "dfs and similar",
        "dp",
        "graphs",
        "greedy",
        "number theory"
      ]
    },
    "D": {
      "name": "Task On The Board",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "C": {
      "name": "Social Distance",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Even Array",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Short Substrings",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1366": {
    "G": {
      "name": "Construct the String",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "data structures",
        "dp",
        "strings"
      ]
    },
    "F": {
      "name": "Jog Around The Graph",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "binary search",
        "dp",
        "geometry",
        "graphs"
      ]
    },
    "E": {
      "name": "Two Arrays",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "binary search",
        "brute force",
        "combinatorics",
        "constructive algorithms",
        "dp",
        "two pointers"
      ]
    },
    "D": {
      "name": "Two Divisors",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Palindromic Paths",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Shuffle",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "math",
        "two pointers"
      ]
    },
    "A": {
      "name": "Shovels and Swords",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "binary search",
        "greedy",
        "math"
      ]
    }
  },
  "1365": {
    "G": {
      "name": "Secure Password",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "bitmasks",
        "combinatorics",
        "constructive algorithms",
        "interactive",
        "math"
      ]
    },
    "F": {
      "name": "Swaps Again",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "implementation",
        "sortings"
      ]
    },
    "E": {
      "name": "Maximum Subsequence Value",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "constructive algorithms"
      ]
    },
    "D": {
      "name": "Solve The Maze",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "implementation",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Rotation Matching",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Trouble Sort",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "Matrix Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "games",
        "greedy",
        "implementation"
      ]
    }
  },
  "1364": {
    "E": {
      "name": "X-OR",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "divide and conquer",
        "interactive",
        "probabilities"
      ]
    },
    "D": {
      "name": "Ehab's Last Corollary",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy",
        "implementation",
        "trees"
      ]
    },
    "C": {
      "name": "Ehab and Prefix MEXs",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
      ]
    },
    "B": {
      "name": "Most socially-distanced subsequence",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "two pointers"
      ]
    },
    "A": {
      "name": "XXXXX",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "data structures",
        "number theory",
        "two pointers"
      ]
    }
  },
  "1363": {
    "F": {
      "name": "Rotating Substrings",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2600,
      "tags": [
        "dp",
        "strings"
      ]
    },
    "E": {
      "name": "Tree Shuffling",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "D": {
      "name": "Guess The Maximums",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "implementation",
        "interactive",
        "math"
      ]
    },
    "C": {
      "name": "Game On Leaves",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "games",
        "trees"
      ]
    },
    "B": {
      "name": "Subsequence Hate",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Odd Selection",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    }
  },
  "1362": {
    "C": {
      "name": "Johnny and Another Rating Drop",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "bitmasks",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Johnny and His Hobbies",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "bitmasks",
        "brute force"
      ]
    },
    "A": {
      "name": "Johnny and Ancient Computer",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "1361": {
    "F": {
      "name": "Johnny and New Toy",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3300,
      "tags": [
        "data structures",
        "implementation",
        "math"
      ]
    },
    "E": {
      "name": "James and the Chase",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "dfs and similar",
        "graphs",
        "probabilities",
        "trees"
      ]
    },
    "D": {
      "name": "Johnny and James",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "greedy",
        "implementation",
        "math",
        "trees"
      ]
    },
    "C": {
      "name": "Johnny and Megan's Necklace",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "bitmasks",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "B": {
      "name": "Johnny and Grandmaster",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1900,
      "tags": [
        "greedy",
        "implementation",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Johnny and Contribution",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "graphs",
        "greedy",
        "sortings"
      ]
    }
  },
  "1360": {
    "H": {
      "name": "Binary Median",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "constructive algorithms"
      ]
    },
    "G": {
      "name": "A/B Matrix",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "F": {
      "name": "Spy-string",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "dp",
        "hashing",
        "strings"
      ]
    },
    "E": {
      "name": "Polygon",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "dp",
        "graphs",
        "implementation",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Buying Shovels",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Similar Pairs",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "graph matchings",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Honest Coach",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Minimal Square",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1359": {
    "F": {
      "name": "RC Kaboom Show",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "geometry",
        "math"
      ]
    },
    "E": {
      "name": "Modular Stability",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "combinatorics",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Yet Another Yet Another Task",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "data structures",
        "dp",
        "implementation",
        "two pointers"
      ]
    },
    "C": {
      "name": "Mixing Water",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "binary search",
        "math"
      ]
    },
    "B": {
      "name": "New Theatre Square",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation",
        "two pointers"
      ]
    },
    "A": {
      "name": "Berland Poker",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "brute force",
        "greedy",
        "math"
      ]
    }
  },
  "1358": {
    "F": {
      "name": "Tasty Cookie",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "E": {
      "name": "Are You Fired?",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "D": {
      "name": "The Best Vacation",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "brute force",
        "greedy",
        "implementation",
        "two pointers"
      ]
    },
    "C": {
      "name": "Celex Update",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "math"
      ]
    },
    "B": {
      "name": "Maria Breaks the Self-isolation",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Park Lighting",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1357": {
    "E2": {
      "name": "Root of quantum Fourier transform",
      "type": "PROGRAMMING",
      "tags": []
    },
    "E1": {
      "name": "Power of quantum Fourier transform",
      "type": "PROGRAMMING",
      "tags": []
    },
    "D5": {
      "name": "Quantum Classification - Dataset 7",
      "type": "PROGRAMMING",
      "tags": []
    },
    "D4": {
      "name": "Quantum Classification - Dataset 6",
      "type": "PROGRAMMING",
      "tags": []
    },
    "D3": {
      "name": "Quantum Classification - Dataset 5",
      "type": "PROGRAMMING",
      "tags": []
    },
    "D2": {
      "name": "Quantum Classification - Dataset 4",
      "type": "PROGRAMMING",
      "tags": []
    },
    "D1": {
      "name": "Quantum Classification - Dataset 3",
      "type": "PROGRAMMING",
      "tags": []
    },
    "C2": {
      "name": "Prepare superposition of basis states with the same parity",
      "type": "PROGRAMMING",
      "tags": []
    },
    "C1": {
      "name": "Prepare superposition of basis states with 0s",
      "type": "PROGRAMMING",
      "tags": []
    },
    "B2": {
      "name": "\"Is the number divisible by 3?\" oracle",
      "type": "PROGRAMMING",
      "tags": []
    },
    "B1": {
      "name": "\"Is the bit string balanced?\" oracle",
      "type": "PROGRAMMING",
      "tags": []
    },
    "A7": {
      "name": "Distinguish Y, XZ, -Y and -XZ",
      "type": "PROGRAMMING",
      "tags": []
    },
    "A6": {
      "name": "Distinguish four Pauli gates",
      "type": "PROGRAMMING",
      "tags": []
    },
    "A5": {
      "name": "Distinguish Rz(\u03b8) from Ry(\u03b8)",
      "type": "PROGRAMMING",
      "tags": []
    },
    "A4": {
      "name": "Distinguish Rz from R1",
      "type": "PROGRAMMING",
      "tags": []
    },
    "A3": {
      "name": "Distinguish H from X",
      "type": "PROGRAMMING",
      "tags": []
    },
    "A2": {
      "name": "Distinguish I, CNOTs and SWAP",
      "type": "PROGRAMMING",
      "tags": []
    },
    "A1": {
      "name": "Figure out direction of CNOT",
      "type": "PROGRAMMING",
      "tags": []
    }
  },
  "1356": {
    "D2": {
      "name": "Quantum Classification - 2",
      "type": "PROGRAMMING",
      "tags": [
        "*special"
      ]
    },
    "D1": {
      "name": "Quantum Classification - 1",
      "type": "PROGRAMMING",
      "tags": [
        "*special"
      ]
    },
    "C": {
      "name": "Prepare state |01\u27e9 + |10\u27e9 + |11\u27e9",
      "type": "PROGRAMMING",
      "tags": [
        "*special"
      ]
    },
    "B2": {
      "name": "Decrement",
      "type": "PROGRAMMING",
      "tags": [
        "*special"
      ]
    },
    "B1": {
      "name": "Increment",
      "type": "PROGRAMMING",
      "tags": [
        "*special"
      ]
    },
    "A5": {
      "name": "Distinguish Z from -Z",
      "type": "PROGRAMMING",
      "tags": [
        "*special"
      ]
    },
    "A4": {
      "name": "Distinguish I \u2297 X from CNOT",
      "type": "PROGRAMMING",
      "tags": [
        "*special"
      ]
    },
    "A3": {
      "name": "Distinguish Z from S",
      "type": "PROGRAMMING",
      "tags": [
        "*special"
      ]
    },
    "A2": {
      "name": "Distinguish I from Z",
      "type": "PROGRAMMING",
      "tags": [
        "*special"
      ]
    },
    "A1": {
      "name": "Distinguish I from X",
      "type": "PROGRAMMING",
      "tags": [
        "*special"
      ]
    }
  },
  "1355": {
    "F": {
      "name": "Guess Divisors Count",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2600,
      "tags": [
        "constructive algorithms",
        "interactive",
        "number theory"
      ]
    },
    "E": {
      "name": "Restorer Distance",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "greedy",
        "math",
        "sortings",
        "ternary search"
      ]
    },
    "D": {
      "name": "Game With Array",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "C": {
      "name": "Count Triangles",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "implementation",
        "math",
        "two pointers"
      ]
    },
    "B": {
      "name": "Young Explorers",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1200,
      "tags": [
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Sequence with Digits",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    }
  },
  "1354": {
    "G": {
      "name": "Find a Gift",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "binary search",
        "interactive",
        "probabilities"
      ]
    },
    "F": {
      "name": "Summoning Minions",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "dp",
        "flows",
        "graph matchings",
        "greedy",
        "sortings"
      ]
    },
    "E": {
      "name": "Graph Coloring",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs"
      ]
    },
    "D": {
      "name": "Multiset",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "C2": {
      "name": "Not So Simple Polygon Embedding",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "binary search",
        "brute force",
        "geometry",
        "math"
      ]
    },
    "C1": {
      "name": "Simple Polygon Embedding",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "binary search",
        "geometry",
        "math",
        "ternary search"
      ]
    },
    "B": {
      "name": "Ternary String",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "binary search",
        "dp",
        "implementation",
        "two pointers"
      ]
    },
    "A": {
      "name": "Alarm Clock",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "math"
      ]
    }
  },
  "1353": {
    "F": {
      "name": "Decreasing Heights",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "brute force",
        "dp"
      ]
    },
    "E": {
      "name": "K-periodic Garland",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "brute force",
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Constructing the Array",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "data structures",
        "sortings"
      ]
    },
    "C": {
      "name": "Board Moves",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "math"
      ]
    },
    "B": {
      "name": "Two Arrays And Swaps",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Most Unstable Array",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    }
  },
  "1352": {
    "G": {
      "name": "Special Permutation",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "constructive algorithms"
      ]
    },
    "F": {
      "name": "Binary String Reconstruction",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "math"
      ]
    },
    "E": {
      "name": "Special Elements",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "brute force",
        "implementation",
        "two pointers"
      ]
    },
    "D": {
      "name": "Alice, Bob and Candies",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "C": {
      "name": "K-th Not Divisible by n",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "binary search",
        "math"
      ]
    },
    "B": {
      "name": "Same Parity Summands",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Sum of Round Numbers",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1351": {
    "C": {
      "name": "Skier",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "B": {
      "name": "Square?",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "A+B (Trial Problem)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1350": {
    "B": {
      "name": "Orac and Models",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "dp",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Orac and Factors",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "math"
      ]
    }
  },
  "1349": {
    "F2": {
      "name": "Slime and Sequences (Hard Version)",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 3500,
      "tags": [
        "dp",
        "fft",
        "math"
      ]
    },
    "F1": {
      "name": "Slime and Sequences (Easy Version)",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 3100,
      "tags": [
        "dp",
        "fft",
        "math"
      ]
    },
    "E": {
      "name": "Slime and Hats",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3500,
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Slime and Biscuits",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3200,
      "tags": [
        "math",
        "probabilities"
      ]
    },
    "C": {
      "name": "Orac and Game of Life",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "graphs",
        "implementation",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Orac and Medians",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Orac and LCM",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "data structures",
        "math",
        "number theory"
      ]
    }
  },
  "1348": {
    "F": {
      "name": "Phoenix and Memory",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "greedy"
      ]
    },
    "E": {
      "name": "Phoenix and Berries",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "math"
      ]
    },
    "D": {
      "name": "Phoenix and Science",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Phoenix and Distribution",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "greedy",
        "sortings",
        "strings"
      ]
    },
    "B": {
      "name": "Phoenix and Beauty",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Phoenix and Balance",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1346": {
    "I": {
      "name": "Pac-Man 2.0",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "*special",
        "dp"
      ]
    },
    "H": {
      "name": "Game with Segments",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "*special",
        "data structures",
        "games"
      ]
    },
    "G": {
      "name": "Two IP Cameras",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "*special",
        "math",
        "number theory"
      ]
    },
    "F": {
      "name": "Dune II: Battle For Arrakis",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "*special",
        "data structures",
        "greedy",
        "math"
      ]
    },
    "E": {
      "name": "Magic Tricks",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "*special",
        "dp",
        "graphs"
      ]
    },
    "D": {
      "name": "Constructing the Dungeon",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "*special",
        "graphs",
        "greedy"
      ]
    },
    "C": {
      "name": "Spring Cleaning",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "*special",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Boot Camp",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "*special",
        "greedy"
      ]
    },
    "A": {
      "name": "Color Revolution",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "*special",
        "math"
      ]
    }
  },
  "1345": {
    "B": {
      "name": "Card Constructions",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "binary search",
        "brute force",
        "dp",
        "math"
      ]
    },
    "A": {
      "name": "Puzzle Pieces",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1344": {
    "F": {
      "name": "Piet's Palette",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3200,
      "tags": [
        "matrices"
      ]
    },
    "E": {
      "name": "Train Tracks",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "D": {
      "name": "R\u00e9sum\u00e9 Review",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2700,
      "tags": [
        "binary search",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Quantifier Question",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2600,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "math"
      ]
    },
    "B": {
      "name": "Monopole Magnets",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "A": {
      "name": "Hilbert's Hotel",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "math",
        "number theory",
        "sortings"
      ]
    }
  },
  "1343": {
    "F": {
      "name": "Restore the Permutation by Sorted Segments",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "brute force",
        "constructive algorithms",
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "E": {
      "name": "Weights Distributing",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "brute force",
        "graphs",
        "greedy",
        "shortest paths",
        "sortings"
      ]
    },
    "D": {
      "name": "Constant Palindrome Sum",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "brute force",
        "data structures",
        "greedy",
        "two pointers"
      ]
    },
    "C": {
      "name": "Alternating Subsequence",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "dp",
        "greedy",
        "two pointers"
      ]
    },
    "B": {
      "name": "Balanced Array",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Candies",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "brute force",
        "math"
      ]
    }
  },
  "1342": {
    "F": {
      "name": "Make It Ascending",
      "type": "PROGRAMMING",
      "rating": 3000,
      "tags": [
        "bitmasks",
        "brute force",
        "dp"
      ]
    },
    "E": {
      "name": "Placing Rooks",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "combinatorics",
        "fft",
        "math"
      ]
    },
    "D": {
      "name": "Multiple Testcases",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Yet Another Counting Problem",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Binary Period",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "strings"
      ]
    },
    "A": {
      "name": "Road To Zero",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1341": {
    "B": {
      "name": "Nastya and Door",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Nastya and Rice",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "math"
      ]
    }
  },
  "1340": {
    "F": {
      "name": "Nastya and CBS",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3300,
      "tags": [
        "brute force",
        "data structures",
        "hashing"
      ]
    },
    "E": {
      "name": "Nastya and Bees",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3000,
      "tags": [
        "graphs",
        "interactive",
        "probabilities"
      ]
    },
    "D": {
      "name": "Nastya and Time Machine",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2600,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "C": {
      "name": "Nastya and Unexpected Guest",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2400,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Nastya and Scoreboard",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1700,
      "tags": [
        "bitmasks",
        "dp",
        "graphs",
        "greedy"
      ]
    },
    "A": {
      "name": "Nastya and Strange Generator",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "data structures",
        "greedy",
        "implementation"
      ]
    }
  },
  "1339": {
    "B": {
      "name": "Sorted Adjacent Differences",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "sortings"
      ]
    },
    "A": {
      "name": "Filling Diamonds",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "brute force",
        "dp",
        "implementation",
        "math"
      ]
    }
  },
  "1338": {
    "E": {
      "name": "JYPnation",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3500,
      "tags": [
        "graphs"
      ]
    },
    "D": {
      "name": "Nested Rubber Bands",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "math",
        "trees"
      ]
    },
    "C": {
      "name": "Perfect Triples",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "divide and conquer",
        "math"
      ]
    },
    "B": {
      "name": "Edge Weight Assignment",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "dfs and similar",
        "greedy",
        "math",
        "trees"
      ]
    },
    "A": {
      "name": "Powered Addition",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1337": {
    "B": {
      "name": "Kana and Dragon Quest game",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Ichihime and Triangle",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1336": {
    "F": {
      "name": "Journey",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3500,
      "tags": [
        "data structures",
        "divide and conquer",
        "graphs",
        "trees"
      ]
    },
    "E2": {
      "name": "Chiori and Doll Picking (hard version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 3500,
      "tags": [
        "bitmasks",
        "brute force",
        "combinatorics",
        "math"
      ]
    },
    "E1": {
      "name": "Chiori and Doll Picking (easy version)",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2700,
      "tags": [
        "bitmasks",
        "brute force",
        "combinatorics",
        "math"
      ]
    },
    "D": {
      "name": "Yui and Mahjong Set",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3200,
      "tags": [
        "constructive algorithms",
        "interactive"
      ]
    },
    "C": {
      "name": "Kaavi and Magic Spell",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "dp",
        "strings"
      ]
    },
    "B": {
      "name": "Xenia and Colorful Gems",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "greedy",
        "math",
        "sortings",
        "two pointers"
      ]
    },
    "A": {
      "name": "Linova and Kingdom",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "sortings",
        "trees"
      ]
    }
  },
  "1335": {
    "F": {
      "name": "Robots on a Grid",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "matrices"
      ]
    },
    "E2": {
      "name": "Three Blocks Palindrome (hard version)",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "brute force",
        "data structures",
        "dp",
        "two pointers"
      ]
    },
    "E1": {
      "name": "Three Blocks Palindrome (easy version)",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dp",
        "two pointers"
      ]
    },
    "D": {
      "name": "Anti-Sudoku",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "C": {
      "name": "Two Teams Composing",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "binary search",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Construct the String",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "Candies and Two Sisters",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1334": {
    "G": {
      "name": "Substring Search",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "bitmasks",
        "brute force",
        "fft"
      ]
    },
    "F": {
      "name": "Strange Function",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "E": {
      "name": "Divisor Paths",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "combinatorics",
        "graphs",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Minimum Euler Cycle",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "graphs",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Circle of Monsters",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Middle Class",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Level Statistics",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1333": {
    "F": {
      "name": "Kate and imperfection",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "greedy",
        "implementation",
        "math",
        "number theory",
        "sortings",
        "two pointers"
      ]
    },
    "E": {
      "name": "Road to 1600",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "brute force",
        "constructive algorithms"
      ]
    },
    "D": {
      "name": "Challenges in school \u211641",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "constructive algorithms",
        "games",
        "graphs",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "C": {
      "name": "Eugene and an array",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "data structures",
        "implementation",
        "two pointers"
      ]
    },
    "B": {
      "name": "Kind Anton",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Little Artem",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms"
      ]
    }
  },
  "1332": {
    "G": {
      "name": "No Monotone Triples",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3100,
      "tags": [
        "data structures"
      ]
    },
    "F": {
      "name": "Independent Set",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2500,
      "tags": [
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "E": {
      "name": "Height All the Same",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2100,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "math",
        "matrices"
      ]
    },
    "D": {
      "name": "Walk on Matrix",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1700,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "math"
      ]
    },
    "C": {
      "name": "K-Complete Word",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "dfs and similar",
        "dsu",
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "B": {
      "name": "Composite Coloring",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Exercising Walk",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "1331": {
    "H": {
      "name": "It's showtime",
      "type": "PROGRAMMING",
      "tags": [
        "*special"
      ]
    },
    "G": {
      "name": "Lingua Romana",
      "type": "PROGRAMMING",
      "tags": [
        "*special"
      ]
    },
    "F": {
      "name": "Elementary!",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "brute force",
        "dp",
        "strings"
      ]
    },
    "E": {
      "name": "Jordan Smiley",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "dfs and similar",
        "geometry",
        "implementation"
      ]
    },
    "D": {
      "name": "Again?",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "C": {
      "name": "...And after happily lived ever they",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "bitmasks"
      ]
    },
    "B": {
      "name": "Limericks",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Is it rated?",
      "type": "PROGRAMMING",
      "tags": [
        "*special"
      ]
    }
  },
  "1330": {
    "B": {
      "name": "Dreamoon Likes Permutations",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Dreamoon and Ranking Collection",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "1329": {
    "E": {
      "name": "Dreamoon Loves AA",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3300,
      "tags": [
        "binary search",
        "greedy"
      ]
    },
    "D": {
      "name": "Dreamoon Likes Strings",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3100,
      "tags": [
        "constructive algorithms",
        "data structures"
      ]
    },
    "C": {
      "name": "Drazil Likes Heap",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Dreamoon Likes Sequences",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1700,
      "tags": [
        "bitmasks",
        "combinatorics",
        "math"
      ]
    },
    "A": {
      "name": "Dreamoon Likes Coloring",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "1328": {
    "F": {
      "name": "Make k Equal",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "greedy"
      ]
    },
    "E": {
      "name": "Tree Queries",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "D": {
      "name": "Carousel",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "dp",
        "graphs",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Ternary XOR",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "K-th Beautiful String",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "binary search",
        "brute force",
        "combinatorics",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Divisibility Problem",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1327": {
    "G": {
      "name": "Letters and Question Marks",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "bitmasks",
        "dp",
        "string suffix structures"
      ]
    },
    "F": {
      "name": "AND Segments",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "bitmasks",
        "combinatorics",
        "data structures",
        "dp",
        "two pointers"
      ]
    },
    "E": {
      "name": "Count The Blocks",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "Infinite Path",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "brute force",
        "dfs and similar",
        "graphs",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Game with Chips",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "B": {
      "name": "Princesses and Princes",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "brute force",
        "graphs",
        "greedy"
      ]
    },
    "A": {
      "name": "Sum of Odd Integers",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "math"
      ]
    }
  },
  "1326": {
    "G": {
      "name": "Spiderweb Trees",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3500,
      "tags": [
        "dp",
        "geometry",
        "trees"
      ]
    },
    "F2": {
      "name": "Wise Men (Hard Version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 3200,
      "tags": [
        "bitmasks",
        "dp",
        "math"
      ]
    },
    "F1": {
      "name": "Wise Men (Easy Version)",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "meet-in-the-middle"
      ]
    },
    "E": {
      "name": "Bombs",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "two pointers"
      ]
    },
    "D2": {
      "name": "Prefix-Suffix Palindrome (Hard version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "greedy",
        "hashing",
        "string suffix structures",
        "strings"
      ]
    },
    "D1": {
      "name": "Prefix-Suffix Palindrome (Easy version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "hashing",
        "string suffix structures",
        "strings"
      ]
    },
    "C": {
      "name": "Permutation Partitions",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "combinatorics",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Maximums",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Bad Ugly Numbers",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "number theory"
      ]
    }
  },
  "1325": {
    "F": {
      "name": "Ehab's Last Theorem",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy"
      ]
    },
    "E": {
      "name": "Ehab's REAL Number Theory Problem",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "brute force",
        "dfs and similar",
        "graphs",
        "number theory",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Ehab the Xorcist",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1700,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "greedy",
        "number theory"
      ]
    },
    "C": {
      "name": "Ehab and Path-etic MEXs",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "greedy",
        "trees"
      ]
    },
    "B": {
      "name": "CopyCopyCopyCopyCopy",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "EhAb AnD gCd",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "number theory"
      ]
    }
  },
  "1324": {
    "F": {
      "name": "Maximum White Subtree",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "Sleeping Schedule",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "dp",
        "implementation"
      ]
    },
    "D": {
      "name": "Pair of Topics",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "binary search",
        "data structures",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Frog Jumps",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Yet Another Palindrome Problem",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "brute force",
        "strings"
      ]
    },
    "A": {
      "name": "Yet Another Tetris Problem",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "implementation",
        "number theory"
      ]
    }
  },
  "1323": {
    "B": {
      "name": "Count Subrectangles",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Even Subset Sum Problem",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation"
      ]
    }
  },
  "1322": {
    "F": {
      "name": "Assigning Fares",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3500,
      "tags": [
        "dp",
        "trees"
      ]
    },
    "E": {
      "name": "Median Mountain Range",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3300,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Reality Show",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2800,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "C": {
      "name": "Instant Noodles",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "graphs",
        "hashing",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Present",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "bitmasks",
        "constructive algorithms",
        "data structures",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Unusual Competitions",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "greedy"
      ]
    }
  },
  "1321": {
    "C": {
      "name": "Remove Adjacent",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "strings"
      ]
    },
    "A": {
      "name": "Contest for Robots",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "greedy"
      ]
    }
  },
  "1320": {
    "F": {
      "name": "Blocks and Sensors",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3500,
      "tags": [
        "brute force"
      ]
    },
    "E": {
      "name": "Treeland and Viruses",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "shortest paths",
        "trees"
      ]
    },
    "D": {
      "name": "Reachable Strings",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "hashing",
        "strings"
      ]
    },
    "C": {
      "name": "World of Darkraft: Battle for Azathoth",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "data structures",
        "sortings"
      ]
    },
    "B": {
      "name": "Navigation System",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "graphs",
        "shortest paths"
      ]
    },
    "A": {
      "name": "Journey Planning",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "math",
        "sortings"
      ]
    }
  },
  "1316": {
    "F": {
      "name": "Battalion Strength",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "divide and conquer",
        "probabilities"
      ]
    },
    "E": {
      "name": "Team Building",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "bitmasks",
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "D": {
      "name": "Nash Matrix",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "implementation"
      ]
    },
    "C": {
      "name": "Primitive Primes",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "math",
        "ternary search"
      ]
    },
    "B": {
      "name": "String Modification",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation",
        "sortings",
        "strings"
      ]
    },
    "A": {
      "name": "Grade Allocation",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1315": {
    "C": {
      "name": "Restoring Permutation",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1200,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Homecoming",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "binary search",
        "dp",
        "greedy",
        "strings"
      ]
    },
    "A": {
      "name": "Dead Pixel",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1313": {
    "E": {
      "name": "Concatenation with intersection",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "hashing",
        "strings",
        "two pointers"
      ]
    },
    "D": {
      "name": "Happy New Year",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "dp",
        "implementation"
      ]
    },
    "C2": {
      "name": "Skyscrapers (hard version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "C1": {
      "name": "Skyscrapers (easy version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "B": {
      "name": "Different Rules",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Fast Food Restaurant",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    }
  },
  "1312": {
    "G": {
      "name": "Autocompletion",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "data structures",
        "dfs and similar",
        "dp"
      ]
    },
    "F": {
      "name": "Attack on Red Kingdom",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "games",
        "two pointers"
      ]
    },
    "E": {
      "name": "Array Shrinking",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Count the Arrays",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "C": {
      "name": "Adding Powers",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "bitmasks",
        "greedy",
        "implementation",
        "math",
        "number theory",
        "ternary search"
      ]
    },
    "B": {
      "name": "Bogosort",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "sortings"
      ]
    },
    "A": {
      "name": "Two Regular Polygons",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "geometry",
        "greedy",
        "math",
        "number theory"
      ]
    }
  },
  "1311": {
    "F": {
      "name": "Moving Points",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "data structures",
        "divide and conquer",
        "implementation",
        "sortings"
      ]
    },
    "E": {
      "name": "Construct the Binary Tree",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "brute force",
        "constructive algorithms",
        "trees"
      ]
    },
    "D": {
      "name": "Three Integers",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "brute force",
        "math"
      ]
    },
    "C": {
      "name": "Perform the Combo",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "brute force"
      ]
    },
    "B": {
      "name": "WeirdSort",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "dfs and similar",
        "sortings"
      ]
    },
    "A": {
      "name": "Add Odd or Subtract Even",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "1310": {
    "F": {
      "name": "Bad Cryptography",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3400,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Strange Function",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2900,
      "tags": [
        "dp"
      ]
    },
    "D": {
      "name": "Tourism",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "dp",
        "graphs",
        "probabilities"
      ]
    },
    "C": {
      "name": "Au Pont Rouge",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2800,
      "tags": [
        "binary search",
        "dp",
        "strings"
      ]
    },
    "B": {
      "name": "Double Elimination",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2500,
      "tags": [
        "dp",
        "implementation"
      ]
    },
    "A": {
      "name": "Recommendations",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "data structures",
        "greedy",
        "sortings"
      ]
    }
  },
  "1307": {
    "G": {
      "name": "Cow and Exercise",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3100,
      "tags": [
        "flows",
        "graphs",
        "shortest paths"
      ]
    },
    "F": {
      "name": "Cow and Vacation",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3300,
      "tags": [
        "dfs and similar",
        "dsu",
        "trees"
      ]
    },
    "E": {
      "name": "Cow and Treats",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "combinatorics",
        "dp",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Cow and Fields",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "graphs",
        "greedy",
        "shortest paths",
        "sortings"
      ]
    },
    "C": {
      "name": "Cow and Message",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "dp",
        "math",
        "strings"
      ]
    },
    "B": {
      "name": "Cow and Friend",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "geometry",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Cow and Haybales",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "1305": {
    "H": {
      "name": "Kuroni the Private Tutor",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3500,
      "tags": [
        "binary search",
        "greedy"
      ]
    },
    "G": {
      "name": "Kuroni and Antihype",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3500,
      "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "dsu",
        "graphs"
      ]
    },
    "F": {
      "name": "Kuroni and the Punishment",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "math",
        "number theory",
        "probabilities"
      ]
    },
    "E": {
      "name": "Kuroni and the Score Distribution",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Kuroni and the Celebration",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "interactive",
        "trees"
      ]
    },
    "C": {
      "name": "Kuroni and Impossible Calculation",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "combinatorics",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Kuroni and Simple Strings",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy",
        "strings",
        "two pointers"
      ]
    },
    "A": {
      "name": "Kuroni and the Gifts",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "sortings"
      ]
    }
  },
  "1304": {
    "F2": {
      "name": "Animal Observation (hard version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "F1": {
      "name": "Animal Observation (easy version)",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "E": {
      "name": "1-Trees and Queries",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "data structures",
        "dfs and similar",
        "shortest paths",
        "trees"
      ]
    },
    "D": {
      "name": "Shortest and Longest LIS",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "graphs",
        "greedy",
        "two pointers"
      ]
    },
    "C": {
      "name": "Air Conditioner",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "dp",
        "greedy",
        "implementation",
        "sortings",
        "two pointers"
      ]
    },
    "B": {
      "name": "Longest Palindrome",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Two Rabbits",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1303": {
    "G": {
      "name": "Sum of Prefix Sums",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "data structures",
        "divide and conquer",
        "geometry",
        "trees"
      ]
    },
    "F": {
      "name": "Number of Components",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "dsu",
        "implementation"
      ]
    },
    "E": {
      "name": "Erase Subsequences",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "dp",
        "strings"
      ]
    },
    "D": {
      "name": "Fill The Bag",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "bitmasks",
        "greedy"
      ]
    },
    "C": {
      "name": "Perfect Keyboard",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "National Project",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Erasing Zeroes",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1302": {
    "J": {
      "name": "Keep talking and nobody explodes -- hard",
      "type": "PROGRAMMING",
      "tags": []
    },
    "I": {
      "name": "Deja vu",
      "type": "PROGRAMMING",
      "tags": []
    },
    "H": {
      "name": "Who needs suffix structures?",
      "type": "PROGRAMMING",
      "tags": []
    },
    "G": {
      "name": "Keep talking and nobody explodes -- medium",
      "type": "PROGRAMMING",
      "tags": []
    },
    "F": {
      "name": "Keep talking and nobody explodes -- easy",
      "type": "PROGRAMMING",
      "tags": [
        "bitmasks",
        "brute force",
        "expression parsing"
      ]
    },
    "E": {
      "name": "Amazing bitset",
      "type": "PROGRAMMING",
      "tags": []
    },
    "D": {
      "name": "Dijkstra",
      "type": "PROGRAMMING",
      "tags": []
    },
    "C": {
      "name": "Segment tree or Fenwick?",
      "type": "PROGRAMMING",
      "tags": [
        "data structures"
      ]
    },
    "B": {
      "name": "DAG",
      "type": "PROGRAMMING",
      "tags": [
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "Nash equilibrium",
      "type": "PROGRAMMING",
      "tags": []
    }
  },
  "1301": {
    "F": {
      "name": "Super Jaber",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "dfs and similar",
        "graphs",
        "implementation",
        "shortest paths"
      ]
    },
    "E": {
      "name": "Nanosoft",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "implementation"
      ]
    },
    "D": {
      "name": "Time to Run",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "graphs",
        "implementation"
      ]
    },
    "C": {
      "name": "Ayoub's function",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "combinatorics",
        "greedy",
        "math",
        "strings"
      ]
    },
    "B": {
      "name": "Motarack's Birthday",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "greedy",
        "ternary search"
      ]
    },
    "A": {
      "name": "Three Strings",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1300": {
    "B": {
      "name": "Assigning to Classes",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Non-zero",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1299": {
    "E": {
      "name": "So Mean",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3400,
      "tags": [
        "interactive",
        "math"
      ]
    },
    "D": {
      "name": "Around the World",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 3000,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dfs and similar",
        "dp",
        "graphs",
        "graphs",
        "math",
        "trees"
      ]
    },
    "C": {
      "name": "Water Balance",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "geometry",
        "greedy"
      ]
    },
    "B": {
      "name": "Aerodynamic",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "geometry"
      ]
    },
    "A": {
      "name": "Anu Has a Function",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "greedy",
        "math"
      ]
    }
  },
  "1297": {
    "I": {
      "name": "Falling Blocks",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "data structures"
      ]
    },
    "H": {
      "name": "Paint the String",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "dp",
        "strings"
      ]
    },
    "G": {
      "name": "M-numbers",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "dp",
        "math"
      ]
    },
    "F": {
      "name": "Movie Fan",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "data structures",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "E": {
      "name": "Modernization of Treeland",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "dfs and similar",
        "trees"
      ]
    },
    "D": {
      "name": "Bonus Distribution ",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "binary search",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Dream Team",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "greedy"
      ]
    },
    "B": {
      "name": "Cartoons",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Likes Display",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "implementation"
      ]
    }
  },
  "1296": {
    "F": {
      "name": "Berland Beauty",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "greedy",
        "sortings",
        "trees"
      ]
    },
    "E2": {
      "name": "String Coloring (hard version)",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "E1": {
      "name": "String Coloring (easy version)",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "dp",
        "graphs",
        "greedy",
        "sortings"
      ]
    },
    "D": {
      "name": "Fight with Monsters",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Yet Another Walking Robot",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "B": {
      "name": "Food Buying",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Array with Odd Sum",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1295": {
    "F": {
      "name": "Good Contest",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "combinatorics",
        "dp",
        "probabilities"
      ]
    },
    "E": {
      "name": "Permutation Separation",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "data structures",
        "divide and conquer"
      ]
    },
    "D": {
      "name": "Same GCDs",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Obtain The String",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "dp",
        "greedy",
        "strings"
      ]
    },
    "B": {
      "name": "Infinite Prefixes",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "math",
        "strings"
      ]
    },
    "A": {
      "name": "Display The Number",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "greedy"
      ]
    }
  },
  "1294": {
    "F": {
      "name": "Three Paths on a Tree",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "E": {
      "name": "Obtain a Permutation",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "MEX maximizing",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "data structures",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Product of Three Numbers",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "greedy",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Collecting Packages",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Collecting Coins",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1293": {
    "B": {
      "name": "JOE is on TV!",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "combinatorics",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "ConneR and the A.R.C. Markland-N",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "binary search",
        "brute force",
        "implementation"
      ]
    }
  },
  "1292": {
    "F": {
      "name": "Nora's Toy Boxes",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3500,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dp"
      ]
    },
    "E": {
      "name": "Rin and The Unknown Flower",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3500,
      "tags": [
        "constructive algorithms",
        "greedy",
        "interactive",
        "math"
      ]
    },
    "D": {
      "name": "Chaotic V.",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2700,
      "tags": [
        "dp",
        "graphs",
        "greedy",
        "math",
        "number theory",
        "trees"
      ]
    },
    "C": {
      "name": "Xenon's Attack on the Gangs",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2300,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "B": {
      "name": "Aroma's Search",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "constructive algorithms",
        "geometry",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "NEKO's Maze Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "data structures",
        "dsu",
        "implementation"
      ]
    }
  },
  "1291": {
    "F": {
      "name": "Coffee Varieties (easy version)",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "graphs",
        "interactive"
      ]
    },
    "B": {
      "name": "Array Sharpening",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Even But Not Even",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "greedy",
        "math",
        "strings"
      ]
    }
  },
  "1290": {
    "F": {
      "name": "Making Shapes",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3500,
      "tags": [
        "dp"
      ]
    },
    "E": {
      "name": "Cartesian Tree ",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3300,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Coffee Varieties (hard version)",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "constructive algorithms",
        "graphs",
        "interactive"
      ]
    },
    "C": {
      "name": "Prefix Enlightenment",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2400,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "B": {
      "name": "Irreducible Anagrams",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "strings",
        "two pointers"
      ]
    },
    "A": {
      "name": "Mind Control",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "data structures",
        "implementation"
      ]
    }
  },
  "1288": {
    "F": {
      "name": "Red-Blue Graph",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "constructive algorithms",
        "flows"
      ]
    },
    "E": {
      "name": "Messenger Simulator",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Minimax Problem",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "binary search",
        "bitmasks",
        "dp"
      ]
    },
    "C": {
      "name": "Two Arrays",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "B": {
      "name": "Yet Another Meme Problem",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Deadline",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "binary search",
        "brute force",
        "math",
        "ternary search"
      ]
    }
  },
  "1287": {
    "B": {
      "name": "Hyperset",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "data structures",
        "implementation"
      ]
    },
    "A": {
      "name": "Angry Students",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "1286": {
    "F": {
      "name": "Harry The Potter",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3100,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dp",
        "fft",
        "implementation",
        "math"
      ]
    },
    "E": {
      "name": "Fedya the Potter Strikes Back",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3200,
      "tags": [
        "data structures",
        "strings"
      ]
    },
    "D": {
      "name": "LCC",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 3100,
      "tags": [
        "data structures",
        "math",
        "matrices",
        "probabilities"
      ]
    },
    "C2": {
      "name": "Madhouse (Hard version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "hashing",
        "interactive",
        "math"
      ]
    },
    "C1": {
      "name": "Madhouse (Easy version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2400,
      "tags": [
        "brute force",
        "constructive algorithms",
        "interactive",
        "math"
      ]
    },
    "B": {
      "name": "Numbers on Tree",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "data structures",
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "A": {
      "name": "Garland",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "dp",
        "greedy",
        "sortings"
      ]
    }
  },
  "1285": {
    "F": {
      "name": "Classical?",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2900,
      "tags": [
        "binary search",
        "combinatorics",
        "number theory"
      ]
    },
    "E": {
      "name": "Delete a Segment",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "constructive algorithms",
        "data structures",
        "dp",
        "graphs",
        "sortings",
        "trees",
        "two pointers"
      ]
    },
    "D": {
      "name": "Dr. Evil Underscores",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1900,
      "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar",
        "divide and conquer",
        "dp",
        "greedy",
        "strings",
        "trees"
      ]
    },
    "C": {
      "name": "Fadi and LCM",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Just Eat It!",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Mezo Playing Zoma",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1284": {
    "G": {
      "name": "Seollal",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3300,
      "tags": [
        "graphs"
      ]
    },
    "F": {
      "name": "New Year and Social Network",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3200,
      "tags": [
        "data structures",
        "graph matchings",
        "graphs",
        "math",
        "trees"
      ]
    },
    "E": {
      "name": "New Year and Castle Construction",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2500,
      "tags": [
        "combinatorics",
        "geometry",
        "math",
        "sortings"
      ]
    },
    "D": {
      "name": "New Year and Conference",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "data structures",
        "hashing",
        "sortings"
      ]
    },
    "C": {
      "name": "New Year and Permutation",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1600,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "B": {
      "name": "New Year and Ascent Sequence",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "binary search",
        "combinatorics",
        "data structures",
        "dp",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "New Year and Naming",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1283": {
    "F": {
      "name": "DIY Garland",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "greedy",
        "trees"
      ]
    },
    "E": {
      "name": "New Year Parties",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Christmas Trees",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "graphs",
        "greedy",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Friends and Gifts",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "data structures",
        "math"
      ]
    },
    "B": {
      "name": "Candies Division",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Minutes Before the New Year",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1282": {
    "E": {
      "name": "The Cake Is a Lie",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "data structures",
        "dfs and similar",
        "graphs"
      ]
    },
    "D": {
      "name": "Enchanted Artifact",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "interactive",
        "strings"
      ]
    },
    "C": {
      "name": "Petya and Exam",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1800,
      "tags": [
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "B2": {
      "name": "K for the Price of One (Hard Version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "B1": {
      "name": "K for the Price of One (Easy Version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Temporarily unavailable",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1281": {
    "B": {
      "name": "Azamon Web Services",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1600,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Suffix Three",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1280": {
    "F": {
      "name": "Intergalactic Sliding Puzzle",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3400,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "math"
      ]
    },
    "E": {
      "name": "Kirchhoff's Current Loss",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2900,
      "tags": [
        "math"
      ]
    },
    "D": {
      "name": "Miss Punyverse",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2500,
      "tags": [
        "dp",
        "greedy",
        "trees"
      ]
    },
    "C": {
      "name": "Jeremy Bearimy",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "B": {
      "name": "Beingawesomeism",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Cut and Paste",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1279": {
    "F": {
      "name": "New Year and Handle Change",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "binary search",
        "dp"
      ]
    },
    "E": {
      "name": "New Year Permutations",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "D": {
      "name": "Santa's Bot",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "combinatorics",
        "math",
        "probabilities"
      ]
    },
    "C": {
      "name": "Stack of Presents",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "B": {
      "name": "Verse For Santa",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "binary search",
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "New Year Garland",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "math"
      ]
    }
  },
  "1278": {
    "F": {
      "name": "Cards",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory",
        "probabilities"
      ]
    },
    "E": {
      "name": "Tests for problem D",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "divide and conquer",
        "trees"
      ]
    },
    "D": {
      "name": "Segment Tree",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "data structures",
        "dsu",
        "graphs",
        "trees"
      ]
    },
    "C": {
      "name": "Berry Jam",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "A and B",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Shuffle Hashing",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    }
  },
  "1277": {
    "D": {
      "name": "Let's Play the Words?",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "hashing",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Make Them Odd",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "number theory"
      ]
    },
    "A": {
      "name": "Happy Birthday, Polycarp!",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "1276": {
    "F": {
      "name": "Asterisk Substrings",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3400,
      "tags": [
        "string suffix structures"
      ]
    },
    "E": {
      "name": "Four Stones",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3500,
      "tags": [
        "constructive algorithms"
      ]
    },
    "D": {
      "name": "Tree Elimination",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "dp",
        "trees"
      ]
    },
    "C": {
      "name": "Beautiful Rectangle",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "combinatorics",
        "constructive algorithms",
        "data structures",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Two Fairs",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "A": {
      "name": "As Simple as One and Two",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "dp",
        "greedy"
      ]
    }
  },
  "1275": {
    "F": {
      "name": "\u0428\u0430\u0440\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u0441\u0442\u043e\u0432",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "tags": [
        "*special",
        "binary search",
        "interactive"
      ]
    },
    "E3": {
      "name": "\u041a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "tags": [
        "*special"
      ]
    },
    "E2": {
      "name": "\u041a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "tags": [
        "*special"
      ]
    },
    "E1": {
      "name": "\u041a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "tags": [
        "*special"
      ]
    },
    "D": {
      "name": "Storage2",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "tags": [
        "*special"
      ]
    },
    "C": {
      "name": "#define \u0417\u0430\u0434\u0430\u0447\u0430 B ...",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "tags": [
        "*special"
      ]
    },
    "B": {
      "name": "Code Review",
      "type": "PROGRAMMING",
      "points": 250.0,
      "tags": [
        "*special"
      ]
    },
    "A": {
      "name": "\u0421\u043a\u0440\u044b\u0442\u044b\u0439 \u0434\u0440\u0443\u0433",
      "type": "PROGRAMMING",
      "points": 250.0,
      "tags": [
        "*special"
      ]
    }
  },
  "1272": {
    "F": {
      "name": "Two Bracket Sequences",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "dp",
        "strings",
        "two pointers"
      ]
    },
    "E": {
      "name": "Nearest Opposite Parity",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "dfs and similar",
        "graphs",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Remove One Element",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "brute force",
        "dp"
      ]
    },
    "C": {
      "name": "Yet Another Broken Keyboard",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "combinatorics",
        "dp",
        "implementation"
      ]
    },
    "B": {
      "name": "Snow Walking Robot",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Three Friends",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "brute force",
        "greedy",
        "math",
        "sortings"
      ]
    }
  },
  "1271": {
    "F": {
      "name": "Divide The Students",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "brute force"
      ]
    },
    "E": {
      "name": "Common Number",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "Portals",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "C": {
      "name": "Shawarma Tent",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "geometry",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Blocks",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Suits",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "greedy",
        "math"
      ]
    }
  },
  "1270": {
    "I": {
      "name": "Xor on Figures",
      "type": "PROGRAMMING",
      "points": 4500.0,
      "rating": 3500,
      "tags": [
        "constructive algorithms",
        "fft",
        "math"
      ]
    },
    "H": {
      "name": "Number of Components",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3300,
      "tags": [
        "data structures"
      ]
    },
    "G": {
      "name": "Subset with Zero Sum",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "math"
      ]
    },
    "F": {
      "name": "Awesome Substrings",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 2600,
      "tags": [
        "math",
        "strings"
      ]
    },
    "E": {
      "name": "Divide Points",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "geometry",
        "math"
      ]
    },
    "D": {
      "name": "Strange Device",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "interactive",
        "math",
        "sortings"
      ]
    },
    "C": {
      "name": "Make Good",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "math"
      ]
    },
    "B": {
      "name": "Interesting Subarray",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Card Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "games",
        "greedy",
        "math"
      ]
    }
  },
  "1269": {
    "B": {
      "name": "Modulo Equality",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "sortings"
      ]
    },
    "A": {
      "name": "Equation",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "math"
      ]
    }
  },
  "1268": {
    "E": {
      "name": "Happy Cactus",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3400,
      "tags": [
        "dp"
      ]
    },
    "D": {
      "name": "Invertation in Tournament",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3200,
      "tags": [
        "brute force",
        "divide and conquer",
        "graphs",
        "math"
      ]
    },
    "C": {
      "name": "K Integers",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "B": {
      "name": "Domino for Young",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "dp",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Long Beautiful Integer",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "strings"
      ]
    }
  },
  "1267": {
    "L": {
      "name": "Lexicography",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "strings"
      ]
    },
    "K": {
      "name": "Key Storage",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "J": {
      "name": "Just Arrange the Icons",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    },
    "I": {
      "name": "Intriguing Selection",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation",
        "interactive",
        "sortings"
      ]
    },
    "H": {
      "name": "Help BerLine",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": [
        "constructive algorithms"
      ]
    },
    "G": {
      "name": "Game Relics",
      "type": "PROGRAMMING",
      "rating": 3000,
      "tags": [
        "math",
        "probabilities"
      ]
    },
    "F": {
      "name": "Foolpr\u00fcf Security",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "graphs"
      ]
    },
    "E": {
      "name": "Elections",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "greedy"
      ]
    },
    "D": {
      "name": "DevOps Best Practices",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "constructive algorithms"
      ]
    },
    "C": {
      "name": "Cactus Revenge",
      "type": "PROGRAMMING",
      "rating": 3500,
      "tags": [
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Balls of Buma",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": []
    },
    "A": {
      "name": "Apprentice Learning Trajectory",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": []
    }
  },
  "1266": {
    "H": {
      "name": "Red-Blue Graph",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3400,
      "tags": [
        "dp",
        "graphs",
        "math",
        "matrices",
        "meet-in-the-middle"
      ]
    },
    "G": {
      "name": "Permutation Concatenation",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3300,
      "tags": [
        "string suffix structures"
      ]
    },
    "F": {
      "name": "Almost Same Distance",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "E": {
      "name": "Spaceship Solitaire",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "D": {
      "name": "Decreasing Debts",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "data structures",
        "graphs",
        "greedy",
        "implementation",
        "math",
        "two pointers"
      ]
    },
    "C": {
      "name": "Diverse Matrix",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Dice Tower",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Competitive Programmer",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "chinese remainder theorem",
        "math"
      ]
    }
  },
  "1265": {
    "E": {
      "name": "Beautiful Mirrors",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "dp",
        "math",
        "probabilities"
      ]
    },
    "B": {
      "name": "Beautiful Numbers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "data structures",
        "implementation",
        "math",
        "two pointers"
      ]
    },
    "A": {
      "name": "Beautiful String",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    }
  },
  "1264": {
    "F": {
      "name": "Beautiful Fibonacci Problem",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3500,
      "tags": [
        "constructive algorithms",
        "number theory"
      ]
    },
    "E": {
      "name": "Beautiful League",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "flows",
        "graph matchings"
      ]
    },
    "D2": {
      "name": "Beautiful Bracket Sequence (hard version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2900,
      "tags": [
        "combinatorics",
        "probabilities"
      ]
    },
    "D1": {
      "name": "Beautiful Bracket Sequence (easy version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2600,
      "tags": [
        "combinatorics",
        "dp",
        "probabilities"
      ]
    },
    "C": {
      "name": "Beautiful Mirrors with queries",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "probabilities"
      ]
    },
    "B": {
      "name": "Beautiful Sequence",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "Beautiful Regional Contest",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "1263": {
    "F": {
      "name": "Economic Difficulties",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "flows",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "Editor",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "D": {
      "name": "Secret Passwords",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1500,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "C": {
      "name": "Everyone is a Winner!",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "binary search",
        "math",
        "meet-in-the-middle",
        "number theory"
      ]
    },
    "B": {
      "name": "PIN Codes",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Sweet Problem",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "math"
      ]
    }
  },
  "1261": {
    "F": {
      "name": "Xor-Set",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "bitmasks",
        "divide and conquer",
        "math"
      ]
    }
  },
  "1260": {
    "F": {
      "name": "Colored Tree",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "E": {
      "name": "Tournament",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "brute force",
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "A Game with Traps",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Infinite Fence",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "greedy",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Obtain Two Zeroes",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "binary search",
        "math"
      ]
    },
    "A": {
      "name": "Heating",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "math"
      ]
    }
  },
  "1257": {
    "G": {
      "name": "Divisor Set",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "divide and conquer",
        "fft",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "F": {
      "name": "Make Them Similar",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "bitmasks",
        "brute force",
        "hashing",
        "meet-in-the-middle"
      ]
    },
    "E": {
      "name": "The Contest",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Yet Another Monster Killing Problem",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Dominated Subarray",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation",
        "sortings",
        "strings",
        "two pointers"
      ]
    },
    "B": {
      "name": "Magic Stick",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Two Rival Students",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1256": {
    "F": {
      "name": "Equalizing Two Strings",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "sortings",
        "strings"
      ]
    },
    "E": {
      "name": "Yet Another Division Into Teams",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "D": {
      "name": "Binary String Minimizing",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "greedy"
      ]
    },
    "C": {
      "name": "Platforms Jumping",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Minimize the Permutation",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Payment Without Change",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "math"
      ]
    }
  },
  "1255": {
    "C": {
      "name": "League of Leesins",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "B": {
      "name": "Fridge Lockers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "graphs",
        "implementation"
      ]
    },
    "A": {
      "name": "Changing Volume",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1254": {
    "E": {
      "name": "Send Tree to Charlie",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3300,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "dsu",
        "trees"
      ]
    },
    "D": {
      "name": "Tree Queries",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "probabilities",
        "trees"
      ]
    },
    "C": {
      "name": "Point Ordering",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "geometry",
        "interactive",
        "math"
      ]
    },
    "B2": {
      "name": "Send Boxes to Alice (Hard Version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "number theory",
        "ternary search",
        "two pointers"
      ]
    },
    "B1": {
      "name": "Send Boxes to Alice (Easy Version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "number theory",
        "ternary search",
        "two pointers"
      ]
    },
    "A": {
      "name": "Feeding Chicken",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    }
  },
  "1253": {
    "F": {
      "name": "Cheap Robot",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "dsu",
        "graphs",
        "shortest paths",
        "trees"
      ]
    },
    "E": {
      "name": "Antenna Coverage",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "D": {
      "name": "Harmonious Graph",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Sweets Eating",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "dp",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "B": {
      "name": "Silly Mistake",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Single Push",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "1252": {
    "L": {
      "name": "Road Construction",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "flows",
        "graphs"
      ]
    },
    "K": {
      "name": "Addition Robot",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "data structures",
        "math",
        "matrices"
      ]
    },
    "J": {
      "name": "Tiling Terrace",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "brute force",
        "dp"
      ]
    },
    "I": {
      "name": "Mission Possible",
      "type": "PROGRAMMING",
      "rating": 3000,
      "tags": []
    },
    "H": {
      "name": "Twin Buildings",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "G": {
      "name": "Performance Review",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "data structures"
      ]
    },
    "F": {
      "name": "Regular Forestation",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "hashing",
        "trees"
      ]
    },
    "E": {
      "name": "Songwriter",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "greedy",
        "two pointers"
      ]
    },
    "D": {
      "name": "Find String in a Grid",
      "type": "PROGRAMMING",
      "rating": 3000,
      "tags": [
        "data structures",
        "dp",
        "strings",
        "trees"
      ]
    },
    "C": {
      "name": "Even Path",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "B": {
      "name": "Cleaning Robots",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "dp",
        "trees"
      ]
    },
    "A": {
      "name": "Copying Homework",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": []
    }
  },
  "1251": {
    "F": {
      "name": "Red-White Fence",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "combinatorics",
        "fft"
      ]
    },
    "E2": {
      "name": "Voting (Hard Version)",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "binary search",
        "data structures",
        "greedy"
      ]
    },
    "E1": {
      "name": "Voting (Easy Version)",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Salary Changing",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Minimize The Integer",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "greedy",
        "two pointers"
      ]
    },
    "B": {
      "name": "Binary Palindromes",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "greedy",
        "strings"
      ]
    },
    "A": {
      "name": "Broken Keyboard",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "brute force",
        "strings",
        "two pointers"
      ]
    }
  },
  "1250": {
    "N": {
      "name": "Wires",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "graphs",
        "greedy"
      ]
    },
    "M": {
      "name": "SmartGarden",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "divide and conquer"
      ]
    },
    "L": {
      "name": "Divide The Students",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "binary search",
        "greedy",
        "math"
      ]
    },
    "K": {
      "name": "Projectors",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": [
        "flows",
        "graphs"
      ]
    },
    "J": {
      "name": "The Parade",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "binary search",
        "greedy"
      ]
    },
    "I": {
      "name": "Show Must Go On",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": [
        "binary search",
        "brute force",
        "greedy",
        "shortest paths"
      ]
    },
    "H": {
      "name": "Happy Birthday",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "math"
      ]
    },
    "G": {
      "name": "Discarding Game",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "dp",
        "greedy",
        "two pointers"
      ]
    },
    "F": {
      "name": "Data Center",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "E": {
      "name": "The Coronation",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "graphs",
        "implementation"
      ]
    },
    "D": {
      "name": "Conference Problem",
      "type": "PROGRAMMING",
      "rating": 3000,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Trip to Saint Petersburg",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "data structures"
      ]
    },
    "B": {
      "name": "The Feast and the Bus",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Berstagram",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "implementation"
      ]
    }
  },
  "1249": {
    "F": {
      "name": "Maximum Weight Subset",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "dp",
        "trees"
      ]
    },
    "E": {
      "name": "By Elevator or Stairs?",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "dp",
        "shortest paths"
      ]
    },
    "D2": {
      "name": "Too Many Segments (hard version)",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "D1": {
      "name": "Too Many Segments (easy version)",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "greedy"
      ]
    },
    "C2": {
      "name": "Good Numbers (hard version)",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "binary search",
        "greedy",
        "math",
        "meet-in-the-middle"
      ]
    },
    "C1": {
      "name": "Good Numbers (easy version)",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    },
    "B2": {
      "name": "Books Exchange (hard version)",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "dfs and similar",
        "dsu",
        "math"
      ]
    },
    "B1": {
      "name": "Books Exchange (easy version)",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "dsu",
        "math"
      ]
    },
    "A": {
      "name": "Yet Another Dividing into Teams",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1248": {
    "D1": {
      "name": "The World Is Just a Programming Task (Easy Version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Grow The Tree",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "greedy",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Integer Points",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "geometry",
        "math"
      ]
    }
  },
  "1246": {
    "F": {
      "name": "Cursor Distance",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3500,
      "tags": []
    }
  },
  "1245": {
    "F": {
      "name": "Daniel and Spring Cleaning",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "bitmasks",
        "brute force",
        "combinatorics",
        "dp"
      ]
    },
    "E": {
      "name": "Hyakugoku and Ladders",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "dp",
        "probabilities",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Shichikuji and Power Grid",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1900,
      "tags": [
        "dsu",
        "graphs",
        "greedy",
        "shortest paths",
        "trees"
      ]
    },
    "C": {
      "name": "Constanze's Machine",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Restricted RPS",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy"
      ]
    },
    "A": {
      "name": "Good ol' Numbers Coloring",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "math",
        "number theory"
      ]
    }
  },
  "1244": {
    "G": {
      "name": "Running in Pairs",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "F": {
      "name": "Chips",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "E": {
      "name": "Minimizing Difference",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "sortings",
        "ternary search",
        "two pointers"
      ]
    },
    "D": {
      "name": "Paint the Tree",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dp",
        "graphs",
        "implementation",
        "trees"
      ]
    },
    "C": {
      "name": "The Football Season",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Rooms and Staircases",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Pens and Pencils",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1243": {
    "B2": {
      "name": "Character Swap (Hard Version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1600,
      "tags": [
        "strings"
      ]
    },
    "B1": {
      "name": "Character Swap (Easy Version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "strings"
      ]
    },
    "A": {
      "name": "Maximum Square",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1242": {
    "E": {
      "name": "Planar Perimeter",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3200,
      "tags": [
        "constructive algorithms",
        "graphs"
      ]
    },
    "D": {
      "name": "Number Discovery",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3400,
      "tags": [
        "math"
      ]
    },
    "C": {
      "name": "Sum Balance",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "dfs and similar",
        "dp",
        "graphs"
      ]
    },
    "B": {
      "name": "0-1 MST",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "sortings"
      ]
    },
    "A": {
      "name": "Tile Painting",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory"
      ]
    }
  },
  "1240": {
    "F": {
      "name": "Football",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3100,
      "tags": [
        "graphs"
      ]
    }
  },
  "1239": {
    "F": {
      "name": "Swiper, no swiping!",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3400,
      "tags": [
        "graphs",
        "implementation"
      ]
    },
    "E": {
      "name": "Turtle",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "dp",
        "implementation"
      ]
    },
    "D": {
      "name": "Catowice City",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "2-sat",
        "dfs and similar",
        "graph matchings",
        "graphs"
      ]
    },
    "C": {
      "name": "Queue in the Train",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "The World Is Just a Programming Task (Hard Version)",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2500,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Ivan the Fool and the Probability Theory",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    }
  },
  "1238": {
    "G": {
      "name": "Adilbek and the Watering System",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "F": {
      "name": "The Maximum Subtree",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "Keyboard Purchase",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "D": {
      "name": "AB-string",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "combinatorics",
        "dp",
        "strings"
      ]
    },
    "C": {
      "name": "Standard Free2play",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "dp",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Kill `Em All",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Prime Subtraction",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "math",
        "number theory"
      ]
    }
  },
  "1237": {
    "H": {
      "name": "Balanced Reversals",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3300,
      "tags": [
        "constructive algorithms"
      ]
    },
    "G": {
      "name": "Balanced Distribution",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 3500,
      "tags": [
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "F": {
      "name": "Balanced Domino Placements",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2600,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "E": {
      "name": "Balanced Binary Search Trees",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "Balanced Playlist",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "data structures",
        "implementation"
      ]
    },
    "C2": {
      "name": "Balanced Removals (Harder)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "constructive algorithms",
        "divide and conquer",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "C1": {
      "name": "Balanced Removals (Easier)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "geometry",
        "greedy"
      ]
    },
    "B": {
      "name": "Balanced Tunnel",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1300,
      "tags": [
        "data structures",
        "sortings",
        "two pointers"
      ]
    },
    "A": {
      "name": "Balanced Rating Changes",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1236": {
    "F": {
      "name": "Alice and the Cactus",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "dfs and similar",
        "graphs",
        "math",
        "probabilities"
      ]
    },
    "E": {
      "name": "Alice and the Unfair Game",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "dsu"
      ]
    },
    "D": {
      "name": "Alice and the Doll",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Labs",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Alice and the List of Presents",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "A": {
      "name": "Stones",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "greedy",
        "math"
      ]
    }
  },
  "1234": {
    "F": {
      "name": "Yet Another Substring Reverse",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "E": {
      "name": "Special Permutations",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "math"
      ]
    },
    "D": {
      "name": "Distinct Characters Queries",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "data structures"
      ]
    },
    "C": {
      "name": "Pipes",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "dp",
        "implementation"
      ]
    },
    "B2": {
      "name": "Social Network (hard version)",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "B1": {
      "name": "Social Network (easy version)",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Equalize Prices Again",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1231": {
    "E": {
      "name": "Middle-Out",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "greedy",
        "strings"
      ]
    },
    "C": {
      "name": "Increasing Matrix",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy"
      ]
    }
  },
  "1230": {
    "B": {
      "name": "Ania and Minimizing",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Dawid and Bags of Candies",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "1228": {
    "F": {
      "name": "One Node is Gone",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "implementation",
        "trees"
      ]
    },
    "E": {
      "name": "Another Filling the Grid",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "Complete Tripartite",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "constructive algorithms",
        "graphs",
        "hashing",
        "implementation"
      ]
    },
    "C": {
      "name": "Primes and Multiplication",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1700,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Filling the Grid",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Distinct Digits",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "1227": {
    "G": {
      "name": "Not Same",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 2600,
      "tags": [
        "constructive algorithms"
      ]
    },
    "F2": {
      "name": "Wrong Answer on test 233 (Hard Version)",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "F1": {
      "name": "Wrong Answer on test 233 (Easy Version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2200,
      "tags": [
        "dp"
      ]
    },
    "E": {
      "name": "Arson In Berland Forest",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "graphs",
        "graphs",
        "shortest paths"
      ]
    },
    "D2": {
      "name": "Optimal Subsequences (Hard Version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "D1": {
      "name": "Optimal Subsequences (Easy Version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "C": {
      "name": "Messy",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Box",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "Math Problem",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "math"
      ]
    }
  },
  "1225": {
    "G": {
      "name": "To Make 1",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 3100,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "dp",
        "greedy",
        "number theory"
      ]
    },
    "F": {
      "name": "Tree Factory",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "greedy",
        "trees"
      ]
    },
    "E": {
      "name": "Rock Is Push",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "dp"
      ]
    },
    "D": {
      "name": "Power Products",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "hashing",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "p-binary",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "bitmasks",
        "brute force",
        "math"
      ]
    },
    "B2": {
      "name": "TV Subscriptions (Hard Version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1300,
      "tags": [
        "implementation",
        "two pointers"
      ]
    },
    "B1": {
      "name": "TV Subscriptions (Easy Version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Forgetting Things",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "math"
      ]
    }
  },
  "1223": {
    "G": {
      "name": "Wooden Raft",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3200,
      "tags": [
        "binary search",
        "math",
        "number theory"
      ]
    },
    "F": {
      "name": "Stack Exterminable Arrays",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "divide and conquer",
        "dp",
        "hashing"
      ]
    },
    "E": {
      "name": "Paint the Tree",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2100,
      "tags": [
        "dp",
        "sortings",
        "trees"
      ]
    },
    "D": {
      "name": "Sequence Sorting",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "dp",
        "greedy",
        "two pointers"
      ]
    },
    "C": {
      "name": "Save the Nature",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "greedy"
      ]
    },
    "B": {
      "name": "Strings Equalization",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "strings"
      ]
    },
    "A": {
      "name": "CME",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1221": {
    "G": {
      "name": "Graph And Numbers",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "bitmasks",
        "brute force",
        "combinatorics",
        "dp",
        "meet-in-the-middle"
      ]
    },
    "F": {
      "name": "Choose a Square",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "binary search",
        "data structures",
        "sortings"
      ]
    },
    "E": {
      "name": "Game With String",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "games"
      ]
    },
    "D": {
      "name": "Make The Fence Great Again",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Perfect Team",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "binary search",
        "math"
      ]
    },
    "B": {
      "name": "Knights",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "2048 Game",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "brute force",
        "greedy",
        "math"
      ]
    }
  },
  "1220": {
    "G": {
      "name": "Geolocation",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3400,
      "tags": [
        "geometry"
      ]
    },
    "F": {
      "name": "Gardener Alex",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "E": {
      "name": "Tourism",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "dp",
        "dsu",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "D": {
      "name": "Alex and Julian",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 1900,
      "tags": [
        "bitmasks",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Substring Game in the Lesson",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "games",
        "greedy",
        "strings"
      ]
    },
    "B": {
      "name": "Multiplication Table",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Cards",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "sortings",
        "strings"
      ]
    }
  },
  "1219": {
    "G": {
      "name": "Harvester",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "implementation"
      ]
    },
    "C": {
      "name": "Periodic integer number",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1218": {
    "I": {
      "name": "The Light Square",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "2-sat",
        "dfs and similar",
        "greedy"
      ]
    },
    "H": {
      "name": "Function Composition",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "dfs and similar"
      ]
    },
    "G": {
      "name": "Alpha planetary system",
      "type": "PROGRAMMING",
      "rating": 3000,
      "tags": [
        "constructive algorithms",
        "graphs",
        "shortest paths"
      ]
    },
    "F": {
      "name": "Workout plan",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "E": {
      "name": "Product Tuples",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "divide and conquer",
        "fft"
      ]
    },
    "D": {
      "name": "Xor Spanning Tree",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "divide and conquer",
        "fft",
        "graphs"
      ]
    },
    "C": {
      "name": "Jumping Transformers",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Guarding warehouses",
      "type": "PROGRAMMING",
      "rating": 3000,
      "tags": [
        "data structures",
        "geometry"
      ]
    },
    "A": {
      "name": "BubbleReactor",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "dp",
        "graphs"
      ]
    }
  },
  "1217": {
    "F": {
      "name": "Forced Online Queries Problem",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "data structures",
        "divide and conquer",
        "dsu",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "Sum Queries?",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "data structures",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Coloring Edges",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs"
      ]
    },
    "C": {
      "name": "The Number Of Good Substrings",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "binary search",
        "bitmasks",
        "brute force"
      ]
    },
    "B": {
      "name": "Zmei Gorynich",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Creating a Character",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "binary search",
        "math"
      ]
    }
  },
  "1216": {
    "F": {
      "name": "Wi-Fi",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "E2": {
      "name": "Numerical Sequence (hard version)",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "binary search",
        "math"
      ]
    },
    "E1": {
      "name": "Numerical Sequence (easy version)",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "brute force",
        "math"
      ]
    },
    "D": {
      "name": "Swords",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "math"
      ]
    },
    "C": {
      "name": "White Sheet",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "geometry",
        "math"
      ]
    },
    "B": {
      "name": "Shooting",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Prefixes",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "strings"
      ]
    }
  },
  "1215": {
    "F": {
      "name": "Radio Stations",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "2-sat"
      ]
    },
    "E": {
      "name": "Marbles",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "D": {
      "name": "Ticket Game",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "games",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Swap Letters",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "B": {
      "name": "The Number of Products",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "combinatorics",
        "dp",
        "implementation"
      ]
    },
    "A": {
      "name": "Yellow Cards",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "1214": {
    "H": {
      "name": "Tiles Placement",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 2800,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "trees"
      ]
    },
    "G": {
      "name": "Feeling Good",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3200,
      "tags": [
        "bitmasks",
        "data structures"
      ]
    },
    "F": {
      "name": "Employment",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "E": {
      "name": "Petya and Construction Set",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "graphs",
        "math",
        "sortings",
        "trees"
      ]
    },
    "D": {
      "name": "Treasure Island",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "dfs and similar",
        "dp",
        "flows",
        "hashing"
      ]
    },
    "C": {
      "name": "Bad Sequence",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1200,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "B": {
      "name": "Badges",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "math"
      ]
    },
    "A": {
      "name": "Optimal Currency Exchange",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "math"
      ]
    }
  },
  "1213": {
    "G": {
      "name": "Path Queries",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "divide and conquer",
        "dsu",
        "graphs",
        "sortings",
        "trees"
      ]
    },
    "F": {
      "name": "Unstable String Sort",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "E": {
      "name": "Two Small Strings",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "brute force",
        "constructive algorithms"
      ]
    },
    "D2": {
      "name": "Equalizing by Division (hard version)",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "brute force",
        "math",
        "sortings"
      ]
    },
    "D1": {
      "name": "Equalizing by Division (easy version)",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "C": {
      "name": "Book Reading",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "math"
      ]
    },
    "B": {
      "name": "Bad Prices",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "A": {
      "name": "Chips Moving",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "math"
      ]
    }
  },
  "1211": {
    "I": {
      "name": "Unusual Graph",
      "type": "PROGRAMMING",
      "rating": 3000,
      "tags": [
        "*special",
        "graphs"
      ]
    },
    "H": {
      "name": "Road Repair in Treeland",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": [
        "*special",
        "binary search",
        "dp",
        "trees"
      ]
    },
    "G": {
      "name": "King's Path",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "*special",
        "math",
        "trees"
      ]
    },
    "F": {
      "name": "kotlinkotlinkotlinkotlin...",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "*special",
        "graphs",
        "implementation",
        "strings"
      ]
    },
    "E": {
      "name": "Double Permutation Inc.",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "*special",
        "binary search",
        "greedy"
      ]
    },
    "D": {
      "name": "Teams",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "*special",
        "binary search",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Ice Cream",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "*special",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Traveling Around the Golden Ring of Berland",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "A": {
      "name": "Three Problems",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "*special",
        "implementation"
      ]
    }
  },
  "1210": {
    "G": {
      "name": "Mateusz and Escape Room",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3500,
      "tags": [
        "dp"
      ]
    },
    "F2": {
      "name": "Marek and Matching (hard version)",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 3200,
      "tags": [
        "brute force",
        "probabilities"
      ]
    },
    "F1": {
      "name": "Marek and Matching (easy version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 3100,
      "tags": [
        "brute force",
        "probabilities"
      ]
    },
    "E": {
      "name": "Wojtek and Card Tricks",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2700,
      "tags": [
        "math"
      ]
    },
    "D": {
      "name": "Konrad and Company Evaluation",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "graphs"
      ]
    },
    "C": {
      "name": "Kamil and Making a Stream",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "math",
        "number theory",
        "trees"
      ]
    },
    "B": {
      "name": "Marcin and Training Camp",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "greedy"
      ]
    },
    "A": {
      "name": "Anadi and Domino",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "graphs"
      ]
    }
  },
  "1209": {
    "H": {
      "name": "Moving Walkways",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3300,
      "tags": [
        "data structures",
        "greedy",
        "math"
      ]
    },
    "G2": {
      "name": "Into Blocks (hard version)",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3200,
      "tags": [
        "data structures"
      ]
    },
    "G1": {
      "name": "Into Blocks (easy version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "data structures",
        "dsu",
        "greedy",
        "implementation",
        "two pointers"
      ]
    },
    "F": {
      "name": "Koala and Notebook",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "shortest paths",
        "strings",
        "trees"
      ]
    },
    "E2": {
      "name": "Rotate Columns (hard version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "E1": {
      "name": "Rotate Columns (easy version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "D": {
      "name": "Cow and Snacks",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "C": {
      "name": "Paint the Digits",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Koala and Lights",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "implementation",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Paint the Numbers",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "1208": {
    "H": {
      "name": "Red Blue Tree",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 3500,
      "tags": [
        "data structures",
        "implementation",
        "trees"
      ]
    },
    "G": {
      "name": "Polygons",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "greedy",
        "math",
        "number theory"
      ]
    },
    "F": {
      "name": "Bits And Pieces",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "bitmasks",
        "dfs and similar",
        "dp",
        "greedy"
      ]
    },
    "E": {
      "name": "Let Them Slide",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "D": {
      "name": "Restore Permutation",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Magic Grid",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Uniqueness",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "brute force",
        "implementation",
        "two pointers"
      ]
    },
    "A": {
      "name": "XORinacci",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "math"
      ]
    }
  },
  "1207": {
    "G": {
      "name": "Indie Album",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "data structures",
        "dfs and similar",
        "hashing",
        "string suffix structures",
        "strings",
        "trees"
      ]
    },
    "F": {
      "name": "Remainder Problem",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "brute force",
        "data structures",
        "implementation"
      ]
    },
    "E": {
      "name": "XOR Guessing",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "bitmasks",
        "interactive",
        "math"
      ]
    },
    "D": {
      "name": "Number Of Permutations",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "combinatorics"
      ]
    },
    "C": {
      "name": "Gas Pipeline",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "B": {
      "name": "Square Filling",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "There Are Two Types Of Burgers",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "1206": {
    "B": {
      "name": "Make Product Equal One",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "dp",
        "implementation"
      ]
    },
    "A": {
      "name": "Choose Two Numbers",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math",
        "sortings"
      ]
    }
  },
  "1205": {
    "F": {
      "name": "Beauty of a Permutation",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3400,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "E": {
      "name": "Expected Value Again",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "combinatorics",
        "strings"
      ]
    },
    "D": {
      "name": "Almost All",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "trees"
      ]
    },
    "C": {
      "name": "Palindromic Paths",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2400,
      "tags": [
        "implementation",
        "interactive"
      ]
    },
    "B": {
      "name": "Shortest Cycle",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1900,
      "tags": [
        "bitmasks",
        "brute force",
        "graphs",
        "shortest paths"
      ]
    },
    "A": {
      "name": "Almost Equal",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    }
  },
  "1204": {
    "E": {
      "name": "Natasha, Sasha and the Prefix Sums",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory"
      ]
    },
    "D2": {
      "name": "Kirk and a Binary String (hard version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "greedy",
        "math",
        "strings"
      ]
    },
    "D1": {
      "name": "Kirk and a Binary String (easy version)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "greedy",
        "strings"
      ]
    },
    "C": {
      "name": "Anna, Svyatoslav and Maps",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1700,
      "tags": [
        "dp",
        "graphs",
        "greedy",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Mislove Has Lost an Array",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 900,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "BowWow and the Timetable",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "math"
      ]
    }
  },
  "1203": {
    "F2": {
      "name": "Complete the Projects (hard version)",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "F1": {
      "name": "Complete the Projects (easy version)",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "greedy"
      ]
    },
    "E": {
      "name": "Boxers",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "D2": {
      "name": "Remove the Substring (hard version)",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "binary search",
        "greedy",
        "implementation",
        "two pointers"
      ]
    },
    "D1": {
      "name": "Remove the Substring (easy version)",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Common Divisors",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Equal Rectangles",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Circle of Students",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "1202": {
    "F": {
      "name": "You Are Given Some Letters...",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "binary search",
        "implementation",
        "math"
      ]
    },
    "E": {
      "name": "You Are Given Some Strings...",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "brute force",
        "string suffix structures",
        "strings"
      ]
    },
    "D": {
      "name": "Print a 1337-string...",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "math",
        "strings"
      ]
    },
    "C": {
      "name": "You Are Given a WASD-string...",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "brute force",
        "data structures",
        "dp",
        "greedy",
        "implementation",
        "math",
        "strings"
      ]
    },
    "B": {
      "name": "You Are Given a Decimal String...",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "brute force",
        "dp",
        "shortest paths"
      ]
    },
    "A": {
      "name": "You Are Given Two Binary Strings...",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "bitmasks",
        "greedy"
      ]
    }
  },
  "1201": {
    "E2": {
      "name": "Knightmare (hard)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 3000,
      "tags": [
        "graphs",
        "interactive",
        "shortest paths"
      ]
    },
    "E1": {
      "name": "Knightmare (easy)",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "graphs",
        "interactive",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Treasure Hunting",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Maximum Median",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "binary search",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "B": {
      "name": "Zero Array",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Important Exam",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1200": {
    "F": {
      "name": "Graph Traveler",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "data structures",
        "dfs and similar",
        "dp",
        "graphs",
        "implementation",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Compress Words",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "hashing",
        "implementation",
        "string suffix structures",
        "strings"
      ]
    },
    "D": {
      "name": "White Lines",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "data structures",
        "dp",
        "implementation",
        "two pointers"
      ]
    },
    "C": {
      "name": "Round Corridor",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Block Adventure",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "A": {
      "name": "Hotelier",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "data structures",
        "implementation"
      ]
    }
  },
  "1199": {
    "B": {
      "name": "Water Lily",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "geometry",
        "math"
      ]
    },
    "A": {
      "name": "City Day",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "1198": {
    "F": {
      "name": "GCD Groups 2",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2900,
      "tags": [
        "greedy",
        "number theory",
        "probabilities"
      ]
    },
    "E": {
      "name": "Rectangle Painting 2",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2500,
      "tags": [
        "flows",
        "graph matchings",
        "graphs"
      ]
    },
    "D": {
      "name": "Rectangle Painting 1",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Matching vs  Independent Set",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "graphs",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Welfare State",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "sortings"
      ]
    },
    "A": {
      "name": "MP3",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "sortings",
        "two pointers"
      ]
    }
  },
  "1197": {
    "F": {
      "name": "Coloring Game",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "dp",
        "games",
        "matrices"
      ]
    },
    "E": {
      "name": "Culture Code",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "binary search",
        "combinatorics",
        "data structures",
        "dp",
        "shortest paths",
        "sortings"
      ]
    },
    "D": {
      "name": "Yet Another Subarray Problem",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "dp",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Array Splitting",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Pillars",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "DIY Wooden Ladder",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "greedy",
        "math",
        "sortings"
      ]
    }
  },
  "1196": {
    "F": {
      "name": "K-th Path",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "brute force",
        "constructive algorithms",
        "shortest paths",
        "sortings"
      ]
    },
    "E": {
      "name": "Connected Component on a Chessboard",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "D2": {
      "name": "RGB Substring (hard version)",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "data structures",
        "dp",
        "implementation",
        "two pointers"
      ]
    },
    "D1": {
      "name": "RGB Substring (easy version)",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "implementation"
      ]
    },
    "C": {
      "name": "Robot Breakout",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "implementation"
      ]
    },
    "B": {
      "name": "Odd Sum Segments",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Three Piles of Candies",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1195": {
    "F": {
      "name": "Geometers Anonymous Club",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "geometry",
        "math",
        "sortings"
      ]
    },
    "E": {
      "name": "OpenStreetMap",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "two pointers"
      ]
    },
    "D2": {
      "name": "Submarine in the Rybinsk Sea (hard edition)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "combinatorics",
        "math",
        "number theory"
      ]
    },
    "D1": {
      "name": "Submarine in the Rybinsk Sea (easy edition)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "combinatorics",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Basketball Exercise",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Sport Mafia",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "binary search",
        "brute force",
        "math"
      ]
    },
    "A": {
      "name": "Drinks Choosing",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1194": {
    "G": {
      "name": "Another Meme Problem",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "dp"
      ]
    },
    "F": {
      "name": "Crossword Expert",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "combinatorics",
        "dp",
        "number theory",
        "probabilities",
        "two pointers"
      ]
    },
    "E": {
      "name": "Count The Rectangles",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "bitmasks",
        "brute force",
        "data structures",
        "geometry",
        "sortings"
      ]
    },
    "D": {
      "name": "1-2-K Game",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "games",
        "math"
      ]
    },
    "C": {
      "name": "From S To T",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "B": {
      "name": "Yet Another Crosses Problem",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Remove a Progression",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1193": {
    "C": {
      "name": "Scissors and Tape",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "constructive algorithms",
        "geometry"
      ]
    },
    "B": {
      "name": "Magic Tree",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "data structures",
        "dp",
        "trees"
      ]
    },
    "A": {
      "name": "Amusement Park",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "dp",
        "math"
      ]
    }
  },
  "1192": {
    "C": {
      "name": "Cubeword",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "brute force",
        "dp",
        "meet-in-the-middle"
      ]
    },
    "B": {
      "name": "Dynamic Diameter",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "data structures",
        "dfs and similar",
        "divide and conquer",
        "trees"
      ]
    },
    "A": {
      "name": "Building Skyscrapers",
      "type": "PROGRAMMING",
      "tags": [
        "*special"
      ]
    }
  },
  "1191": {
    "B": {
      "name": "Tokitsukaze and Mahjong",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Tokitsukaze and Enhancement",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force"
      ]
    }
  },
  "1190": {
    "F": {
      "name": "Tokitsukaze and Powers",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3400,
      "tags": [
        "number theory",
        "probabilities"
      ]
    },
    "E": {
      "name": "Tokitsukaze and Explosion",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3100,
      "tags": [
        "binary search",
        "greedy"
      ]
    },
    "D": {
      "name": "Tokitsukaze and Strange Rectangle",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "data structures",
        "divide and conquer",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Tokitsukaze and Duel",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "games",
        "greedy"
      ]
    },
    "B": {
      "name": "Tokitsukaze, CSL and Stone Game",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "games"
      ]
    },
    "A": {
      "name": "Tokitsukaze and Discard Items",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "implementation",
        "two pointers"
      ]
    }
  },
  "1189": {
    "C": {
      "name": "Candies!",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "data structures",
        "dp",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Number Circle",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Keanu Reeves",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "strings"
      ]
    }
  },
  "1188": {
    "E": {
      "name": "Problem from Red Panda",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3300,
      "tags": [
        "combinatorics"
      ]
    },
    "D": {
      "name": "Make Equal",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3100,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Array Beauty",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2500,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Count Pairs",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2300,
      "tags": [
        "math",
        "matrices",
        "number theory",
        "two pointers"
      ]
    },
    "A2": {
      "name": "Add on a Tree: Revolution",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "implementation",
        "trees"
      ]
    },
    "A1": {
      "name": "Add on a Tree",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 1600,
      "tags": [
        "trees"
      ]
    }
  },
  "1187": {
    "G": {
      "name": "Gang Up",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "flows",
        "graphs"
      ]
    },
    "F": {
      "name": "Expected Square Beauty",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "dp",
        "math",
        "probabilities"
      ]
    },
    "E": {
      "name": "Tree Painting",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "D": {
      "name": "Subarray Sorting",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "data structures",
        "sortings"
      ]
    },
    "C": {
      "name": "Vasya And Array",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Letters Shop",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "binary search",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Stickers and Toys",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "math"
      ]
    }
  },
  "1186": {
    "F": {
      "name": "Vus the Cossack and a Graph",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2400,
      "tags": [
        "dfs and similar",
        "graphs",
        "greedy",
        "implementation"
      ]
    },
    "E": {
      "name": "Vus the Cossack and a Field",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "divide and conquer",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Vus the Cossack and Numbers",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Vus the Cossack and Strings",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Vus the Cossack and a Contest",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1185": {
    "G2": {
      "name": "Playlist for Polycarp (hard version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2600,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "G1": {
      "name": "Playlist for Polycarp (easy version)",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2100,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dp"
      ]
    },
    "F": {
      "name": "Two Pizzas",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2100,
      "tags": [
        "bitmasks",
        "brute force"
      ]
    },
    "E": {
      "name": "Polycarp and Snakes",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "D": {
      "name": "Extra Element",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "C2": {
      "name": "Exam in BerSU (hard version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "data structures",
        "greedy",
        "math"
      ]
    },
    "C1": {
      "name": "Exam in BerSU (easy version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Email from Polycarp",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Ropewalkers",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1184": {
    "E3": {
      "name": "Daleks' Invasion (hard)",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "data structures",
        "dsu",
        "graphs",
        "trees"
      ]
    },
    "E2": {
      "name": "Daleks' Invasion (medium)",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dfs and similar",
        "graphs",
        "shortest paths",
        "trees"
      ]
    },
    "E1": {
      "name": "Daleks' Invasion (easy)",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "graphs",
        "trees"
      ]
    },
    "D2": {
      "name": "Parallel Universes (Hard)",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": [
        "math",
        "matrices"
      ]
    },
    "D1": {
      "name": "Parallel Universes (Easy)",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    },
    "C3": {
      "name": "Heidi and the Turing Test (Hard)",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": []
    },
    "C2": {
      "name": "Heidi and the Turing Test (Medium)",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "data structures"
      ]
    },
    "C1": {
      "name": "Heidi and the Turing Test (Easy)",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    },
    "B3": {
      "name": "The Doctor Meets Vader (Hard)",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "flows",
        "shortest paths"
      ]
    },
    "B2": {
      "name": "The Doctor Meets Vader (Medium)",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "flows",
        "graph matchings",
        "graphs",
        "shortest paths",
        "sortings"
      ]
    },
    "B1": {
      "name": "The Doctor Meets Vader (Easy)",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "binary search",
        "sortings"
      ]
    },
    "A3": {
      "name": "Heidi Learns Hashing (Hard)",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": [
        "fft",
        "math",
        "number theory"
      ]
    },
    "A2": {
      "name": "Heidi Learns Hashing (Medium)",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "brute force",
        "number theory"
      ]
    },
    "A1": {
      "name": "Heidi Learns Hashing (Easy)",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    }
  },
  "1183": {
    "H": {
      "name": "Subsequences (hard version)",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "dp",
        "strings"
      ]
    },
    "G": {
      "name": "Candy Box (hard version)",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "F": {
      "name": "Topforces Strikes Back",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "brute force",
        "math",
        "sortings"
      ]
    },
    "E": {
      "name": "Subsequences (easy version)",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "dp",
        "graphs",
        "implementation",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Candy Box (easy version)",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Computer Game",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "binary search",
        "math"
      ]
    },
    "B": {
      "name": "Equalize Prices",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Nearest Interesting Number",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1182": {
    "F": {
      "name": "Maximum Sine",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2700,
      "tags": [
        "binary search",
        "data structures",
        "number theory"
      ]
    },
    "E": {
      "name": "Product Oriented Recurrence",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "dp",
        "math",
        "matrices",
        "number theory"
      ]
    },
    "D": {
      "name": "Complete Mirror",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "hashing",
        "implementation",
        "trees"
      ]
    },
    "C": {
      "name": "Beautiful Lyrics",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1700,
      "tags": [
        "data structures",
        "greedy",
        "strings"
      ]
    },
    "B": {
      "name": "Plus from Picture",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1300,
      "tags": [
        "dfs and similar",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Filling Shapes",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "dp",
        "math"
      ]
    }
  },
  "1181": {
    "E2": {
      "name": "A Story of One Country (Hard)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 3000,
      "tags": [
        "brute force",
        "greedy",
        "sortings"
      ]
    },
    "E1": {
      "name": "A Story of One Country (Easy)",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "divide and conquer",
        "sortings"
      ]
    },
    "D": {
      "name": "Irrigation",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "data structures",
        "implementation",
        "sortings",
        "trees",
        "two pointers"
      ]
    },
    "C": {
      "name": "Flag",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "implementation"
      ]
    },
    "B": {
      "name": "Split a Number",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Chunga-Changa",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1180": {
    "B": {
      "name": "Nick and Array",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Alex and a Rhombus",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "dp",
        "implementation",
        "math"
      ]
    }
  },
  "1179": {
    "E": {
      "name": "Alesya and Discrete Math",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3200,
      "tags": [
        "divide and conquer",
        "interactive"
      ]
    },
    "D": {
      "name": "Fedor Runs for President",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "dp",
        "trees"
      ]
    },
    "C": {
      "name": "Serge and Dining Room",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "data structures",
        "graph matchings",
        "greedy",
        "implementation",
        "math",
        "trees"
      ]
    },
    "B": {
      "name": "Tolik and His Uncle",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "Valeriy and Deque",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "data structures",
        "implementation"
      ]
    }
  },
  "1178": {
    "H": {
      "name": "Stock Exchange",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3500,
      "tags": [
        "binary search",
        "flows",
        "graphs"
      ]
    },
    "G": {
      "name": "The Awesomest Vertex",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "dfs and similar"
      ]
    },
    "F2": {
      "name": "Long Colorful Strip",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2600,
      "tags": [
        "dp"
      ]
    },
    "F1": {
      "name": "Short Colorful Strip",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "dp"
      ]
    },
    "E": {
      "name": "Archaeology",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "strings"
      ]
    },
    "D": {
      "name": "Prime Graph",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Tiles",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1300,
      "tags": [
        "combinatorics",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "WOW Factor",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1300,
      "tags": [
        "dp",
        "strings"
      ]
    },
    "A": {
      "name": "Prime Minister",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy"
      ]
    }
  },
  "1177": {
    "B": {
      "name": "Digits Sequence (Hard Edition)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "divide and conquer",
        "implementation"
      ]
    },
    "A": {
      "name": "Digits Sequence (Easy Edition)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "1176": {
    "F": {
      "name": "Destroy it!",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dp",
        "implementation",
        "sortings"
      ]
    },
    "E": {
      "name": "Cover it!",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "shortest paths",
        "trees"
      ]
    },
    "D": {
      "name": "Recover it!",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "dfs and similar",
        "graphs",
        "greedy",
        "number theory",
        "sortings"
      ]
    },
    "C": {
      "name": "Lose it!",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Merge it!",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Divide it!",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    }
  },
  "1175": {
    "G": {
      "name": "Yet Another Partiton Problem",
      "type": "PROGRAMMING",
      "rating": 3000,
      "tags": [
        "data structures",
        "divide and conquer",
        "dp",
        "geometry",
        "two pointers"
      ]
    },
    "F": {
      "name": "The Number of Subpermutations",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "brute force",
        "data structures",
        "divide and conquer",
        "hashing",
        "math"
      ]
    },
    "E": {
      "name": "Minimal Segment Cover",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "data structures",
        "dfs and similar",
        "divide and conquer",
        "dp",
        "greedy",
        "implementation",
        "trees"
      ]
    },
    "D": {
      "name": "Array Splitting",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Electrification",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "binary search",
        "brute force",
        "greedy"
      ]
    },
    "B": {
      "name": "Catch Overflow!",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "data structures",
        "expression parsing",
        "implementation"
      ]
    },
    "A": {
      "name": "From Hero to Zero",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1174": {
    "F": {
      "name": "Ehab and the Big Finale",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "divide and conquer",
        "graphs",
        "implementation",
        "interactive",
        "trees"
      ]
    },
    "E": {
      "name": "Ehab and the Expected GCD Problem",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Ehab and the Expected XOR Problem",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1900,
      "tags": [
        "bitmasks",
        "constructive algorithms"
      ]
    },
    "C": {
      "name": "Ehab and a Special Coloring Problem",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "number theory"
      ]
    },
    "B": {
      "name": "Ehab Is an Odd Person",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "sortings"
      ]
    },
    "A": {
      "name": "Ehab Fails to Be Thanos",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "greedy",
        "sortings"
      ]
    }
  },
  "1173": {
    "B": {
      "name": "Nauuo and Chess",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "Nauuo and Votes",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy"
      ]
    }
  },
  "1172": {
    "F": {
      "name": "Nauuo and Bug",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3300,
      "tags": [
        "data structures"
      ]
    },
    "E": {
      "name": "Nauuo and ODT",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3300,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Nauuo and Portals",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2900,
      "tags": [
        "constructive algorithms"
      ]
    },
    "C2": {
      "name": "Nauuo and Pictures (hard version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2600,
      "tags": [
        "dp",
        "probabilities"
      ]
    },
    "C1": {
      "name": "Nauuo and Pictures (easy version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2300,
      "tags": [
        "dp",
        "probabilities"
      ]
    },
    "B": {
      "name": "Nauuo and Circle",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1900,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "A": {
      "name": "Nauuo and Cards",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "1170": {
    "I": {
      "name": "Good Subsets",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "dp"
      ]
    },
    "H": {
      "name": "Longest Saw",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "constructive algorithms"
      ]
    },
    "G": {
      "name": "Graph Decomposition",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "graphs"
      ]
    },
    "F": {
      "name": "Wheels",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "binary search",
        "greedy"
      ]
    },
    "E": {
      "name": "Sliding Doors",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "binary search"
      ]
    },
    "D": {
      "name": "Decoding of Integer Sequences",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "data structures",
        "implementation"
      ]
    },
    "C": {
      "name": "Minus and Minus Give Plus",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "implementation",
        "strings"
      ]
    },
    "B": {
      "name": "Bad Days",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "A": {
      "name": "Three Integers Again",
      "type": "PROGRAMMING",
      "tags": [
        "*special",
        "math"
      ]
    }
  },
  "1169": {
    "B": {
      "name": "Pairs",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "graphs",
        "implementation"
      ]
    },
    "A": {
      "name": "Circle Metro",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1168": {
    "E": {
      "name": "Xor Permutations",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "D": {
      "name": "Anagram Paths",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3000,
      "tags": [
        "dp",
        "implementation",
        "trees"
      ]
    },
    "C": {
      "name": "And Reachability",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "B": {
      "name": "Good Triple",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "two pointers"
      ]
    },
    "A": {
      "name": "Increasing by Modulo",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "greedy"
      ]
    }
  },
  "1167": {
    "G": {
      "name": "Low Budget Inception",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": [
        "brute force",
        "geometry"
      ]
    },
    "F": {
      "name": "Scalar Queries",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "combinatorics",
        "data structures",
        "math",
        "sortings"
      ]
    },
    "E": {
      "name": "Range Deleting",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "binary search",
        "combinatorics",
        "data structures",
        "two pointers"
      ]
    },
    "D": {
      "name": "Bicolored RBS",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "C": {
      "name": "News Distribution",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "B": {
      "name": "Lost Numbers",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "brute force",
        "divide and conquer",
        "interactive",
        "math"
      ]
    },
    "A": {
      "name": "Telephone Number",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "greedy",
        "strings"
      ]
    }
  },
  "1166": {
    "F": {
      "name": "Vicky's Delivery Service",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "dsu",
        "graphs",
        "hashing"
      ]
    },
    "E": {
      "name": "The LCMs Must be Large",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Cute Sequences",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "brute force",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "A Tale of Two Lands",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "sortings",
        "two pointers"
      ]
    },
    "B": {
      "name": "All the Vowels Please",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Silent Classroom",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "combinatorics",
        "greedy"
      ]
    }
  },
  "1165": {
    "F2": {
      "name": "Microtransactions (hard version)",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "binary search",
        "greedy",
        "implementation"
      ]
    },
    "F1": {
      "name": "Microtransactions (easy version)",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "binary search",
        "greedy"
      ]
    },
    "E": {
      "name": "Two Arrays and Sum of Functions",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "greedy",
        "math",
        "sortings"
      ]
    },
    "D": {
      "name": "Almost All Divisors",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Good String",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Polycarp Training",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Remainder",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1163": {
    "F": {
      "name": "Indecisive Taxi Fee",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "graphs",
        "shortest paths"
      ]
    },
    "E": {
      "name": "Magical Permutation",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "data structures",
        "graphs",
        "math"
      ]
    },
    "D": {
      "name": "Mysterious Code",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2100,
      "tags": [
        "dp",
        "strings"
      ]
    },
    "C2": {
      "name": "Power Transmission (Hard Edition)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "geometry",
        "implementation",
        "math"
      ]
    },
    "C1": {
      "name": "Power Transmission (Easy Edition)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "geometry"
      ]
    },
    "B2": {
      "name": "Cat Party (Hard Edition)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "B1": {
      "name": "Cat Party (Easy Edition)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1500,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "A": {
      "name": "Eating Soup",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "1162": {
    "B": {
      "name": "Double Matrix",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "greedy"
      ]
    },
    "A": {
      "name": "Zoning Restrictions Again",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1160": {
    "A2": {
      "name": "Collaboration",
      "type": "PROGRAMMING",
      "tags": [
        "*special"
      ]
    }
  },
  "1159": {
    "B": {
      "name": "Expansion coefficient of the array",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1300,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "A pile of stones",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1158": {
    "F": {
      "name": "Density of subarrays",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3500,
      "tags": [
        "dp",
        "math"
      ]
    },
    "E": {
      "name": "Strange device",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3400,
      "tags": [
        "binary search",
        "interactive",
        "math",
        "trees"
      ]
    },
    "D": {
      "name": "Winding polygonal line",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2600,
      "tags": [
        "constructive algorithms",
        "geometry",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Permutation recovery",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "data structures",
        "dfs and similar",
        "graphs",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "B": {
      "name": "The minimal unique substring",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "math",
        "strings"
      ]
    },
    "A": {
      "name": "The Party and Sweets",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "implementation",
        "math",
        "sortings",
        "two pointers"
      ]
    }
  },
  "1157": {
    "G": {
      "name": "Inverse of Rows and Columns",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "brute force",
        "constructive algorithms"
      ]
    },
    "F": {
      "name": "Maximum Balanced Circle",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy",
        "two pointers"
      ]
    },
    "E": {
      "name": "Minimum Array",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "binary search",
        "data structures",
        "greedy"
      ]
    },
    "D": {
      "name": "N Problems During K Days",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "C2": {
      "name": "Increasing Subsequence (hard version)",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "greedy"
      ]
    },
    "C1": {
      "name": "Increasing Subsequence (easy version)",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Long Number",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Reachable Numbers",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    }
  },
  "1156": {
    "G": {
      "name": "Optimizer",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "graphs",
        "greedy",
        "hashing",
        "implementation"
      ]
    },
    "F": {
      "name": "Card Bag",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "dp",
        "math",
        "probabilities"
      ]
    },
    "E": {
      "name": "Special Segments of Permutation",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "data structures",
        "divide and conquer",
        "dsu",
        "two pointers"
      ]
    },
    "D": {
      "name": "0-1-Tree",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "divide and conquer",
        "dp",
        "dsu",
        "trees"
      ]
    },
    "C": {
      "name": "Match Points",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "binary search",
        "greedy",
        "sortings",
        "ternary search",
        "two pointers"
      ]
    },
    "B": {
      "name": "Ugly Pairs",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "dfs and similar",
        "greedy",
        "implementation",
        "sortings",
        "strings"
      ]
    },
    "A": {
      "name": "Inscribed Figures",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "geometry"
      ]
    }
  },
  "1155": {
    "F": {
      "name": "Delivery Oligopoly",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "brute force",
        "dp",
        "graphs"
      ]
    },
    "E": {
      "name": "Guess the Root",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "brute force",
        "interactive",
        "math"
      ]
    },
    "D": {
      "name": "Beautiful Array",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "brute force",
        "data structures",
        "divide and conquer",
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Alarm Clocks Everywhere",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Game with Telephone Numbers",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "games",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Reverse a Substring",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation",
        "sortings",
        "strings"
      ]
    }
  },
  "1154": {
    "G": {
      "name": "Minimum Possible LCM",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "brute force",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "F": {
      "name": "Shovels Shop",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "E": {
      "name": "Two Teams",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "data structures",
        "implementation",
        "sortings"
      ]
    },
    "D": {
      "name": "Walking Robot",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "greedy"
      ]
    },
    "C": {
      "name": "Gourmet Cat",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Make Them Equal",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Restoring Three Numbers",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1153": {
    "F": {
      "name": "Serval and Bonus Problem",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2600,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "probabilities"
      ]
    },
    "E": {
      "name": "Serval and Snake",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "brute force",
        "interactive"
      ]
    },
    "D": {
      "name": "Serval and Rooted Tree",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "C": {
      "name": "Serval and Parenthesis Sequence",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "greedy",
        "strings"
      ]
    },
    "B": {
      "name": "Serval and Toy Bricks",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "Serval and Bus",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "math"
      ]
    }
  },
  "1152": {
    "F2": {
      "name": "Neko Rules the Catniverse (Large Version)",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 3000,
      "tags": [
        "bitmasks",
        "dp",
        "matrices"
      ]
    },
    "F1": {
      "name": "Neko Rules the Catniverse (Small Version)",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2800,
      "tags": [
        "bitmasks",
        "dp",
        "matrices"
      ]
    },
    "E": {
      "name": "Neko and Flashback",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs"
      ]
    },
    "D": {
      "name": "Neko and Aki's Prank",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "dp",
        "greedy",
        "trees"
      ]
    },
    "C": {
      "name": "Neko does Maths",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Neko Performs Cat Furrier Transform",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "dfs and similar",
        "math"
      ]
    },
    "A": {
      "name": "Neko Finds Grapes",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "1151": {
    "F": {
      "name": "Sonya and Informatics",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2300,
      "tags": [
        "combinatorics",
        "dp",
        "matrices",
        "probabilities"
      ]
    },
    "E": {
      "name": "Number of Components",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2100,
      "tags": [
        "combinatorics",
        "data structures",
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "Stas and the Queue at the Buffet",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1600,
      "tags": [
        "greedy",
        "math",
        "sortings"
      ]
    },
    "C": {
      "name": "Problem for Nazar",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "B": {
      "name": "Dima and a Bad XOR",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1600,
      "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "dp"
      ]
    },
    "A": {
      "name": "Maxim and Biology",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "strings"
      ]
    }
  },
  "1150": {
    "B": {
      "name": "Tiling Challenge",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Stock Arbitraging",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "1149": {
    "E": {
      "name": "Election Promises",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3200,
      "tags": [
        "games",
        "graphs"
      ]
    },
    "D": {
      "name": "Abandoning Roads",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "brute force",
        "dp",
        "graphs",
        "greedy"
      ]
    },
    "C": {
      "name": "Tree Generator\u2122",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "implementation",
        "trees"
      ]
    },
    "B": {
      "name": "Three Religions",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2200,
      "tags": [
        "dp",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Prefix Sum Primes",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "number theory"
      ]
    }
  },
  "1148": {
    "H": {
      "name": "Holy Diver ",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3500,
      "tags": [
        "data structures"
      ]
    },
    "G": {
      "name": "Gold Experience",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3300,
      "tags": [
        "constructive algorithms",
        "graphs",
        "math",
        "number theory",
        "probabilities"
      ]
    },
    "F": {
      "name": "Foo Fighters",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "bitmasks",
        "constructive algorithms"
      ]
    },
    "E": {
      "name": "Earth Wind and Fire",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "sortings",
        "two pointers"
      ]
    },
    "D": {
      "name": "Dirty Deeds Done Dirt Cheap",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1800,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Crazy Diamond",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "sortings"
      ]
    },
    "B": {
      "name": "Born This Way",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "brute force",
        "two pointers"
      ]
    },
    "A": {
      "name": "Another One Bites The Dust",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy"
      ]
    }
  },
  "1147": {
    "F": {
      "name": "Zigzag Game",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3500,
      "tags": [
        "games",
        "interactive"
      ]
    },
    "E": {
      "name": "Rainbow Coins",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "interactive"
      ]
    },
    "D": {
      "name": "Palindrome XOR",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "C": {
      "name": "Thanos Nim",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "games"
      ]
    },
    "B": {
      "name": "Chladni Figure",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "strings"
      ]
    },
    "A": {
      "name": "Hide and Seek",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "graphs"
      ]
    }
  },
  "1146": {
    "H": {
      "name": "Satanic Panic",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 2900,
      "tags": [
        "dp",
        "geometry"
      ]
    },
    "G": {
      "name": "Zoning Restrictions",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 2700,
      "tags": [
        "dp",
        "flows",
        "graphs"
      ]
    },
    "F": {
      "name": "Leaf Partition",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 2500,
      "tags": [
        "dp",
        "trees"
      ]
    },
    "E": {
      "name": "Hot is Cold",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "data structures",
        "divide and conquer",
        "implementation"
      ]
    },
    "D": {
      "name": "Frog Jumping",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2100,
      "tags": [
        "dfs and similar",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Tree Diameter",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "bitmasks",
        "graphs",
        "interactive"
      ]
    },
    "B": {
      "name": "Hate \"A\"",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Love \"A\"",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1145": {
    "G": {
      "name": "AI Takeover",
      "type": "PROGRAMMING",
      "tags": [
        "interactive"
      ]
    },
    "F": {
      "name": "Neat Words",
      "type": "PROGRAMMING",
      "tags": []
    },
    "E": {
      "name": "Fourier Doodles",
      "type": "PROGRAMMING",
      "tags": []
    },
    "D": {
      "name": "Pigeon d'Or",
      "type": "PROGRAMMING",
      "tags": [
        "implementation"
      ]
    },
    "C": {
      "name": "Mystery Circuit",
      "type": "PROGRAMMING",
      "tags": [
        "bitmasks",
        "brute force"
      ]
    },
    "B": {
      "name": "Kanban Numbers",
      "type": "PROGRAMMING",
      "tags": [
        "brute force"
      ]
    },
    "A": {
      "name": "Thanos Sort",
      "type": "PROGRAMMING",
      "tags": [
        "implementation"
      ]
    }
  },
  "1144": {
    "G": {
      "name": "Two Merged Sequences",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "F": {
      "name": "Graph Without Long Directed Paths",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "E": {
      "name": "Median String",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "bitmasks",
        "math",
        "number theory",
        "strings"
      ]
    },
    "D": {
      "name": "Equalize Them All",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "C": {
      "name": "Two Shuffled Sequences",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "sortings"
      ]
    },
    "B": {
      "name": "Parity Alternated Deletions",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Diverse Strings",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1143": {
    "C": {
      "name": "Queen",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "dfs and similar",
        "trees"
      ]
    },
    "B": {
      "name": "Nirvana",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "The Doors",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1142": {
    "E": {
      "name": "Pink Floyd",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3200,
      "tags": [
        "graphs",
        "interactive"
      ]
    },
    "D": {
      "name": "Foreigner",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2800,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "U2",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "geometry"
      ]
    },
    "B": {
      "name": "Lynyrd Skynyrd",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "math",
        "trees"
      ]
    },
    "A": {
      "name": "The Beatles",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "math"
      ]
    }
  },
  "1141": {
    "G": {
      "name": "Privatization of Roads in Treeland",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "F2": {
      "name": "Same Sum Blocks (Hard)",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "F1": {
      "name": "Same Sum Blocks (Easy)",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "greedy"
      ]
    },
    "E": {
      "name": "Superhero Battle",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "math"
      ]
    },
    "D": {
      "name": "Colored Boots",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Polycarp Restores Permutation",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "math"
      ]
    },
    "B": {
      "name": "Maximal Continuous Rest",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Game 23",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1140": {
    "G": {
      "name": "Double Tree",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "data structures",
        "divide and conquer",
        "shortest paths",
        "trees"
      ]
    },
    "F": {
      "name": "Extending Set of Points",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "data structures",
        "divide and conquer",
        "dsu"
      ]
    },
    "E": {
      "name": "Palindrome-less Arrays",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "combinatorics",
        "divide and conquer",
        "dp"
      ]
    },
    "D": {
      "name": "Minimum Triangulation",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "dp",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Playlist",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "brute force",
        "data structures",
        "sortings"
      ]
    },
    "B": {
      "name": "Good String",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Detective Book",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "1139": {
    "F": {
      "name": "Dish Shopping",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "divide and conquer"
      ]
    },
    "E": {
      "name": "Maximize Mex",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "flows",
        "graph matchings",
        "graphs"
      ]
    },
    "D": {
      "name": "Steps to One",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "dp",
        "math",
        "number theory",
        "probabilities"
      ]
    },
    "C": {
      "name": "Edgy Trees",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1500,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "math",
        "trees"
      ]
    },
    "B": {
      "name": "Chocolates",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Even Substrings",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1138": {
    "B": {
      "name": "Circus",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "greedy",
        "math",
        "strings"
      ]
    },
    "A": {
      "name": "Sushi for Two",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "binary search",
        "greedy",
        "implementation"
      ]
    }
  },
  "1137": {
    "F": {
      "name": "Matches Are Not a Child's Play ",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3400,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "E": {
      "name": "Train Car Selection",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "D": {
      "name": "Cooperative Game",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "interactive",
        "number theory"
      ]
    },
    "C": {
      "name": "Museums Tour",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "dp",
        "graphs",
        "implementation"
      ]
    },
    "B": {
      "name": "Camp Schedule",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1600,
      "tags": [
        "greedy",
        "hashing",
        "strings"
      ]
    },
    "A": {
      "name": "Skyscrapers",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "implementation",
        "sortings"
      ]
    }
  },
  "1136": {
    "E": {
      "name": "Nastya Hasn't Written a Legend",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "D": {
      "name": "Nastya Is Buying Lunch",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "greedy"
      ]
    },
    "C": {
      "name": "Nastya Is Transposing Matrices",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "sortings"
      ]
    },
    "B": {
      "name": "Nastya Is Playing Computer Games",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Nastya Is Reading a Book",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1133": {
    "F2": {
      "name": "Spanning Tree with One Fixed Degree",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy"
      ]
    },
    "F1": {
      "name": "Spanning Tree with Maximum Degree",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "graphs"
      ]
    },
    "E": {
      "name": "K Balanced Teams",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "dp",
        "sortings",
        "two pointers"
      ]
    },
    "D": {
      "name": "Zero Quantity Maximization",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "hashing",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Balanced Team",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "sortings",
        "two pointers"
      ]
    },
    "B": {
      "name": "Preparation for International Women's Day",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Middle of the Contest",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "1132": {
    "G": {
      "name": "Greedy Subsequences",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "data structures",
        "dp",
        "trees"
      ]
    },
    "F": {
      "name": "Clear the String",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "dp"
      ]
    },
    "E": {
      "name": "Knapsack",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "dfs and similar",
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Stressful Training",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "binary search",
        "greedy"
      ]
    },
    "C": {
      "name": "Painting the Fence",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "brute force"
      ]
    },
    "B": {
      "name": "Discounts",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Regular Bracket Sequence",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "1131": {
    "G": {
      "name": "Most Dangerous Shark",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "dp",
        "two pointers"
      ]
    },
    "F": {
      "name": "Asya And Kittens",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "dsu"
      ]
    },
    "E": {
      "name": "String Multiplication",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "dp",
        "greedy",
        "strings"
      ]
    },
    "D": {
      "name": "Gourmet choice",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "dp",
        "dsu",
        "graphs",
        "greedy"
      ]
    },
    "C": {
      "name": "Birthday",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1200,
      "tags": [
        "binary search",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Draw!",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Sea Battle",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1130": {
    "C": {
      "name": "Connect",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "dfs and similar",
        "dsu"
      ]
    },
    "B": {
      "name": "Two Cakes",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Be Positive",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1129": {
    "E": {
      "name": "Legendary Tree",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3100,
      "tags": [
        "binary search",
        "interactive",
        "trees"
      ]
    },
    "D": {
      "name": "Isolation",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2900,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "C": {
      "name": "Morse Code",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "hashing",
        "sortings",
        "string suffix structures",
        "strings"
      ]
    },
    "B": {
      "name": "Wrong Answer",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms"
      ]
    },
    "A2": {
      "name": "Toy Train",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "greedy"
      ]
    },
    "A1": {
      "name": "Toy Train (Simplified)",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "greedy"
      ]
    }
  },
  "1121": {
    "C": {
      "name": "System Testing",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    },
    "B": {
      "name": "Mike and Children",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Technogoblet of Fire",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "implementation",
        "sortings"
      ]
    }
  },
  "1120": {
    "F": {
      "name": "Secret Letters",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3100,
      "tags": [
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "E": {
      "name": "The very same Munchhausen",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "brute force"
      ]
    },
    "D": {
      "name": "Power Tree",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "dfs and similar",
        "dp",
        "dsu",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "C": {
      "name": "Compress String",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "dp",
        "strings"
      ]
    },
    "B": {
      "name": "Once in a casino",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Diana and Liana",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1900,
      "tags": [
        "greedy",
        "implementation",
        "two pointers"
      ]
    }
  },
  "1119": {
    "H": {
      "name": "Triple",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 3200,
      "tags": [
        "fft",
        "math"
      ]
    },
    "G": {
      "name": "Get Ready for the Battle",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3100,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "F": {
      "name": "Niyaz and Small Degrees",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3400,
      "tags": [
        "data structures",
        "dp",
        "trees"
      ]
    },
    "E": {
      "name": "Pavel and Triangles",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "dp",
        "fft",
        "greedy",
        "ternary search"
      ]
    },
    "D": {
      "name": "Frets On Fire",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "sortings"
      ]
    },
    "C": {
      "name": "Ramesses and Corner Inversion",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Alyona and a Narrow Fridge",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "binary search",
        "flows",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Ilya and a Colorful Walk",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "1118": {
    "F2": {
      "name": "Tree Cutting (Hard Version)",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "F1": {
      "name": "Tree Cutting (Easy Version)",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "dfs and similar",
        "trees"
      ]
    },
    "E": {
      "name": "Yet Another Ball Problem",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "D2": {
      "name": "Coffee and Coursework (Hard Version)",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "binary search",
        "greedy"
      ]
    },
    "D1": {
      "name": "Coffee and Coursework (Easy version)",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "brute force",
        "greedy"
      ]
    },
    "C": {
      "name": "Palindromic Matrix",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "B": {
      "name": "Tanya and Candies",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Water Buying",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1117": {
    "G": {
      "name": "Recursive Queries",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "data structures"
      ]
    },
    "F": {
      "name": "Crisp String",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "E": {
      "name": "Decypher the String",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "bitmasks",
        "chinese remainder theorem",
        "constructive algorithms",
        "interactive",
        "math"
      ]
    },
    "D": {
      "name": "Magic Gems",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dp",
        "math",
        "matrices"
      ]
    },
    "C": {
      "name": "Magic Ship",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search"
      ]
    },
    "B": {
      "name": "Emotes",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "greedy",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Best Subsegment",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1116": {
    "D6": {
      "name": "Hessenberg matrix",
      "type": "PROGRAMMING",
      "tags": []
    },
    "D5": {
      "name": "Creeper",
      "type": "PROGRAMMING",
      "tags": []
    },
    "D4": {
      "name": "TIE fighter",
      "type": "PROGRAMMING",
      "tags": []
    },
    "D3": {
      "name": "X-wing fighter",
      "type": "PROGRAMMING",
      "tags": []
    },
    "D2": {
      "name": "Pattern of increasing blocks",
      "type": "PROGRAMMING",
      "tags": []
    },
    "D1": {
      "name": "Block diagonal matrix",
      "type": "PROGRAMMING",
      "tags": []
    },
    "C3": {
      "name": "``Is the number of ones divisible by 3?'' oracle",
      "type": "PROGRAMMING",
      "tags": []
    },
    "C2": {
      "name": "``Is the bit string periodic?'' oracle",
      "type": "PROGRAMMING",
      "tags": []
    },
    "C1": {
      "name": "Alternating bits oracle",
      "type": "PROGRAMMING",
      "tags": []
    },
    "B2": {
      "name": "Not A, not B or not C?",
      "type": "PROGRAMMING",
      "tags": []
    },
    "B1": {
      "name": "Distinguish three-qubit states",
      "type": "PROGRAMMING",
      "tags": []
    },
    "A2": {
      "name": "Generate equal superposition of four basis states",
      "type": "PROGRAMMING",
      "tags": []
    },
    "A1": {
      "name": "Generate state |00\u27e9 + |01\u27e9 + |10\u27e9",
      "type": "PROGRAMMING",
      "tags": []
    }
  },
  "1115": {
    "U3": {
      "name": "Block unitary",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "*special"
      ]
    },
    "U2": {
      "name": "Chessboard unitary",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "*special"
      ]
    },
    "U1": {
      "name": "Anti-diagonal unitary",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "*special"
      ]
    },
    "G3": {
      "name": "Palindrome checker oracle",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "*special"
      ]
    },
    "G2": {
      "name": "OR oracle",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "*special"
      ]
    },
    "G1": {
      "name": "AND oracle",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "*special"
      ]
    }
  },
  "1114": {
    "F": {
      "name": "Please, another Queries on Array?",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "data structures",
        "divide and conquer",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Arithmetic Progression",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "interactive",
        "number theory",
        "probabilities"
      ]
    },
    "D": {
      "name": "Flood Fill",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Trailing Loves (or L'oeufs?)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "implementation",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Yet Another Array Partitioning Task",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Got Any Grapes?",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    }
  },
  "1113": {
    "B": {
      "name": "Sasha and Magnetic Machines",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "number theory"
      ]
    },
    "A": {
      "name": "Sasha and His Trip",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "dp",
        "greedy",
        "math"
      ]
    }
  },
  "1111": {
    "E": {
      "name": "Tree",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
      ]
    },
    "D": {
      "name": "Destroy the Colony",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "C": {
      "name": "Creative Snap",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "brute force",
        "divide and conquer",
        "math"
      ]
    },
    "B": {
      "name": "Average Superhero Gang Power ",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Superhero Transformation",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1110": {
    "H": {
      "name": "Modest Substrings",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3500,
      "tags": [
        "dp",
        "strings"
      ]
    },
    "G": {
      "name": "Tree-Tac-Toe ",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3100,
      "tags": [
        "constructive algorithms",
        "games",
        "trees"
      ]
    },
    "F": {
      "name": "Nearest Leaf",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "E": {
      "name": "Magic Stones",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "math",
        "sortings"
      ]
    },
    "D": {
      "name": "Jongmah",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Meaningless Operations",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Tape",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Parity",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "math"
      ]
    }
  },
  "1109": {
    "F": {
      "name": "Sasha and Algorithm of Silence's Sounds",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3200,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "E": {
      "name": "Sasha and a Very Easy Test",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "number theory"
      ]
    },
    "D": {
      "name": "Sasha and Interesting Fact from Graph Theory",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2400,
      "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "math",
        "trees"
      ]
    },
    "C": {
      "name": "Sasha and a Patient Friend",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2800,
      "tags": [
        "binary search",
        "data structures",
        "implementation"
      ]
    },
    "B": {
      "name": "Sasha and One More Name",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "hashing",
        "strings"
      ]
    },
    "A": {
      "name": "Sasha and a Bit of Relax",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "dp",
        "implementation"
      ]
    }
  },
  "1108": {
    "F": {
      "name": "MST Unification",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "binary search",
        "dsu",
        "graphs",
        "greedy"
      ]
    },
    "E2": {
      "name": "Array and Segments (Hard version)",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "E1": {
      "name": "Array and Segments (Easy version)",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    },
    "D": {
      "name": "Diverse Garland",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Nice Garland",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "brute force",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Divisors of Two Integers",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "brute force",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Two distinct points",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1107": {
    "G": {
      "name": "Vasya and Maximum Profit",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "dp",
        "dsu"
      ]
    },
    "F": {
      "name": "Vasya and Endless Credits",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "dp",
        "flows",
        "graph matchings",
        "graphs",
        "sortings"
      ]
    },
    "E": {
      "name": "Vasya and Binary String",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "dp"
      ]
    },
    "D": {
      "name": "Compression",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "dp",
        "implementation",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Brutality",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "B": {
      "name": "Digital root",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Digits Sequence Dividing",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "greedy",
        "strings"
      ]
    }
  },
  "1106": {
    "F": {
      "name": "Lunar New Year and a Recursive Sequence",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2400,
      "tags": [
        "math",
        "matrices",
        "number theory"
      ]
    },
    "E": {
      "name": "Lunar New Year and Red Envelopes",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "D": {
      "name": "Lunar New Year and a Wander",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "greedy",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Lunar New Year and Number Division",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 900,
      "tags": [
        "greedy",
        "implementation",
        "math",
        "sortings"
      ]
    },
    "B": {
      "name": "Lunar New Year and Food Ordering",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "A": {
      "name": "Lunar New Year and Cross Counting",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1105": {
    "E": {
      "name": "Helping Hiasat ",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "meet-in-the-middle"
      ]
    },
    "D": {
      "name": "Kilani and the Game",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "dfs and similar",
        "graphs",
        "implementation",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Ayoub and Lost Array",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "B": {
      "name": "Zuhair and Strings",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Salem and Sticks ",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "1104": {
    "B": {
      "name": "Game with string",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "data structures",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Splitting into digits",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "implementation",
        "math"
      ]
    }
  },
  "1103": {
    "E": {
      "name": "Radix sum",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3400,
      "tags": [
        "fft",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Professional layer",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3100,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "C": {
      "name": "Johnny Solving",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "math"
      ]
    },
    "B": {
      "name": "Game with modulo",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "constructive algorithms",
        "interactive"
      ]
    },
    "A": {
      "name": "Grid game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "1102": {
    "F": {
      "name": "Elongated Matrix",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "dp",
        "graphs"
      ]
    },
    "E": {
      "name": "Monotonic Renumeration",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "combinatorics",
        "sortings"
      ]
    },
    "D": {
      "name": "Balanced Ternary String",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "greedy",
        "strings"
      ]
    },
    "C": {
      "name": "Doors Breaking and Repairing",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "games"
      ]
    },
    "B": {
      "name": "Array K-Coloring",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Integer Sequence Dividing",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1101": {
    "G": {
      "name": "(Zero XOR Subset)-less",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "math",
        "matrices"
      ]
    },
    "F": {
      "name": "Trucks and Cities",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "binary search",
        "dp"
      ]
    },
    "E": {
      "name": "Polycarp's New Job",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "implementation"
      ]
    },
    "D": {
      "name": "GCD Counting",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "number theory",
        "trees"
      ]
    },
    "C": {
      "name": "Division and Union",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "sortings"
      ]
    },
    "B": {
      "name": "Accordion",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Minimum Integer",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "math"
      ]
    }
  },
  "1100": {
    "F": {
      "name": "Ivan and Burgers",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "divide and conquer",
        "greedy",
        "math"
      ]
    },
    "E": {
      "name": "Andrew and Taxi",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "dfs and similar",
        "graphs"
      ]
    },
    "D": {
      "name": "Dasha and Chess",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "games",
        "interactive"
      ]
    },
    "C": {
      "name": "NN and the Optical Illusion",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1200,
      "tags": [
        "binary search",
        "geometry",
        "math"
      ]
    },
    "B": {
      "name": "Build a Contest",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "A": {
      "name": "Roman and Browser",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "1099": {
    "F": {
      "name": "Cookies",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "dp",
        "games",
        "trees"
      ]
    },
    "C": {
      "name": "Postcard",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "B": {
      "name": "Squares and Segments",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "binary search",
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Snowball",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1098": {
    "F": {
      "name": "\u0416-function",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3500,
      "tags": [
        "string suffix structures",
        "strings"
      ]
    },
    "E": {
      "name": "Fedya the Potter",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3400,
      "tags": [
        "binary search",
        "implementation",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Eels",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2800,
      "tags": [
        "data structures"
      ]
    },
    "C": {
      "name": "Construct a tree",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "B": {
      "name": "Nice table",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Sum in the tree",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "greedy",
        "trees"
      ]
    }
  },
  "1097": {
    "H": {
      "name": "Mateusz and an Infinite Sequence",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3400,
      "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "strings"
      ]
    },
    "G": {
      "name": "Vladislav and a Great Legend",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3000,
      "tags": [
        "combinatorics",
        "dp",
        "trees"
      ]
    },
    "F": {
      "name": "Alex and a TV Show",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "combinatorics",
        "number theory"
      ]
    },
    "E": {
      "name": "Egor and an RPG game",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3400,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "D": {
      "name": "Makoto and a Blackboard",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "dp",
        "math",
        "number theory",
        "probabilities"
      ]
    },
    "C": {
      "name": "Yuhao and a Parenthesis",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Petr and a Combination Lock",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "bitmasks",
        "brute force",
        "dp"
      ]
    },
    "A": {
      "name": "Gennady and a Card Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "1096": {
    "G": {
      "name": "Lucky Tickets",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "divide and conquer",
        "dp",
        "fft"
      ]
    },
    "F": {
      "name": "Inversion Expectation",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "dp",
        "math",
        "probabilities"
      ]
    },
    "E": {
      "name": "The Top Scorer",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "probabilities"
      ]
    },
    "D": {
      "name": "Easy Problem",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Polygon for the Angle",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "brute force",
        "geometry"
      ]
    },
    "B": {
      "name": "Substring Removal",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "combinatorics",
        "math",
        "strings"
      ]
    },
    "A": {
      "name": "Find Divisible",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "1095": {
    "F": {
      "name": "Make It Connected",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "dsu",
        "graphs",
        "greedy"
      ]
    },
    "E": {
      "name": "Almost Regular Bracket Sequence",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "implementation"
      ]
    },
    "D": {
      "name": "Circular Dance",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    },
    "C": {
      "name": "Powers Of Two",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "bitmasks",
        "greedy"
      ]
    },
    "B": {
      "name": "Array Stabilization",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Repeating Cipher",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1093": {
    "G": {
      "name": "Multidimensional Queries",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "bitmasks",
        "data structures"
      ]
    },
    "F": {
      "name": "Vasya and Array",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "dp"
      ]
    },
    "E": {
      "name": "Intersection of Permutations",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Beautiful Graph",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "C": {
      "name": "Mishka and the Last Exam",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Letters Rearranging",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "constructive algorithms",
        "greedy",
        "sortings",
        "strings"
      ]
    },
    "A": {
      "name": "Dice Rolling",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1092": {
    "F": {
      "name": "Tree with Maximum Cost",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "E": {
      "name": "Minimal Diameter Forest",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "greedy",
        "trees"
      ]
    },
    "D2": {
      "name": "Great Vova Wall (Version 2)",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "D1": {
      "name": "Great Vova Wall (Version 1)",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Prefixes and Suffixes",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "strings"
      ]
    },
    "B": {
      "name": "Teams Forming",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "sortings"
      ]
    },
    "A": {
      "name": "Uniform String",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1091": {
    "H": {
      "name": "New Year and the Tricolore Recreation",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3200,
      "tags": [
        "games"
      ]
    },
    "G": {
      "name": "New Year and the Factorisation Collaboration",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 3200,
      "tags": [
        "interactive",
        "math",
        "number theory"
      ]
    },
    "F": {
      "name": "New Year and the Mallard Expedition",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2600,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "E": {
      "name": "New Year and the Acquaintance Estimation",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "data structures",
        "graphs",
        "greedy",
        "implementation",
        "math",
        "sortings"
      ]
    },
    "D": {
      "name": "New Year and the Permutation Concatenation",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 1700,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "C": {
      "name": "New Year and the Sphere Transmission",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1400,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "New Year and the Treasure Geolocation",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "New Year and the Christmas Ornament",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    }
  },
  "1090": {
    "M": {
      "name": "The Pleasant Walk",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    },
    "L": {
      "name": "Berland University",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "K": {
      "name": "Right Expansion Of The Mind",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "math"
      ]
    },
    "J": {
      "name": "Two Prefixes",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "strings"
      ]
    },
    "I": {
      "name": "Minimal Product",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": []
    },
    "H": {
      "name": "Linearization",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "graphs"
      ]
    },
    "G": {
      "name": "Combostone",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "games",
        "implementation"
      ]
    },
    "F": {
      "name": "How to Learn You Score",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "constructive algorithms",
        "interactive"
      ]
    },
    "E": {
      "name": "Horseback Riding",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "flows",
        "graphs"
      ]
    },
    "D": {
      "name": "Similar Arrays",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "constructive algorithms"
      ]
    },
    "C": {
      "name": "New Year Presents",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "data structures"
      ]
    },
    "B": {
      "name": "LaTeX Expert",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": []
    },
    "A": {
      "name": "Company Merging",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "greedy"
      ]
    }
  },
  "1089": {
    "M": {
      "name": "Minegraphed",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "graphs"
      ]
    },
    "L": {
      "name": "Lazyland",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": []
    },
    "K": {
      "name": "King Kog's Reception",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "data structures"
      ]
    },
    "J": {
      "name": "JS Minification",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "I": {
      "name": "Interval-Free Permutations",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "combinatorics"
      ]
    },
    "H": {
      "name": "Harder Satisfiability",
      "type": "PROGRAMMING",
      "rating": 3400,
      "tags": [
        "2-sat",
        "dfs and similar",
        "graphs"
      ]
    },
    "G": {
      "name": "Guest Student",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "math"
      ]
    },
    "F": {
      "name": "Fractions",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "math"
      ]
    },
    "E": {
      "name": "Easy Chess",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "constructive algorithms"
      ]
    },
    "D": {
      "name": "Distance Sum",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": [
        "graphs"
      ]
    },
    "C": {
      "name": "Cactus Search",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "interactive"
      ]
    },
    "B": {
      "name": "Bimatching",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": [
        "graphs"
      ]
    },
    "A": {
      "name": "Alice the Fan",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "dp"
      ]
    }
  },
  "1088": {
    "F": {
      "name": "Ehab and a weird weight formula",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "E": {
      "name": "Ehab and a component choosing problem",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "dp",
        "greedy",
        "math",
        "trees"
      ]
    },
    "D": {
      "name": "Ehab and another another xor problem",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "implementation",
        "interactive"
      ]
    },
    "C": {
      "name": "Ehab and a 2-operation task",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Ehab and subtraction",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Ehab and another construction problem",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "constructive algorithms"
      ]
    }
  },
  "1086": {
    "F": {
      "name": "Forest Fires",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3500,
      "tags": [
        "math"
      ]
    }
  },
  "1085": {
    "G": {
      "name": "Beautiful Matrix",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 2900,
      "tags": [
        "combinatorics",
        "data structures",
        "dp"
      ]
    },
    "F": {
      "name": "Rock-Paper-Scissors Champion",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2500,
      "tags": []
    },
    "E": {
      "name": "Vasya and Templates",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "D": {
      "name": "Minimum Diameter Tree",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "implementation",
        "trees"
      ]
    },
    "C": {
      "name": "Connect Three",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1600,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Div Times Mod",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1100,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Right-Left Cipher",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1084": {
    "C": {
      "name": "The Fair Nut and String",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "combinatorics",
        "dp",
        "implementation"
      ]
    },
    "B": {
      "name": "Kvass and the Fair Nut",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "The Fair Nut and Elevator",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "1083": {
    "F": {
      "name": "The Fair Nut and Amusing Xor",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3300,
      "tags": [
        "data structures"
      ]
    },
    "E": {
      "name": "The Fair Nut and Rectangles",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "dp",
        "geometry"
      ]
    },
    "D": {
      "name": "The Fair Nut's getting crazy",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3500,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "C": {
      "name": "Max Mex",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2900,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "B": {
      "name": "The Fair Nut and Strings",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "greedy",
        "strings"
      ]
    },
    "A": {
      "name": "The Fair Nut and the Best Path",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "data structures",
        "dp",
        "trees"
      ]
    }
  },
  "1082": {
    "G": {
      "name": "Petya and Graph",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "flows",
        "graphs"
      ]
    },
    "F": {
      "name": "Speed Dial",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "dp",
        "strings",
        "trees"
      ]
    },
    "E": {
      "name": "Increasing Frequency",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "binary search",
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Maximum Diameter Graph",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "graphs",
        "implementation"
      ]
    },
    "C": {
      "name": "Multi-Subject Competition",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Vova and Trophies",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Vasya and Book",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1081": {
    "H": {
      "name": "Palindromic Magic",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3500,
      "tags": [
        "data structures",
        "hashing",
        "strings"
      ]
    },
    "G": {
      "name": "Mergesort Strikes Back",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3200,
      "tags": [
        "math",
        "probabilities"
      ]
    },
    "F": {
      "name": "Tricky Interactor",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2600,
      "tags": [
        "constructive algorithms",
        "implementation",
        "interactive"
      ]
    },
    "E": {
      "name": "Missing Numbers",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Maximum Distance",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "dsu",
        "graphs",
        "shortest paths",
        "sortings"
      ]
    },
    "C": {
      "name": "Colorful Bricks",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "B": {
      "name": "Farewell Party",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "Definite Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "1080": {
    "F": {
      "name": "Katya and Segments Sets",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "interactive",
        "sortings"
      ]
    },
    "E": {
      "name": "Sonya and Matrix Beauty",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2400,
      "tags": [
        "strings"
      ]
    },
    "D": {
      "name": "Olya and magical square",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Masha and two friends",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "implementation"
      ]
    },
    "B": {
      "name": "Margarite and the best present",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 900,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Petya and Origami",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1078": {
    "E": {
      "name": "Negative Time Summation",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3400,
      "tags": [
        "constructive algorithms"
      ]
    }
  },
  "1077": {
    "F2": {
      "name": "Pictures with Kittens (hard version)",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "F1": {
      "name": "Pictures with Kittens (easy version)",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "dp"
      ]
    },
    "E": {
      "name": "Thematic Contests",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "D": {
      "name": "Cutting Out",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "binary search",
        "sortings"
      ]
    },
    "C": {
      "name": "Good Array",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": []
    },
    "B": {
      "name": "Disturbed People",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Frog Jumping",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1076": {
    "G": {
      "name": "Array Game",
      "type": "PROGRAMMING",
      "rating": 3000,
      "tags": [
        "data structures",
        "games"
      ]
    },
    "F": {
      "name": "Summer Practice Report",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "E": {
      "name": "Vasya and a Tree",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "D": {
      "name": "Edge Deletion",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "graphs",
        "greedy",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Meme Problem",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "binary search",
        "math"
      ]
    },
    "B": {
      "name": "Divisor Subtraction",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "implementation",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Minimizing the String",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "greedy",
        "strings"
      ]
    }
  },
  "1075": {
    "B": {
      "name": "Taxi drivers and Lyft",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "The King's Race",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1073": {
    "G": {
      "name": "Yet Another LCP Problem",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "data structures",
        "string suffix structures"
      ]
    },
    "F": {
      "name": "Choosing Two Paths",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "E": {
      "name": "Segment Sum",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "Berland Fair",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "greedy"
      ]
    },
    "C": {
      "name": "Vasya and Robot",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "binary search",
        "two pointers"
      ]
    },
    "B": {
      "name": "Vasya and Books",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Diverse Substring",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1071": {
    "E": {
      "name": "Rain Protection",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3500,
      "tags": [
        "binary search",
        "geometry"
      ]
    }
  },
  "1070": {
    "M": {
      "name": "Algoland and Berland",
      "type": "PROGRAMMING",
      "rating": 3000,
      "tags": [
        "constructive algorithms",
        "divide and conquer",
        "geometry"
      ]
    },
    "L": {
      "name": "Odd Federalization",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "constructive algorithms"
      ]
    },
    "K": {
      "name": "Video Posts",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    },
    "J": {
      "name": "Streets and Avenues in Berhattan",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "dp"
      ]
    },
    "I": {
      "name": "Privatization of Roads in Berland",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "flows",
        "graph matchings",
        "graphs"
      ]
    },
    "H": {
      "name": "BerOS File Suggestion",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "G": {
      "name": "Monsters and Potions",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "F": {
      "name": "Debate",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "greedy"
      ]
    },
    "E": {
      "name": "Getting Deals Done",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "D": {
      "name": "Garbage Disposal",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "greedy"
      ]
    },
    "C": {
      "name": "Cloud Computing",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "B": {
      "name": "Berkomnadzor",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "A": {
      "name": "Find a Number",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "dp",
        "graphs",
        "number theory",
        "shortest paths"
      ]
    }
  },
  "1068": {
    "C": {
      "name": "Colored Rooks",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "graphs"
      ]
    },
    "B": {
      "name": "LCM",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1200,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Birthday",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "math"
      ]
    }
  },
  "1067": {
    "E": {
      "name": "Random Forest Rank",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "dp",
        "graph matchings",
        "math",
        "trees"
      ]
    },
    "D": {
      "name": "Computer Game",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3100,
      "tags": [
        "dp",
        "greedy",
        "math",
        "probabilities"
      ]
    },
    "C": {
      "name": "Knights",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2600,
      "tags": [
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Multihedgehog",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "dfs and similar",
        "graphs",
        "shortest paths"
      ]
    },
    "A": {
      "name": "Array Without Local Maximums ",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1900,
      "tags": [
        "dp"
      ]
    }
  },
  "1066": {
    "F": {
      "name": "Yet another 2D Walking",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dp"
      ]
    },
    "E": {
      "name": "Binary Numbers AND Sum",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "data structures",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Boxes Packing",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "binary search",
        "implementation"
      ]
    },
    "C": {
      "name": "Books Queries",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "implementation"
      ]
    },
    "B": {
      "name": "Heaters",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "greedy",
        "two pointers"
      ]
    },
    "A": {
      "name": "Vova and Train",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "math"
      ]
    }
  },
  "1065": {
    "G": {
      "name": "Fibonacci Suffix",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "strings"
      ]
    },
    "F": {
      "name": "Up and Down the Tree",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "E": {
      "name": "Side Transmutations",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "combinatorics",
        "strings"
      ]
    },
    "D": {
      "name": "Three Pieces",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "dp",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Make It Equal",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Vasya and Isolated Vertices",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "graphs"
      ]
    },
    "A": {
      "name": "Vasya and Chocolate",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1064": {
    "B": {
      "name": "Equations of Mathematical Magic",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Make a triangle!",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "geometry",
        "math"
      ]
    }
  },
  "1063": {
    "F": {
      "name": "String Journey",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3300,
      "tags": [
        "data structures",
        "dp",
        "string suffix structures"
      ]
    },
    "E": {
      "name": "Lasers and Mirrors",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3000,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "D": {
      "name": "Candies for Children",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2600,
      "tags": [
        "brute force",
        "math"
      ]
    },
    "C": {
      "name": "Dwarves, Hats and Extrasensory Abilities",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "constructive algorithms",
        "geometry",
        "interactive"
      ]
    },
    "B": {
      "name": "Labyrinth",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "graphs",
        "shortest paths"
      ]
    },
    "A": {
      "name": "Oh Those Palindromes",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "strings"
      ]
    }
  },
  "1062": {
    "F": {
      "name": "Upgrading Cities",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2900,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "E": {
      "name": "Company",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "greedy",
        "trees"
      ]
    },
    "D": {
      "name": "Fun with Integers",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "dfs and similar",
        "graphs",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Banh-mi",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Math",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "greedy",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "A Prank",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "1061": {
    "F": {
      "name": "Lost Root",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2400,
      "tags": [
        "interactive",
        "probabilities"
      ]
    },
    "E": {
      "name": "Politics",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "flows",
        "graphs"
      ]
    },
    "D": {
      "name": "TV Shows",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "data structures",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "C": {
      "name": "Multiplicity",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "data structures",
        "dp",
        "implementation",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Views Matter",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Coins",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "1060": {
    "H": {
      "name": "Sophisticated Device",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3300,
      "tags": [
        "constructive algorithms"
      ]
    },
    "G": {
      "name": "Balls and Pockets",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3400,
      "tags": [
        "data structures"
      ]
    },
    "F": {
      "name": "Shrinking Tree",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2900,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "E": {
      "name": "Sergey and Subway",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "D": {
      "name": "Social Circles",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Maximum Subrectangle",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "implementation",
        "two pointers"
      ]
    },
    "B": {
      "name": "Maximum Sum of Digits",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1100,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Phone Numbers",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force"
      ]
    }
  },
  "1059": {
    "E": {
      "name": "Split the Tree",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "D": {
      "name": "Nature Reserve",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "geometry",
        "ternary search"
      ]
    },
    "C": {
      "name": "Sequence Transformation",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "B": {
      "name": "Forgery",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Cashier",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "1057": {
    "C": {
      "name": "Tanya and Colored Candies",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "*special",
        "dp"
      ]
    },
    "B": {
      "name": "DDoS",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "*special",
        "brute force"
      ]
    },
    "A": {
      "name": "Bmail Computer Network",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "*special",
        "dfs and similar",
        "trees"
      ]
    }
  },
  "1056": {
    "H": {
      "name": "Detect Robots",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3200,
      "tags": [
        "data structures",
        "strings"
      ]
    },
    "G": {
      "name": "Take Metro",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 2900,
      "tags": [
        "brute force",
        "data structures",
        "graphs"
      ]
    },
    "F": {
      "name": "Write The Contest",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "dp",
        "math"
      ]
    },
    "E": {
      "name": "Check Transcription",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "data structures",
        "hashing",
        "strings"
      ]
    },
    "D": {
      "name": "Decorate Apple Tree",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "graphs",
        "greedy",
        "sortings",
        "trees"
      ]
    },
    "C": {
      "name": "Pick Heroes",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "greedy",
        "implementation",
        "interactive",
        "sortings"
      ]
    },
    "B": {
      "name": "Divide Candies",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Determine Line",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1055": {
    "G": {
      "name": "Jellyfish Nightmare",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3500,
      "tags": []
    },
    "F": {
      "name": "Tree and XOR",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 2900,
      "tags": [
        "strings",
        "trees"
      ]
    },
    "E": {
      "name": "Segments on the Line",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "dp"
      ]
    },
    "D": {
      "name": "Refactoring",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2400,
      "tags": [
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "C": {
      "name": "Lucky Days",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Alice and Hairdresser",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "dsu",
        "implementation"
      ]
    },
    "A": {
      "name": "Metro",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "graphs"
      ]
    }
  },
  "1054": {
    "H": {
      "name": "Epic Convolution",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3500,
      "tags": [
        "chinese remainder theorem",
        "fft",
        "math",
        "number theory"
      ]
    },
    "G": {
      "name": "New Road Network",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3300,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "F": {
      "name": "Electric Scheme",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2700,
      "tags": [
        "flows",
        "graph matchings"
      ]
    },
    "E": {
      "name": "Chips Puzzle",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Changing Array",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Candies Distribution",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "B": {
      "name": "Appending Mex",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Elevator or Stairs?",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1053": {
    "E": {
      "name": "Euler tour",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3500,
      "tags": [
        "constructive algorithms",
        "trees"
      ]
    }
  },
  "1051": {
    "G": {
      "name": "Distinctification",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "data structures",
        "dsu",
        "greedy"
      ]
    },
    "F": {
      "name": "The Shortest Statement",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "graphs",
        "shortest paths",
        "trees"
      ]
    },
    "E": {
      "name": "Vasya and Big Integers",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "hashing",
        "strings"
      ]
    },
    "D": {
      "name": "Bicolorings",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "C": {
      "name": "Vasya and Multisets",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Relatively Prime Pairs",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "greedy",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Vasya And Password",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation",
        "strings"
      ]
    }
  },
  "1047": {
    "B": {
      "name": "Cover Points",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "geometry",
        "math"
      ]
    },
    "A": {
      "name": "Little C Loves 3 I",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1046": {
    "I": {
      "name": "Say Hello",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "geometry"
      ]
    },
    "F": {
      "name": "Splitting money",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "implementation"
      ]
    },
    "C": {
      "name": "Space Formula",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "greedy"
      ]
    }
  },
  "1045": {
    "J": {
      "name": "Moonwalk challenge",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "data structures",
        "strings",
        "trees"
      ]
    },
    "I": {
      "name": "Palindrome Pairs",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "hashing",
        "strings"
      ]
    },
    "H": {
      "name": "Self-exploration",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "math"
      ]
    },
    "G": {
      "name": "AI robots",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "data structures"
      ]
    },
    "F": {
      "name": "Shady Lady",
      "type": "PROGRAMMING",
      "rating": 3400,
      "tags": [
        "geometry",
        "math"
      ]
    },
    "E": {
      "name": "Ancient civilizations",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": [
        "constructive algorithms",
        "geometry"
      ]
    },
    "D": {
      "name": "Interstellar battle",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "math",
        "probabilities",
        "trees"
      ]
    },
    "C": {
      "name": "Hyperspace Highways",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "B": {
      "name": "Space Isaac",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "hashing",
        "number theory"
      ]
    },
    "A": {
      "name": "Last chance",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "data structures",
        "flows",
        "graph matchings",
        "graphs",
        "trees"
      ]
    }
  },
  "1044": {
    "F": {
      "name": "DFS",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "data structures"
      ]
    },
    "E": {
      "name": "Grid Sort",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3100,
      "tags": [
        "implementation"
      ]
    },
    "D": {
      "name": "Deduction Queries",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "dsu"
      ]
    },
    "C": {
      "name": "Optimal Polygon Perimeter",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "dp",
        "geometry"
      ]
    },
    "B": {
      "name": "Intersecting Subtrees",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1900,
      "tags": [
        "dfs and similar",
        "interactive",
        "trees"
      ]
    },
    "A": {
      "name": "The Tower is Going Home",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "two pointers"
      ]
    }
  },
  "1043": {
    "G": {
      "name": "Speckled Band",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3500,
      "tags": [
        "data structures",
        "divide and conquer",
        "hashing",
        "string suffix structures",
        "strings"
      ]
    },
    "F": {
      "name": "Make It One",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "math",
        "number theory",
        "shortest paths"
      ]
    },
    "E": {
      "name": "Train Hard, Win Easy",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "D": {
      "name": "Mysterious Crime",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "combinatorics",
        "math",
        "meet-in-the-middle",
        "two pointers"
      ]
    },
    "C": {
      "name": "Smallest Word",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Lost Array",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Elections",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1042": {
    "F": {
      "name": "Leaf Sets",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "sortings",
        "trees"
      ]
    },
    "E": {
      "name": "Vasya and Magic Matrix",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "dp",
        "math",
        "probabilities"
      ]
    },
    "D": {
      "name": "Petya and Array",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "data structures",
        "divide and conquer",
        "two pointers"
      ]
    },
    "C": {
      "name": "Array Product",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Vitamins",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "implementation"
      ]
    },
    "A": {
      "name": "Benches",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "binary search",
        "implementation"
      ]
    }
  },
  "1041": {
    "F": {
      "name": "Ray in the tube",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "divide and conquer",
        "dp",
        "math"
      ]
    },
    "E": {
      "name": "Tree Reconstruction",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "data structures",
        "graphs",
        "greedy"
      ]
    },
    "D": {
      "name": "Glider",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "data structures",
        "two pointers"
      ]
    },
    "C": {
      "name": "Coffee Break",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "two pointers"
      ]
    },
    "B": {
      "name": "Buying a TV Set",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Heist",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    }
  },
  "1040": {
    "B": {
      "name": "Shashlik Cooking",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "dp",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Palindrome Dance",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "greedy"
      ]
    }
  },
  "1039": {
    "E": {
      "name": "Summer Oenothera Exhibition",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3400,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "You Are Given a Tree",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "dp",
        "trees"
      ]
    },
    "C": {
      "name": "Network Safety",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "math",
        "sortings"
      ]
    },
    "B": {
      "name": "Subway Pursuit",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "interactive",
        "probabilities"
      ]
    },
    "A": {
      "name": "Timetable",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "math"
      ]
    }
  },
  "1038": {
    "F": {
      "name": "Wrap Around",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2900,
      "tags": [
        "dp",
        "strings"
      ]
    },
    "E": {
      "name": "Maximum Matching",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar",
        "dp",
        "graphs"
      ]
    },
    "D": {
      "name": "Slime",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1800,
      "tags": [
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Gambling",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Non-Coprime Partition",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Equality",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1037": {
    "H": {
      "name": "Security",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3200,
      "tags": [
        "data structures",
        "string suffix structures"
      ]
    },
    "G": {
      "name": "A Game on Strings",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3200,
      "tags": [
        "games"
      ]
    },
    "F": {
      "name": "Maximum Reduction",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2500,
      "tags": [
        "combinatorics",
        "data structures",
        "math"
      ]
    },
    "E": {
      "name": "Trips",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2200,
      "tags": [
        "graphs"
      ]
    },
    "D": {
      "name": "Valid BFS?",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "graphs",
        "shortest paths",
        "trees"
      ]
    },
    "C": {
      "name": "Equalize",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "dp",
        "greedy",
        "strings"
      ]
    },
    "B": {
      "name": "Reach Median",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1300,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Packets",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    }
  },
  "1036": {
    "G": {
      "name": "Sources and Sinks",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar"
      ]
    },
    "F": {
      "name": "Relatively Prime Powers",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "combinatorics",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Covered Points",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "fft",
        "geometry",
        "number theory"
      ]
    },
    "D": {
      "name": "Vasya and Arrays",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "greedy",
        "two pointers"
      ]
    },
    "C": {
      "name": "Classy Numbers",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "B": {
      "name": "Diagonal Walking v.2",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Function Height",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "math"
      ]
    }
  },
  "1034": {
    "E": {
      "name": "Little C Loves 3 III",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3200,
      "tags": [
        "bitmasks",
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "Intervals of Intervals",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3500,
      "tags": [
        "binary search",
        "data structures",
        "two pointers"
      ]
    },
    "C": {
      "name": "Region Separation",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2700,
      "tags": [
        "combinatorics",
        "dp",
        "number theory",
        "trees"
      ]
    },
    "B": {
      "name": "Little C Loves 3 II",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "constructive algorithms",
        "flows",
        "graph matchings"
      ]
    },
    "A": {
      "name": "Enlarge GCD",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1800,
      "tags": [
        "number theory"
      ]
    }
  },
  "1033": {
    "G": {
      "name": "Chip Game",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3500,
      "tags": [
        "games"
      ]
    },
    "F": {
      "name": "Boolean Computer",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 2800,
      "tags": [
        "bitmasks",
        "brute force",
        "fft",
        "math"
      ]
    },
    "E": {
      "name": "Hidden Bipartite Graph",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2800,
      "tags": [
        "binary search",
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "interactive"
      ]
    },
    "D": {
      "name": "Divisors",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2000,
      "tags": [
        "interactive",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Permutation Game",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "dp",
        "games"
      ]
    },
    "B": {
      "name": "Square Difference",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "King Escape",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "dfs and similar",
        "graphs",
        "implementation"
      ]
    }
  },
  "1032": {
    "G": {
      "name": "Chattering",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 2900,
      "tags": []
    },
    "F": {
      "name": "Vasya and Maximum Matching",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2400,
      "tags": [
        "dp",
        "trees"
      ]
    },
    "E": {
      "name": "The Unbearable Lightness of Weights",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "Barcelonian Distance",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "geometry",
        "implementation"
      ]
    },
    "C": {
      "name": "Playing Piano",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "dp"
      ]
    },
    "B": {
      "name": "Personalized Cup",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": []
    },
    "A": {
      "name": "Kitchen Utensils",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": []
    }
  },
  "1031": {
    "F": {
      "name": "Familiar Operations",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "brute force",
        "graphs",
        "math"
      ]
    },
    "E": {
      "name": "Triple Flips",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "constructive algorithms"
      ]
    },
    "D": {
      "name": "Minimum path",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "greedy"
      ]
    },
    "C": {
      "name": "Cram Time",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Curiosity Has No Limits",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": []
    },
    "A": {
      "name": "Golden Plate",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "1030": {
    "G": {
      "name": "Linear Congruential Generator",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2900,
      "tags": [
        "number theory"
      ]
    },
    "F": {
      "name": "Putting Boxes Together",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "data structures"
      ]
    },
    "E": {
      "name": "Vasya and Good Sequences",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "D": {
      "name": "Vasya and Triangle",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "geometry",
        "number theory"
      ]
    },
    "C": {
      "name": "Vasya and Golden Ticket",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "B": {
      "name": "Vasya and Cornfield",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "geometry"
      ]
    },
    "A": {
      "name": "In Search of an Easy Problem",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1029": {
    "F": {
      "name": "Multicolored Markers",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "binary search",
        "brute force",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Tree with Small Distances",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dp",
        "graphs",
        "greedy"
      ]
    },
    "D": {
      "name": "Concatenated Multiples",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Maximal Intersection",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "greedy",
        "math",
        "sortings"
      ]
    },
    "B": {
      "name": "Creating the Contest",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "dp",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Many Equal Substrings",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1028": {
    "H": {
      "name": "Make Square",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 2900,
      "tags": [
        "math"
      ]
    },
    "G": {
      "name": "Guess the number",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3000,
      "tags": [
        "dp",
        "interactive"
      ]
    },
    "F": {
      "name": "Make Symmetrical",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 2900,
      "tags": [
        "brute force"
      ]
    },
    "E": {
      "name": "Restore Array",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms"
      ]
    },
    "D": {
      "name": "Order book",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "combinatorics",
        "data structures",
        "greedy"
      ]
    },
    "C": {
      "name": "Rectangles",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1600,
      "tags": [
        "geometry",
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Unnatural Conditions",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Find Square",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1027": {
    "G": {
      "name": "X-mouse in the Campus",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "bitmasks",
        "math",
        "number theory"
      ]
    },
    "F": {
      "name": "Session in BSU",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "binary search",
        "dfs and similar",
        "dsu",
        "graph matchings",
        "graphs"
      ]
    },
    "E": {
      "name": "Inverse Coloring",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "Mouse Hunt",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "C": {
      "name": "Minimum Value Rectangle",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Numbers on the Chessboard",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Palindromic Twist",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1025": {
    "G": {
      "name": "Company Acquisitions",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3200,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "F": {
      "name": "Disjoint Triangles",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2700,
      "tags": [
        "geometry"
      ]
    },
    "E": {
      "name": "Colored Cubes",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "implementation",
        "matrices"
      ]
    },
    "D": {
      "name": "Recovering BST",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "dp",
        "math",
        "number theory",
        "trees"
      ]
    },
    "C": {
      "name": "Plasticine zebra",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "B": {
      "name": "Weakened Common Divisor",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "greedy",
        "number theory"
      ]
    },
    "A": {
      "name": "Doggo Recoloring",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation",
        "sortings"
      ]
    }
  },
  "1023": {
    "G": {
      "name": "Pisces",
      "type": "PROGRAMMING",
      "points": 4000.0,
      "rating": 3400,
      "tags": [
        "data structures",
        "flows",
        "trees"
      ]
    },
    "F": {
      "name": "Mobile Phone Network",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 2600,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "Down or Right",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "interactive",
        "matrices"
      ]
    },
    "D": {
      "name": "Array Restoration",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "data structures"
      ]
    },
    "C": {
      "name": "Bracket Subsequence",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1200,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Pair of Toys",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Single Wildcard Pattern Matching",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    }
  },
  "1020": {
    "B": {
      "name": "Badge",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "dfs and similar",
        "graphs"
      ]
    },
    "A": {
      "name": "New Building for SIS",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "math"
      ]
    }
  },
  "1019": {
    "E": {
      "name": "Raining season",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3200,
      "tags": [
        "data structures",
        "divide and conquer",
        "trees"
      ]
    },
    "D": {
      "name": "Large Triangle",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "binary search",
        "geometry",
        "sortings"
      ]
    },
    "C": {
      "name": "Sergey's problem",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 3000,
      "tags": [
        "constructive algorithms",
        "graphs"
      ]
    },
    "B": {
      "name": "The hat",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "interactive"
      ]
    },
    "A": {
      "name": "Elections",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "greedy"
      ]
    }
  },
  "1017": {
    "H": {
      "name": "The Films",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3300,
      "tags": [
        "brute force"
      ]
    },
    "G": {
      "name": "The Tree",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3200,
      "tags": [
        "data structures"
      ]
    },
    "F": {
      "name": "The Neutral Zone",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "math"
      ]
    },
    "E": {
      "name": "The Supersonic Rocket",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "geometry",
        "hashing",
        "strings"
      ]
    },
    "D": {
      "name": "The Wu",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "bitmasks",
        "brute force",
        "data structures"
      ]
    },
    "C": {
      "name": "The Phone Number",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "B": {
      "name": "The Bits",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "The Rank",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1016": {
    "G": {
      "name": "Appropriate Team",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "bitmasks",
        "math",
        "number theory"
      ]
    },
    "F": {
      "name": "Road Projects",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "E": {
      "name": "Rest In The Shades",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "binary search",
        "geometry"
      ]
    },
    "D": {
      "name": "Vasya And The Matrix",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "flows",
        "math"
      ]
    },
    "C": {
      "name": "Vasya And The Mushrooms",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "dp",
        "implementation"
      ]
    },
    "B": {
      "name": "Segment Occurrences",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Death Note",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "1015": {
    "F": {
      "name": "Bracket Substring",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "dp",
        "strings"
      ]
    },
    "E2": {
      "name": "Stars Drawing (Hard Edition)",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "dp",
        "greedy"
      ]
    },
    "E1": {
      "name": "Stars Drawing (Easy Edition)",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "brute force",
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Walking Between Houses",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "C": {
      "name": "Songs Compression",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "sortings"
      ]
    },
    "B": {
      "name": "Obtaining the String",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Points in Segments",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1013": {
    "B": {
      "name": "And",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Piles With Stones",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "1012": {
    "F": {
      "name": "Passports",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3400,
      "tags": [
        "dp",
        "implementation"
      ]
    },
    "E": {
      "name": "Cycle sort",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "dsu",
        "math"
      ]
    },
    "D": {
      "name": "AB-Strings",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2800,
      "tags": [
        "constructive algorithms",
        "strings"
      ]
    },
    "C": {
      "name": "Hills",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Chemical table",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "matrices"
      ]
    },
    "A": {
      "name": "Photo of The Sky",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "implementation",
        "math",
        "sortings"
      ]
    }
  },
  "1011": {
    "B": {
      "name": "Planning The Expedition",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "binary search",
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Stages",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    }
  },
  "1010": {
    "F": {
      "name": "Tree",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3400,
      "tags": [
        "fft",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "Store",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2700,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Mars rover",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "graphs",
        "implementation",
        "trees"
      ]
    },
    "C": {
      "name": "Border",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "number theory"
      ]
    },
    "B": {
      "name": "Rocket",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "interactive"
      ]
    },
    "A": {
      "name": "Fly",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "math"
      ]
    }
  },
  "1009": {
    "G": {
      "name": "Allowed Letters",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "bitmasks",
        "flows",
        "graph matchings",
        "graphs",
        "greedy"
      ]
    },
    "F": {
      "name": "Dominant Indices",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "data structures",
        "dsu",
        "trees"
      ]
    },
    "E": {
      "name": "Intercity Travelling",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "combinatorics",
        "math",
        "probabilities"
      ]
    },
    "D": {
      "name": "Relatively Prime Graph",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "brute force",
        "constructive algorithms",
        "graphs",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Annoying Present",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Minimum Ternary String",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Game Shopping",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1008": {
    "B": {
      "name": "Turn the Rectangles",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Romaji",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "1007": {
    "E": {
      "name": "Mini Metro",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3400,
      "tags": [
        "dp"
      ]
    },
    "D": {
      "name": "Ants",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3200,
      "tags": [
        "2-sat",
        "data structures",
        "trees"
      ]
    },
    "C": {
      "name": "Guess two numbers",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 3000,
      "tags": [
        "binary search",
        "interactive"
      ]
    },
    "B": {
      "name": "Pave the Parallelepiped",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "brute force",
        "combinatorics",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Reorder the Array",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "combinatorics",
        "data structures",
        "math",
        "sortings",
        "two pointers"
      ]
    }
  },
  "1006": {
    "F": {
      "name": "Xor-Paths",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "meet-in-the-middle"
      ]
    },
    "E": {
      "name": "Military Problem",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "D": {
      "name": "Two Strings Swaps",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "implementation"
      ]
    },
    "C": {
      "name": "Three Parts of the Array",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "binary search",
        "data structures",
        "two pointers"
      ]
    },
    "B": {
      "name": "Polycarp's Practice",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Adjacent Replacements",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1005": {
    "F": {
      "name": "Berland and the Shortest Paths",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "brute force",
        "dfs and similar",
        "graphs",
        "shortest paths"
      ]
    },
    "E2": {
      "name": "Median on Segments (General Case Edition)",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "sortings"
      ]
    },
    "E1": {
      "name": "Median on Segments (Permutations Edition)",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "sortings"
      ]
    },
    "D": {
      "name": "Polycarp and Div 3",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "dp",
        "greedy",
        "number theory"
      ]
    },
    "C": {
      "name": "Summarize to the Power of Two",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Delete from the Left",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Tanya and Stairways",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1004": {
    "F": {
      "name": "Sonya and Bitwise OR",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2600,
      "tags": [
        "bitmasks",
        "data structures",
        "divide and conquer"
      ]
    },
    "E": {
      "name": "Sonya and Ice Cream",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "shortest paths",
        "trees"
      ]
    },
    "D": {
      "name": "Sonya and Matrix",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation"
      ]
    },
    "C": {
      "name": "Sonya and Robots",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "B": {
      "name": "Sonya and Exhibition",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Sonya and Hotels",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "1003": {
    "F": {
      "name": "Abbreviation",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "dp",
        "hashing",
        "strings"
      ]
    },
    "E": {
      "name": "Tree Constructing",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "graphs"
      ]
    },
    "D": {
      "name": "Coins and Queries",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "greedy"
      ]
    },
    "C": {
      "name": "Intense Heat",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Binary String Constructing",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "Polycarp's Pockets",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "1002": {
    "E2": {
      "name": "Another array reconstruction algorithm",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": []
    },
    "E1": {
      "name": "Bernstein-Vazirani algorithm",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": []
    },
    "D3": {
      "name": "Oracle for majority function",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": []
    },
    "D2": {
      "name": "Oracle for f(x) = b * x + (1 - b) * (1 - x) mod 2",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": []
    },
    "D1": {
      "name": "Oracle for f(x) = b * x mod 2",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": []
    },
    "C2": {
      "name": "Distinguish zero state and plus state without errors",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": []
    },
    "C1": {
      "name": "Distinguish zero state and plus state with minimum error",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": []
    },
    "B4": {
      "name": "Distinguish four 2-qubit states - 2",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": []
    },
    "B3": {
      "name": "Distinguish four 2-qubit states",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": []
    },
    "B2": {
      "name": "Distinguish GHZ state and W state",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": []
    },
    "B1": {
      "name": "Distinguish zero state and W state",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": []
    },
    "A4": {
      "name": "Generate W state",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": []
    },
    "A3": {
      "name": "Generate superposition of two basis states",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": []
    },
    "A2": {
      "name": "Generate superposition of zero state and a basis state",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": []
    },
    "A1": {
      "name": "Generate superposition of all basis states",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": []
    }
  },
  "1001": {
    "I": {
      "name": "Deutsch-Jozsa algorithm",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "*special"
      ]
    },
    "H": {
      "name": "Oracle for f(x) = parity of the number of 1s in x",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "*special"
      ]
    },
    "G": {
      "name": "Oracle for f(x) = k-th element of x",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "*special"
      ]
    },
    "F": {
      "name": "Distinguish multi-qubit basis states",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "*special"
      ]
    },
    "E": {
      "name": "Distinguish Bell states",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "*special"
      ]
    },
    "D": {
      "name": "Distinguish plus state and minus state",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "*special"
      ]
    },
    "C": {
      "name": "Generate GHZ state",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "*special"
      ]
    },
    "B": {
      "name": "Generate Bell state",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "*special"
      ]
    },
    "A": {
      "name": "Generate plus state or minus state",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "*special"
      ]
    }
  },
  "1000": {
    "G": {
      "name": "Two-Paths",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "data structures",
        "dp",
        "trees"
      ]
    },
    "F": {
      "name": "One Occurrence",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "data structures",
        "divide and conquer"
      ]
    },
    "E": {
      "name": "We Need More Bosses",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "D": {
      "name": "Yet Another Problem On a Subsequence",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "C": {
      "name": "Covered Points Count",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "data structures",
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Light It Up",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Codehorses T-shirts",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "999": {
    "F": {
      "name": "Cards and Joy",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "dp"
      ]
    },
    "E": {
      "name": "Reachability from the Capital",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "graphs",
        "greedy"
      ]
    },
    "D": {
      "name": "Equalize the Remainders",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Alphabetic Removals",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    },
    "B": {
      "name": "Reversing Encryption",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Mishka and Contest",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "998": {
    "B": {
      "name": "Cutting",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Balloons",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "997": {
    "E": {
      "name": "Good Subsegments",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Cycles in product",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "combinatorics",
        "divide and conquer",
        "trees"
      ]
    },
    "C": {
      "name": "Sky Full of Stars",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "B": {
      "name": "Roman Digits",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Convert to Ones",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "996": {
    "B": {
      "name": "World Cup",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "binary search",
        "math"
      ]
    },
    "A": {
      "name": "Hit the Lottery",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "dp",
        "greedy"
      ]
    }
  },
  "995": {
    "F": {
      "name": "Cowmpany Cowmpensation",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "trees"
      ]
    },
    "E": {
      "name": "Number Clicker",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2700,
      "tags": [
        "divide and conquer",
        "graphs",
        "meet-in-the-middle",
        "number theory"
      ]
    },
    "D": {
      "name": "Game",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2500,
      "tags": [
        "math"
      ]
    },
    "C": {
      "name": "Leaving the Bar",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "data structures",
        "geometry",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "B": {
      "name": "Suit and Tie",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Tesla",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "994": {
    "B": {
      "name": "Knights of a Polygonal Table",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Fingerprints",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "993": {
    "F": {
      "name": "The Moral Dilemma",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3200,
      "tags": []
    },
    "E": {
      "name": "Nikita and Order Statistics",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "chinese remainder theorem",
        "fft",
        "math"
      ]
    },
    "D": {
      "name": "Compute Power",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Careful Maneuvering",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "bitmasks",
        "brute force",
        "geometry"
      ]
    },
    "B": {
      "name": "Open Communication",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "bitmasks",
        "brute force"
      ]
    },
    "A": {
      "name": "Two Squares",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "geometry",
        "implementation"
      ]
    }
  },
  "992": {
    "E": {
      "name": "Nastya and King-Shamans",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "D": {
      "name": "Nastya and a Game",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Nastya and a Wardrobe",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "math"
      ]
    },
    "B": {
      "name": "Nastya Studies Informatics",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Nastya and an Array",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "sortings"
      ]
    }
  },
  "991": {
    "F": {
      "name": "Concise and clear",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2700,
      "tags": [
        "brute force",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "E": {
      "name": "Bus Number",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "combinatorics",
        "math"
      ]
    },
    "D": {
      "name": "Bishwock",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Candies",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "implementation"
      ]
    },
    "B": {
      "name": "Getting an A",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "If at first you don't succeed...",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "990": {
    "G": {
      "name": "GCD Counting",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "divide and conquer",
        "dp",
        "dsu",
        "number theory",
        "trees"
      ]
    },
    "F": {
      "name": "Flow Control",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "E": {
      "name": "Post Lamps",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "brute force",
        "greedy"
      ]
    },
    "D": {
      "name": "Graph And Its Complement",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "graphs",
        "implementation"
      ]
    },
    "C": {
      "name": "Bracket Sequences Concatenation Problem",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "implementation"
      ]
    },
    "B": {
      "name": "Micro-World",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Commentary Boxes",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "989": {
    "E": {
      "name": "A Trance of Nightfall",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "dp",
        "geometry",
        "matrices",
        "probabilities"
      ]
    },
    "D": {
      "name": "A Shade of Moonlight",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "geometry",
        "math",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "A Mist of Florescence",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "graphs"
      ]
    },
    "B": {
      "name": "A Tide of Riverscape",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "strings"
      ]
    },
    "A": {
      "name": "A Blend of Springtime",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "988": {
    "F": {
      "name": "Rain and Umbrellas",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dp"
      ]
    },
    "E": {
      "name": "Divisibility by 25",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "brute force",
        "greedy"
      ]
    },
    "D": {
      "name": "Points and Powers of Two",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "brute force",
        "math"
      ]
    },
    "C": {
      "name": "Equal Sums",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Substrings Sort",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "sortings",
        "strings"
      ]
    },
    "A": {
      "name": "Diverse Team",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "987": {
    "C": {
      "name": "Three displays",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "dp",
        "implementation"
      ]
    },
    "B": {
      "name": "High School: Become Human",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Infinity Gauntlet",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "986": {
    "F": {
      "name": "Oppa Funcan Style Remastered",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3300,
      "tags": [
        "graphs",
        "math",
        "number theory",
        "shortest paths"
      ]
    },
    "E": {
      "name": "Prince's Problem",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2800,
      "tags": [
        "brute force",
        "data structures",
        "math",
        "number theory",
        "trees"
      ]
    },
    "D": {
      "name": "Perfect Encoding",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "fft",
        "math"
      ]
    },
    "C": {
      "name": "AND Graph",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "B": {
      "name": "Petr and Permutations",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "A": {
      "name": "Fair",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "graphs",
        "greedy",
        "number theory",
        "shortest paths"
      ]
    }
  },
  "985": {
    "G": {
      "name": "Team Players",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "combinatorics"
      ]
    },
    "F": {
      "name": "Isomorphic Strings",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "hashing",
        "strings"
      ]
    },
    "E": {
      "name": "Pencils and Boxes",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "two pointers"
      ]
    },
    "D": {
      "name": "Sand Fortress",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "binary search",
        "constructive algorithms",
        "math"
      ]
    },
    "C": {
      "name": "Liebig's Barrels",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Switches and Lamps",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Chess Placing",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    }
  },
  "984": {
    "B": {
      "name": "Minesweeper",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "sortings"
      ]
    }
  },
  "983": {
    "E": {
      "name": "NN country",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "binary search",
        "data structures",
        "trees"
      ]
    },
    "D": {
      "name": "Arkady and Rectangles",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3300,
      "tags": [
        "data structures"
      ]
    },
    "C": {
      "name": "Elevator",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "dp",
        "graphs",
        "shortest paths"
      ]
    },
    "B": {
      "name": "XOR-pyramid",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "dp"
      ]
    },
    "A": {
      "name": "Finite or not?",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "982": {
    "F": {
      "name": "The Meeting Place Cannot Be Changed",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "E": {
      "name": "Billiard",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "geometry",
        "number theory"
      ]
    },
    "D": {
      "name": "Shark",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "data structures",
        "dsu",
        "trees"
      ]
    },
    "C": {
      "name": "Cut 'em all!",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "B": {
      "name": "Bus of Characters",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Row",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "constructive algorithms"
      ]
    }
  },
  "981": {
    "H": {
      "name": "K Paths",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 3100,
      "tags": [
        "combinatorics",
        "data structures",
        "dp",
        "fft",
        "math"
      ]
    },
    "G": {
      "name": "Magic multisets",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 2500,
      "tags": [
        "data structures"
      ]
    },
    "F": {
      "name": "Round Marriage",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "graph matchings",
        "greedy"
      ]
    },
    "E": {
      "name": "Addition on Segments",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2200,
      "tags": [
        "bitmasks",
        "data structures",
        "divide and conquer",
        "dp"
      ]
    },
    "D": {
      "name": "Bookshelves",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1900,
      "tags": [
        "bitmasks",
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Useful Decomposition",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "implementation",
        "trees"
      ]
    },
    "B": {
      "name": "Businessmen Problems",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "sortings"
      ]
    },
    "A": {
      "name": "Antipalindrome",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    }
  },
  "980": {
    "F": {
      "name": "Cactus to Tree",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2900,
      "tags": [
        "dp",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "The Number Games",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "greedy",
        "trees"
      ]
    },
    "D": {
      "name": "Perfect Groups",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "dp",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Posterized",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "games",
        "greedy"
      ]
    },
    "B": {
      "name": "Marlin",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "Links and Pearls",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "979": {
    "E": {
      "name": "Kuro and Topological Parity",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2400,
      "tags": [
        "dp"
      ]
    },
    "D": {
      "name": "Kuro and GCD and XOR and SUM",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "data structures",
        "dp",
        "dsu",
        "greedy",
        "math",
        "number theory",
        "strings",
        "trees"
      ]
    },
    "C": {
      "name": "Kuro and Walking Route",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "trees"
      ]
    },
    "B": {
      "name": "Treasure Hunt",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Pizza, Pizza, Pizza!!!",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "math"
      ]
    }
  },
  "978": {
    "G": {
      "name": "Petya's Exams",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "F": {
      "name": "Mentors",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "binary search",
        "data structures",
        "implementation"
      ]
    },
    "E": {
      "name": "Bus Video System",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "D": {
      "name": "Almost Arithmetic Progression",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Letters",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "binary search",
        "implementation",
        "two pointers"
      ]
    },
    "B": {
      "name": "File Name",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "strings"
      ]
    },
    "A": {
      "name": "Remove Duplicates",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "977": {
    "F": {
      "name": "Consecutive Subsequence",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "dp"
      ]
    },
    "E": {
      "name": "Cyclic Components",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "D": {
      "name": "Divide by three, multiply by two",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "dfs and similar",
        "math",
        "sortings"
      ]
    },
    "C": {
      "name": "Less or Equal",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "sortings"
      ]
    },
    "B": {
      "name": "Two-gram",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Wrong Subtraction",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "976": {
    "F": {
      "name": "Minimal k-covering",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "flows",
        "graphs"
      ]
    },
    "E": {
      "name": "Well played!",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "D": {
      "name": "Degree Set",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "graphs",
        "implementation"
      ]
    },
    "C": {
      "name": "Nested Segments",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Lara Croft and the New Game",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Minimum Binary Number",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "975": {
    "E": {
      "name": "Hag's Khashba",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "geometry"
      ]
    },
    "D": {
      "name": "Ghosts",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "geometry",
        "math"
      ]
    },
    "C": {
      "name": "Valhalla Siege",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "binary search"
      ]
    },
    "B": {
      "name": "Mancala",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Aramic script",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "967": {
    "B": {
      "name": "Watering System",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Mind the Gap",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    }
  },
  "965": {
    "E": {
      "name": "Short Code",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "strings",
        "trees"
      ]
    },
    "D": {
      "name": "Single-use Stones",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "flows",
        "greedy",
        "two pointers"
      ]
    },
    "C": {
      "name": "Greedy Arkady",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "math"
      ]
    },
    "B": {
      "name": "Battleship",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Paper Airplanes",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "964": {
    "B": {
      "name": "Messages",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Splits",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "963": {
    "E": {
      "name": "Circles of Waiting",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "math"
      ]
    },
    "D": {
      "name": "Frequency of String",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "hashing",
        "string suffix structures",
        "strings"
      ]
    },
    "C": {
      "name": "Cutting Rectangle",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2600,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Destruction of a Tree",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "A": {
      "name": "Alternating Sum",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "math",
        "number theory"
      ]
    }
  },
  "962": {
    "G": {
      "name": "Visible Black Areas",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "data structures",
        "dsu",
        "geometry",
        "trees"
      ]
    },
    "F": {
      "name": "Simple Cycles Edges",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "Byteland, Berland and Disputed Cities",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "D": {
      "name": "Merge Equals",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "C": {
      "name": "Make a Square",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Students in Railway Carriage",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Equator",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    }
  },
  "961": {
    "G": {
      "name": "Partitions",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "combinatorics",
        "math",
        "number theory"
      ]
    },
    "F": {
      "name": "k-substrings",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "binary search",
        "hashing",
        "string suffix structures"
      ]
    },
    "E": {
      "name": "Tufurama",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Pair Of Lines",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "geometry"
      ]
    },
    "C": {
      "name": "Chessboard",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "bitmasks",
        "brute force",
        "implementation"
      ]
    },
    "B": {
      "name": "Lecture Sleep",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "data structures",
        "dp",
        "implementation",
        "two pointers"
      ]
    },
    "A": {
      "name": "Tetris",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "960": {
    "H": {
      "name": "Santa's Gift",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3100,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "G": {
      "name": "Bandit Blues",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2900,
      "tags": [
        "combinatorics",
        "dp",
        "fft",
        "math"
      ]
    },
    "F": {
      "name": "Pathwalks",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "dp",
        "graphs"
      ]
    },
    "E": {
      "name": "Alternating Tree",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "divide and conquer",
        "dp",
        "probabilities",
        "trees"
      ]
    },
    "D": {
      "name": "Full Binary Tree Queries",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "implementation",
        "trees"
      ]
    },
    "C": {
      "name": "Subsequence Counting",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Minimize the error",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Check the string",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    }
  },
  "959": {
    "F": {
      "name": "Mahmoud and Ehab and yet another xor task",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "dp",
        "math",
        "matrices"
      ]
    },
    "E": {
      "name": "Mahmoud and Ehab and the xor-MST",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "bitmasks",
        "dp",
        "graphs",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Mahmoud and Ehab and another array construction task",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Mahmoud and Ehab and the wrong algorithm",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "trees"
      ]
    },
    "B": {
      "name": "Mahmoud and Ehab and the message",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "dsu",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Mahmoud and Ehab and the even-odd game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "games",
        "math"
      ]
    }
  },
  "958": {
    "F3": {
      "name": "Lightsabers (hard)",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "fft"
      ]
    },
    "F2": {
      "name": "Lightsabers (medium)",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "binary search",
        "two pointers"
      ]
    },
    "F1": {
      "name": "Lightsabers (easy)",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "implementation"
      ]
    },
    "E3": {
      "name": "Guard Duty (hard)",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "geometry"
      ]
    },
    "E2": {
      "name": "Guard Duty (medium)",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "binary search",
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "E1": {
      "name": "Guard Duty (easy)",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "brute force",
        "geometry",
        "greedy",
        "math"
      ]
    },
    "D2": {
      "name": "Hyperspace Jump (hard)",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": []
    },
    "D1": {
      "name": "Hyperspace Jump (easy)",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "expression parsing",
        "math"
      ]
    },
    "C3": {
      "name": "Encryption (hard)",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "C2": {
      "name": "Encryption (medium)",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "dp"
      ]
    },
    "C1": {
      "name": "Encryption (easy)",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "brute force"
      ]
    },
    "B2": {
      "name": "Maximum Control (medium)",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "B1": {
      "name": "Maximum Control (easy)",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    },
    "A3": {
      "name": "Death Stars (hard)",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": []
    },
    "A2": {
      "name": "Death Stars (medium)",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "hashing",
        "strings"
      ]
    },
    "A1": {
      "name": "Death Stars (easy)",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "implementation"
      ]
    }
  },
  "957": {
    "A": {
      "name": "Tritonic Iridescence",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    }
  },
  "955": {
    "F": {
      "name": "Heaps",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2600,
      "tags": [
        "dp",
        "trees"
      ]
    },
    "E": {
      "name": "Icicles",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": []
    },
    "D": {
      "name": "Scissors",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "brute force",
        "strings"
      ]
    },
    "C": {
      "name": "Sad powers",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Not simply beatiful strings",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Feed the cat",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "954": {
    "I": {
      "name": "Yet Another String Matching Problem",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "fft",
        "math"
      ]
    },
    "H": {
      "name": "Path Counting",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "G": {
      "name": "Castle Defense",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "two pointers"
      ]
    },
    "F": {
      "name": "Runner's Problem",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dp",
        "matrices",
        "sortings"
      ]
    },
    "E": {
      "name": "Water Taps",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "binary search",
        "greedy",
        "sortings"
      ]
    },
    "D": {
      "name": "Fight Against Traffic",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "graphs",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Matrix Walk",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "implementation"
      ]
    },
    "B": {
      "name": "String Typing",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Diagonal Walking",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "952": {
    "G": {
      "name": "Puzzling Language",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "constructive algorithms"
      ]
    },
    "F": {
      "name": "2 + 2 != 4",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": []
    },
    "E": {
      "name": "Cheese Board",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": []
    },
    "D": {
      "name": "I'm Feeling Lucky!",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "probabilities"
      ]
    },
    "C": {
      "name": "Ravioli Sort",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    },
    "B": {
      "name": "A Map of the Cat",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "brute force",
        "interactive"
      ]
    },
    "A": {
      "name": "Quirky Quantifiers",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "950": {
    "B": {
      "name": "Intercepted Message",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Left-handers, Right-handers and Ambidexters",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "949": {
    "F": {
      "name": "Astronomy",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3300,
      "tags": [
        "geometry",
        "probabilities"
      ]
    },
    "E": {
      "name": "Binary Cards",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2700,
      "tags": [
        "brute force"
      ]
    },
    "D": {
      "name": "Curfew",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "brute force",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Data Center Maintenance",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1900,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "B": {
      "name": "A Leapfrog in the Array",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Zebras",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "greedy"
      ]
    }
  },
  "948": {
    "A": {
      "name": "Protect Sheep",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "brute force",
        "dfs and similar",
        "graphs",
        "implementation"
      ]
    }
  },
  "946": {
    "G": {
      "name": "Almost Increasing Array",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "F": {
      "name": "Fibonacci String Subsequences",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "combinatorics",
        "dp",
        "matrices"
      ]
    },
    "E": {
      "name": "Largest Beautiful Number",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "D": {
      "name": "Timetable",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "String Transformation",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "greedy",
        "strings"
      ]
    },
    "B": {
      "name": "Weird Subtraction Process",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Partition",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy"
      ]
    }
  },
  "940": {
    "F": {
      "name": "Machine Learning",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2600,
      "tags": [
        "brute force",
        "data structures"
      ]
    },
    "E": {
      "name": "Cashback",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "math"
      ]
    },
    "D": {
      "name": "Alena And The Heater",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "implementation"
      ]
    },
    "C": {
      "name": "Phone Numbers",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "implementation",
        "strings"
      ]
    },
    "B": {
      "name": "Our Tanya is Crying Out Loud",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "A": {
      "name": "Points on the line",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "greedy",
        "sortings"
      ]
    }
  },
  "939": {
    "F": {
      "name": "Cutlet",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "E": {
      "name": "Maximize!",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "greedy",
        "ternary search",
        "two pointers"
      ]
    },
    "D": {
      "name": "Love Rescue",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "strings"
      ]
    },
    "C": {
      "name": "Convenient For Everybody",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "two pointers"
      ]
    },
    "B": {
      "name": "Hamster Farm",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Love Triangle",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "graphs"
      ]
    }
  },
  "938": {
    "G": {
      "name": "Shortest Path Queries",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "bitmasks",
        "data structures",
        "dsu",
        "graphs"
      ]
    },
    "F": {
      "name": "Erasing Substrings",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "bitmasks",
        "dp",
        "greedy"
      ]
    },
    "E": {
      "name": "Max History",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "D": {
      "name": "Buy a Ticket",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "data structures",
        "graphs",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Constructing Tests",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "binary search",
        "brute force",
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Run For Your Prize",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "brute force",
        "greedy"
      ]
    },
    "A": {
      "name": "Word Correction",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "937": {
    "B": {
      "name": "Vile Grasshoppers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Olympiad",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "sortings"
      ]
    }
  },
  "936": {
    "E": {
      "name": "Iqea",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3400,
      "tags": [
        "data structures",
        "dfs and similar",
        "divide and conquer",
        "dsu",
        "shortest paths",
        "trees"
      ]
    },
    "D": {
      "name": "World of Tank",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3000,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Lock Puzzle",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "implementation",
        "strings"
      ]
    },
    "B": {
      "name": "Sleepy Game",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "dfs and similar",
        "dp",
        "games",
        "graphs"
      ]
    },
    "A": {
      "name": "Save Energy!",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "implementation",
        "math"
      ]
    }
  },
  "935": {
    "F": {
      "name": "Fafa and Array",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "E": {
      "name": "Fafa and Ancient Mathematics",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "D": {
      "name": "Fafa and Ancient Alphabet",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1900,
      "tags": [
        "math",
        "probabilities"
      ]
    },
    "C": {
      "name": "Fifa and Fafa",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1600,
      "tags": [
        "geometry"
      ]
    },
    "B": {
      "name": "Fafa and the Gates",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Fafa and his Company",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "934": {
    "B": {
      "name": "A Prosperous Lot",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "A Compatible Pair",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "games"
      ]
    }
  },
  "933": {
    "E": {
      "name": "A Preponderant Reunion",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3200,
      "tags": [
        "constructive algorithms",
        "dp"
      ]
    },
    "D": {
      "name": "A Creative Cutout",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2900,
      "tags": [
        "brute force",
        "combinatorics",
        "math"
      ]
    },
    "C": {
      "name": "A Colourful Prospect",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2700,
      "tags": [
        "geometry",
        "graphs"
      ]
    },
    "B": {
      "name": "A Determined Cleanup",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2000,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "A Twisty Movement",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "dp"
      ]
    }
  },
  "932": {
    "G": {
      "name": "Palindrome Partition",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2900,
      "tags": [
        "dp",
        "string suffix structures",
        "strings"
      ]
    },
    "F": {
      "name": "Escape Through Leaf",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "dp",
        "geometry"
      ]
    },
    "E": {
      "name": "Team Work",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "Tree",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "dp",
        "trees"
      ]
    },
    "C": {
      "name": "Permutation Cycle",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Recursive Queries",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "binary search",
        "data structures",
        "dfs and similar"
      ]
    },
    "A": {
      "name": "Palindromic Supersequence",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms"
      ]
    }
  },
  "931": {
    "C": {
      "name": "Laboratory Work",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1700,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "World Cup",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "Friends Meeting",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "930": {
    "E": {
      "name": "Coins Exhibition",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "data structures",
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "Game with Tokens",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "games",
        "implementation"
      ]
    },
    "C": {
      "name": "Teodor is not a liar!",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "B": {
      "name": "Game with String",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "implementation",
        "probabilities",
        "strings"
      ]
    },
    "A": {
      "name": "Peculiar apple-tree",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "dfs and similar",
        "graphs",
        "trees"
      ]
    }
  },
  "929": {
    "D": {
      "name": "\u041f\u043e\u0433\u0440\u0430\u043d\u0438\u0447\u043d\u044b\u0435 \u0432\u0440\u0430\u0442\u0430",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": []
    },
    "C": {
      "name": "\u041a\u0440\u0430\u0441\u0438\u0432\u0430\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u0430",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1700,
      "tags": [
        "*special",
        "combinatorics",
        "math"
      ]
    },
    "B": {
      "name": "\u041c\u0435\u0441\u0442\u0430 \u0432 \u0441\u0430\u043c\u043e\u043b\u0451\u0442\u0435",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "A": {
      "name": "\u041f\u0440\u043e\u043a\u0430\u0442 \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434\u043e\u0432",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "*special",
        "greedy",
        "implementation"
      ]
    }
  },
  "928": {
    "D": {
      "name": "Autocompletion",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 1900,
      "tags": [
        "*special",
        "strings",
        "trees"
      ]
    },
    "C": {
      "name": "Dependency management",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "*special",
        "graphs",
        "implementation"
      ]
    },
    "B": {
      "name": "Chat",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "*special",
        "dp"
      ]
    },
    "A": {
      "name": "Login Verification",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "*special",
        "strings"
      ]
    }
  },
  "927": {
    "A": {
      "name": "BuberPool Taxi Optimization",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "*special",
        "interactive"
      ]
    }
  },
  "926": {
    "J": {
      "name": "Segments",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "data structures"
      ]
    },
    "I": {
      "name": "A Vital Problem",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": []
    },
    "H": {
      "name": "Endless Roses Most Beautiful",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": []
    },
    "G": {
      "name": "Large Bouquets",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": []
    },
    "F": {
      "name": "Mobile Communications",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": []
    },
    "E": {
      "name": "Merge Equal Elements",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "data structures"
      ]
    },
    "D": {
      "name": "Choose Place",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": []
    },
    "C": {
      "name": "Is This a Zebra?",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "implementation"
      ]
    },
    "B": {
      "name": "Add Points",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": []
    },
    "A": {
      "name": "2-3-numbers",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "925": {
    "F": {
      "name": "Parametric Circulation",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3100,
      "tags": [
        "binary search",
        "flows"
      ]
    },
    "E": {
      "name": "May Holidays",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2900,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "D": {
      "name": "Aztec Catacombs",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "constructive algorithms"
      ]
    },
    "C": {
      "name": "Big Secret",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "B": {
      "name": "Resource Distribution",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Stairs and Elevators",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "binary search"
      ]
    }
  },
  "924": {
    "F": {
      "name": "Minimal Subset Difference",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3200,
      "tags": [
        "dp"
      ]
    },
    "E": {
      "name": "Wardrobe",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2700,
      "tags": []
    },
    "D": {
      "name": "Contact ATC",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": []
    },
    "C": {
      "name": "Riverside Curio",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1700,
      "tags": [
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "B": {
      "name": "Three-level Laser",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "greedy",
        "two pointers"
      ]
    },
    "A": {
      "name": "Mystical Mosaic",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "923": {
    "F": {
      "name": "Public Service",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3200,
      "tags": [
        "constructive algorithms",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "Perpetual Subtraction",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3100,
      "tags": [
        "fft",
        "math",
        "matrices"
      ]
    },
    "D": {
      "name": "Picking Strings",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "implementation",
        "strings"
      ]
    },
    "C": {
      "name": "Perfect Security",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "data structures",
        "greedy",
        "strings",
        "trees"
      ]
    },
    "B": {
      "name": "Producing Snow",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "A": {
      "name": "Primal Sport",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "math",
        "number theory"
      ]
    }
  },
  "922": {
    "F": {
      "name": "Divisibility",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy",
        "number theory"
      ]
    },
    "E": {
      "name": "Birds",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "dp"
      ]
    },
    "D": {
      "name": "Robot Vacuum Cleaner",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Cave Painting",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "number theory"
      ]
    },
    "B": {
      "name": "Magic Forest",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "brute force"
      ]
    },
    "A": {
      "name": "Cloning Toys",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    }
  },
  "921": {
    "14": {
      "name": "Labyrinth-14",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": []
    },
    "13": {
      "name": "Labyrinth-13",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": []
    },
    "12": {
      "name": "Labyrinth-12",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": []
    },
    "11": {
      "name": "Labyrinth-11",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": []
    },
    "10": {
      "name": "Labyrinth-10",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": []
    },
    "09": {
      "name": "Labyrinth-9",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": []
    },
    "08": {
      "name": "Labyrinth-8",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": []
    },
    "07": {
      "name": "Labyrinth-7",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": []
    },
    "06": {
      "name": "Labyrinth-6",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": []
    },
    "05": {
      "name": "Labyrinth-5",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": []
    },
    "04": {
      "name": "Labyrinth-4",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": []
    },
    "03": {
      "name": "Labyrinth-3",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": []
    },
    "02": {
      "name": "Labyrinth-2",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": []
    },
    "01": {
      "name": "Labyrinth-1",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": []
    }
  },
  "920": {
    "G": {
      "name": "List Of Integers",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "combinatorics",
        "math",
        "number theory"
      ]
    },
    "F": {
      "name": "SUM and REPLACE",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "brute force",
        "data structures",
        "dsu",
        "number theory"
      ]
    },
    "E": {
      "name": "Connected Components?",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "D": {
      "name": "Tanks",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Swap Adjacent Elements",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "dfs and similar",
        "greedy",
        "math",
        "sortings",
        "two pointers"
      ]
    },
    "B": {
      "name": "Tea Queue",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Water The Garden",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "919": {
    "F": {
      "name": "A Game With Numbers",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "games",
        "graphs",
        "shortest paths"
      ]
    },
    "E": {
      "name": "Congruence Equation",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "chinese remainder theorem",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Substring",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs"
      ]
    },
    "C": {
      "name": "Seat Arrangements",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "B": {
      "name": "Perfect Number",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1100,
      "tags": [
        "binary search",
        "brute force",
        "dp",
        "implementation",
        "number theory"
      ]
    },
    "A": {
      "name": "Supermarket",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    }
  },
  "918": {
    "B": {
      "name": "Radio Station",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Eleven",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "917": {
    "E": {
      "name": "Upside Down",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3400,
      "tags": [
        "data structures",
        "string suffix structures",
        "strings",
        "trees"
      ]
    },
    "D": {
      "name": "Stranger Trees",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "dp",
        "math",
        "matrices",
        "trees"
      ]
    },
    "C": {
      "name": "Pollywog",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2900,
      "tags": [
        "combinatorics",
        "dp",
        "matrices"
      ]
    },
    "B": {
      "name": "MADMAX",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "dp",
        "games",
        "graphs"
      ]
    },
    "A": {
      "name": "The Monster",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "dp",
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "916": {
    "E": {
      "name": "Jamie and Tree",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "D": {
      "name": "Jamie and To-do List",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "interactive",
        "trees"
      ]
    },
    "C": {
      "name": "Jamie and Interesting Graph",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "graphs",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Jamie and Binary Sequence (changed after round)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "bitmasks",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Jamie and Alarm Snooze",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    }
  },
  "915": {
    "G": {
      "name": "Coprime Arrays",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "F": {
      "name": "Imbalance Value of a Tree",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "data structures",
        "dsu",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "Physical Education Lessons",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "data structures",
        "implementation",
        "sortings"
      ]
    },
    "D": {
      "name": "Almost Acyclic Graph",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "C": {
      "name": "Permute Digits",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "B": {
      "name": "Browser",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Garden",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "914": {
    "H": {
      "name": "Ember and Storm's Tree Game",
      "type": "PROGRAMMING",
      "points": 3750.0,
      "rating": 3400,
      "tags": [
        "combinatorics",
        "dp",
        "games",
        "trees"
      ]
    },
    "G": {
      "name": "Sum the Fibonacci",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 2600,
      "tags": [
        "bitmasks",
        "divide and conquer",
        "dp",
        "fft",
        "math"
      ]
    },
    "F": {
      "name": "Substrings in a String",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "bitmasks",
        "brute force",
        "data structures",
        "string suffix structures",
        "strings"
      ]
    },
    "E": {
      "name": "Palindromes in a Tree",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "data structures",
        "divide and conquer",
        "trees"
      ]
    },
    "D": {
      "name": "Bash and a Tough Math Puzzle",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "number theory"
      ]
    },
    "C": {
      "name": "Travelling Salesman and Special Numbers",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "combinatorics",
        "dp"
      ]
    },
    "B": {
      "name": "Conan and Agasa play a Card Game",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "games",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Perfect Squares",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    }
  },
  "913": {
    "H": {
      "name": "Don't Exceed",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3400,
      "tags": [
        "math",
        "probabilities"
      ]
    },
    "G": {
      "name": "Power Substring",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3200,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "F": {
      "name": "Strongly Connected Tournament",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2800,
      "tags": [
        "dp",
        "graphs",
        "math",
        "probabilities"
      ]
    },
    "E": {
      "name": "Logical Expression",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "dp",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Too Easy Problems",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Party Lemonade",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "bitmasks",
        "dp",
        "greedy"
      ]
    },
    "B": {
      "name": "Christmas Spruce",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1200,
      "tags": [
        "implementation",
        "trees"
      ]
    },
    "A": {
      "name": "Modular Exponentiation",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "912": {
    "E": {
      "name": "Prime Gift",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "dfs and similar",
        "math",
        "meet-in-the-middle",
        "number theory",
        "two pointers"
      ]
    },
    "D": {
      "name": "Fishes",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "graphs",
        "greedy",
        "probabilities",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Perun, Ult!",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "New Year's Eve",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "number theory"
      ]
    },
    "A": {
      "name": "Tricky Alchemy",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "911": {
    "G": {
      "name": "Mass Change Queries",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "data structures"
      ]
    },
    "F": {
      "name": "Tree Destruction",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "E": {
      "name": "Stack Sorting",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "D": {
      "name": "Inversion Counting",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "brute force",
        "math"
      ]
    },
    "C": {
      "name": "Three Garlands",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "brute force",
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Two Cakes",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "binary search",
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Nearest Minimums",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    }
  },
  "910": {
    "C": {
      "name": "Minimum Sum",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Door Frames",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "The Way to Home",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "implementation"
      ]
    }
  },
  "909": {
    "F": {
      "name": "AND-permutations",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms"
      ]
    },
    "E": {
      "name": "Coprocessor",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "greedy"
      ]
    },
    "D": {
      "name": "Colorful Points",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Python Indentation",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Segments",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Generate Login",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "greedy",
        "sortings"
      ]
    }
  },
  "908": {
    "H": {
      "name": "New Year and Boolean Bridges",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3100,
      "tags": []
    },
    "G": {
      "name": "New Year and Original Order",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2800,
      "tags": [
        "dp",
        "math"
      ]
    },
    "F": {
      "name": "New Year and Rainbow Roads",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "graphs",
        "greedy",
        "implementation"
      ]
    },
    "E": {
      "name": "New Year and Entity Enumeration",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "New Year and Arbitrary Arrangement",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2200,
      "tags": [
        "dp",
        "math",
        "probabilities"
      ]
    },
    "C": {
      "name": "New Year and Curling",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "geometry",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "New Year and Buggy Bot",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "New Year and Counting Cards",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "907": {
    "B": {
      "name": "Tic-Tac-Toe",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Masha and Bears",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "906": {
    "E": {
      "name": "Reverses",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3300,
      "tags": [
        "dp",
        "string suffix structures",
        "strings"
      ]
    },
    "D": {
      "name": "Power Tower",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "chinese remainder theorem",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Party",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "graphs"
      ]
    },
    "B": {
      "name": "Seating of Students",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Shockers",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "903": {
    "G": {
      "name": "Yet Another Maxflow Problem",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "data structures",
        "flows",
        "graphs"
      ]
    },
    "F": {
      "name": "Clear The Matrix",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "E": {
      "name": "Swapping Characters",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "brute force",
        "hashing",
        "implementation",
        "strings"
      ]
    },
    "D": {
      "name": "Almost Difference",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "data structures",
        "math"
      ]
    },
    "C": {
      "name": "Boxes Packing",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "The Modcrab",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Hungry Student Problem",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "902": {
    "B": {
      "name": "Coloring a Tree",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "dfs and similar",
        "dsu",
        "greedy"
      ]
    },
    "A": {
      "name": "Visiting a Friend",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "901": {
    "E": {
      "name": "Cyclic Cipher",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3300,
      "tags": [
        "fft",
        "math"
      ]
    },
    "D": {
      "name": "Weighting a Tree",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs"
      ]
    },
    "C": {
      "name": "Bipartite Segments",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "two pointers"
      ]
    },
    "B": {
      "name": "GCD of Polynomials",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Hashing Trees",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "trees"
      ]
    }
  },
  "900": {
    "E": {
      "name": "Maximum Questions",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "dp",
        "strings"
      ]
    },
    "D": {
      "name": "Unusual Sequences",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Remove Extra One",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "data structures",
        "math"
      ]
    },
    "B": {
      "name": "Position in Fraction",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Find Extra One",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "geometry",
        "implementation"
      ]
    }
  },
  "899": {
    "F": {
      "name": "Letters Removing",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "strings"
      ]
    },
    "E": {
      "name": "Segments Removal",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2000,
      "tags": [
        "data structures",
        "dsu",
        "flows",
        "implementation",
        "two pointers"
      ]
    },
    "D": {
      "name": "Shovel Sale",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "C": {
      "name": "Dividing the numbers",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "graphs",
        "math"
      ]
    },
    "B": {
      "name": "Months and Years",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Splitting in Teams",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    }
  },
  "898": {
    "F": {
      "name": "Restoring the Expression",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "hashing",
        "math"
      ]
    },
    "E": {
      "name": "Squares and not squares",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "D": {
      "name": "Alarm Clock",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1600,
      "tags": [
        "greedy"
      ]
    },
    "C": {
      "name": "Phone Numbers",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "B": {
      "name": "Proper Nutrition",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation",
        "number theory"
      ]
    },
    "A": {
      "name": "Rounding",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "897": {
    "B": {
      "name": "Chtholly's request",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "brute force"
      ]
    },
    "A": {
      "name": "Scarborough Fair",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "896": {
    "E": {
      "name": "Welcome home, Chtholly",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "data structures",
        "dsu"
      ]
    },
    "D": {
      "name": "Nephren Runs a Cinema",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "chinese remainder theorem",
        "combinatorics",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Willem, Chtholly and Seniorious",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "probabilities"
      ]
    },
    "B": {
      "name": "Ithea Plays With Chtholly",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "constructive algorithms",
        "games",
        "greedy",
        "interactive"
      ]
    },
    "A": {
      "name": "Nephren gives a riddle",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "dfs and similar"
      ]
    }
  },
  "895": {
    "E": {
      "name": "Eyes Closed",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "probabilities"
      ]
    },
    "D": {
      "name": "String Mark",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "combinatorics",
        "math",
        "strings"
      ]
    },
    "C": {
      "name": "Square Subsets",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2000,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "B": {
      "name": "XK Segments",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "math",
        "sortings",
        "two pointers"
      ]
    },
    "A": {
      "name": "Pizza Separation",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "894": {
    "E": {
      "name": "Ralph and Mushrooms",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "dp",
        "graphs"
      ]
    },
    "D": {
      "name": "Ralph And His Tour in Binary Country",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "data structures",
        "trees"
      ]
    },
    "C": {
      "name": "Marco and GCD Sequence",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "B": {
      "name": "Ralph And His Magic Field",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "QAQ",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "dp"
      ]
    }
  },
  "893": {
    "F": {
      "name": "Subtree Minimum Query",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "E": {
      "name": "Counting Arrays",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Credit Card",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Rumor",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "dfs and similar",
        "graphs",
        "greedy"
      ]
    },
    "B": {
      "name": "Beautiful Divisors",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Chess For Three",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "892": {
    "B": {
      "name": "Wrath",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation",
        "two pointers"
      ]
    },
    "A": {
      "name": "Greed",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "891": {
    "E": {
      "name": "Lust",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "combinatorics",
        "math",
        "matrices"
      ]
    },
    "D": {
      "name": "Sloth",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3100,
      "tags": [
        "dfs and similar",
        "dp",
        "graph matchings",
        "trees"
      ]
    },
    "C": {
      "name": "Envy",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "dsu",
        "graphs"
      ]
    },
    "B": {
      "name": "Gluttony",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "Pride",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "math",
        "number theory"
      ]
    }
  },
  "889": {
    "E": {
      "name": "Mod Mod Mod",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3000,
      "tags": [
        "binary search",
        "dp",
        "math"
      ]
    }
  },
  "888": {
    "G": {
      "name": "Xor-MST",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "data structures"
      ]
    },
    "F": {
      "name": "Connecting Vertices",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "dp",
        "graphs"
      ]
    },
    "E": {
      "name": "Maximum Subsequence",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "bitmasks",
        "divide and conquer",
        "meet-in-the-middle"
      ]
    },
    "D": {
      "name": "Almost Identity Permutations",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "C": {
      "name": "K-Dominant Character",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "binary search",
        "implementation",
        "two pointers"
      ]
    },
    "B": {
      "name": "Buggy Robot",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Local Extrema",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "887": {
    "F": {
      "name": "Row of Models",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2500,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "E": {
      "name": "Little Brother",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "binary search",
        "geometry",
        "sortings"
      ]
    },
    "D": {
      "name": "Ratings and Reality Shows",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "two pointers"
      ]
    },
    "C": {
      "name": "Solution for Cube",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "B": {
      "name": "Cubes for Masha",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Div. 64",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "886": {
    "F": {
      "name": "Symmetric Projections",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2900,
      "tags": [
        "geometry"
      ]
    },
    "E": {
      "name": "Maximum Element",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "Restoration of string",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "graphs",
        "implementation"
      ]
    },
    "C": {
      "name": "Petya and Catacombs",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "dsu",
        "greedy",
        "implementation",
        "trees"
      ]
    },
    "B": {
      "name": "Vlad and Cafes",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": []
    },
    "A": {
      "name": "ACM ICPC",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force"
      ]
    }
  },
  "884": {
    "F": {
      "name": "Anti-Palindromize",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "flows",
        "graphs",
        "greedy"
      ]
    },
    "E": {
      "name": "Binary Matrix",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "dsu"
      ]
    },
    "D": {
      "name": "Boxes And Balls",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "C": {
      "name": "Bertown Subway",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "dfs and similar",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Japanese Crosswords Strike Back",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Book Reading",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "883": {
    "M": {
      "name": "Quadcopter Competition",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "L": {
      "name": "Berland.Taxi",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "data structures"
      ]
    },
    "K": {
      "name": "Road Widening",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "J": {
      "name": "Renovation",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "greedy",
        "sortings"
      ]
    },
    "I": {
      "name": "Photo Processing",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "dp"
      ]
    },
    "H": {
      "name": "Palindromic Cut",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    },
    "G": {
      "name": "Orientation of Edges",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "F": {
      "name": "Lost in Transliteration",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "E": {
      "name": "Field of Wonders",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "D": {
      "name": "Packmen Strike Back",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "binary search",
        "dp",
        "math"
      ]
    },
    "C": {
      "name": "Downloading B++",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "binary search",
        "implementation"
      ]
    },
    "B": {
      "name": "Berland Army",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "constructive algorithms",
        "graphs",
        "greedy"
      ]
    },
    "A": {
      "name": "Automatic Door",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "implementation"
      ]
    }
  },
  "879": {
    "B": {
      "name": "Table Tennis",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "A": {
      "name": "Borya's Diagnosis",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "878": {
    "E": {
      "name": "Numbers on the blackboard",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3300,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "D": {
      "name": "Magic Breeding",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "bitmasks"
      ]
    },
    "C": {
      "name": "Tournament",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "graphs"
      ]
    },
    "B": {
      "name": "Teams Formation",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "A": {
      "name": "Short Program",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "bitmasks",
        "constructive algorithms"
      ]
    }
  },
  "877": {
    "F": {
      "name": "Ann and Books",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "flows",
        "hashing"
      ]
    },
    "E": {
      "name": "Danil and a Part-time Job",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2000,
      "tags": [
        "bitmasks",
        "data structures",
        "trees"
      ]
    },
    "D": {
      "name": "Olya and Energy Drinks",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Slava and tanks",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Nikita and string",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "dp"
      ]
    },
    "A": {
      "name": "Alex and broken contest",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "876": {
    "B": {
      "name": "Divisiblity of Differences",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "implementation",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Trip For Meal",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "math"
      ]
    }
  },
  "875": {
    "F": {
      "name": "Royal Questions",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "dsu",
        "graphs",
        "greedy"
      ]
    },
    "E": {
      "name": "Delivery Club",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "binary search",
        "data structures",
        "dp"
      ]
    },
    "D": {
      "name": "High Cry",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "bitmasks",
        "combinatorics",
        "data structures",
        "divide and conquer"
      ]
    },
    "C": {
      "name": "National Property",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "2-sat",
        "dfs and similar",
        "graphs",
        "implementation"
      ]
    },
    "B": {
      "name": "Sorting the Coins",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "dsu",
        "implementation",
        "sortings",
        "two pointers"
      ]
    },
    "A": {
      "name": "Classroom Watch",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "math"
      ]
    }
  },
  "873": {
    "F": {
      "name": "Forbidden Indices",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "dsu",
        "string suffix structures",
        "strings"
      ]
    },
    "E": {
      "name": "Awards For Contestants",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "brute force",
        "data structures",
        "dp"
      ]
    },
    "D": {
      "name": "Merge Sort",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "divide and conquer"
      ]
    },
    "C": {
      "name": "Strange Game On Matrix",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "greedy",
        "two pointers"
      ]
    },
    "B": {
      "name": "Balanced Substring",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "dp",
        "implementation"
      ]
    },
    "A": {
      "name": "Chores",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "871": {
    "E": {
      "name": "Restore the Tree",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2900,
      "tags": [
        "graphs",
        "greedy",
        "trees"
      ]
    }
  },
  "870": {
    "F": {
      "name": "Paths",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "number theory"
      ]
    },
    "E": {
      "name": "Points, Lines and Ready-made Titles",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "trees"
      ]
    },
    "D": {
      "name": "Something with XOR Queries",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "interactive",
        "probabilities"
      ]
    },
    "C": {
      "name": "Maximum splitting",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "dp",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Maximum of Maximums of Minimums",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Search for Pretty Integers",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "869": {
    "E": {
      "name": "The Untended Antiquity",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "hashing"
      ]
    },
    "D": {
      "name": "The Overdosing Ubiquity",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2800,
      "tags": [
        "brute force",
        "dfs and similar",
        "graphs"
      ]
    },
    "C": {
      "name": "The Intriguing Obsession",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "B": {
      "name": "The Eternal Immortality",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "The Artful Expedient",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "868": {
    "G": {
      "name": "El Toll Caves",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3300,
      "tags": [
        "math"
      ]
    },
    "F": {
      "name": "Yet Another Minimization Problem",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "divide and conquer",
        "dp"
      ]
    },
    "E": {
      "name": "Policeman and a Tree",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2700,
      "tags": [
        "dp",
        "graphs",
        "trees"
      ]
    },
    "D": {
      "name": "Huge Strings",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "implementation",
        "strings"
      ]
    },
    "C": {
      "name": "Qualification Rounds",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "dp"
      ]
    },
    "B": {
      "name": "Race Against Time",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Bark to Unlock",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 900,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    }
  },
  "867": {
    "A": {
      "name": "Between the Offices",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "865": {
    "G": {
      "name": "Flowers and Chocolate",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3300,
      "tags": [
        "combinatorics",
        "math",
        "matrices"
      ]
    },
    "F": {
      "name": "Egg Roulette",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3300,
      "tags": [
        "bitmasks",
        "brute force",
        "divide and conquer",
        "math",
        "meet-in-the-middle"
      ]
    },
    "E": {
      "name": "Hex Dyslexia",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3300,
      "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "graphs"
      ]
    },
    "D": {
      "name": "Buy Low Sell High",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy"
      ]
    },
    "C": {
      "name": "Gotta Go Fast",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "dp"
      ]
    },
    "B": {
      "name": "Ordering Pizza",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "sortings",
        "ternary search"
      ]
    },
    "A": {
      "name": "Save the problem!",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms"
      ]
    }
  },
  "864": {
    "F": {
      "name": "Cities Excursions",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "Fire",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "dp",
        "sortings"
      ]
    },
    "D": {
      "name": "Make a Permutation!",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1500,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Bus",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Polycarp and Letters",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Fair Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation",
        "sortings"
      ]
    }
  },
  "863": {
    "G": {
      "name": "Graphic Settings",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": []
    },
    "F": {
      "name": "Almost Permutation",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "flows"
      ]
    },
    "E": {
      "name": "Turn Off The TV",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "data structures",
        "sortings"
      ]
    },
    "D": {
      "name": "Yet Another Array Queries Problem",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "C": {
      "name": "1-2-3",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "graphs",
        "implementation"
      ]
    },
    "B": {
      "name": "Kayaking",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "brute force",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Quasi-palindrome",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "862": {
    "F": {
      "name": "Mahmoud and Ehab and the final stage",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2900,
      "tags": [
        "data structures",
        "strings"
      ]
    },
    "E": {
      "name": "Mahmoud and Ehab and the function",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "data structures",
        "sortings"
      ]
    },
    "D": {
      "name": "Mahmoud and Ehab and the binary string",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "divide and conquer",
        "interactive"
      ]
    },
    "C": {
      "name": "Mahmoud and Ehab and the xor",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Mahmoud and Ehab and the bipartiteness",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "A": {
      "name": "Mahmoud and Ehab and the MEX",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "860": {
    "E": {
      "name": "Arkady and a Nobody-men",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "dfs and similar",
        "trees"
      ]
    }
  },
  "859": {
    "G": {
      "name": "Circle of Numbers",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "math"
      ]
    },
    "F": {
      "name": "Ordering T-Shirts",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2800,
      "tags": [
        "greedy"
      ]
    },
    "E": {
      "name": "Desk Disorder",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "dsu",
        "graphs",
        "trees"
      ]
    },
    "D": {
      "name": "Third Month Insanity",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "dp",
        "probabilities",
        "trees"
      ]
    },
    "C": {
      "name": "Pie Rules",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "dp",
        "games"
      ]
    },
    "B": {
      "name": "Lazy Security Guard",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "geometry",
        "math"
      ]
    },
    "A": {
      "name": "Declined Finalists",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "858": {
    "F": {
      "name": "Wizard's Tour",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs"
      ]
    },
    "E": {
      "name": "Tests Renumeration",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "D": {
      "name": "Polycarp's phone book",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1600,
      "tags": [
        "data structures",
        "implementation",
        "sortings"
      ]
    },
    "C": {
      "name": "Did you mean...",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Which floor?",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "k-rounding",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    }
  },
  "856": {
    "F": {
      "name": "To Play or not to Play",
      "type": "PROGRAMMING",
      "rating": 3000,
      "tags": [
        "greedy"
      ]
    },
    "E": {
      "name": "Satellites",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": []
    },
    "D": {
      "name": "Masha and Cactus",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "dp",
        "trees"
      ]
    },
    "C": {
      "name": "Eleventh Birthday",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "B": {
      "name": "Similar Words",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "dp",
        "hashing",
        "strings",
        "trees"
      ]
    },
    "A": {
      "name": "Set Theory",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "brute force",
        "constructive algorithms"
      ]
    }
  },
  "855": {
    "G": {
      "name": "Harry Vs Voldemort",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3300,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
      ]
    },
    "F": {
      "name": "Nagini",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3100,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "E": {
      "name": "Salazar Slytherin's Locket",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "D": {
      "name": "Rowena Ravenclaw's Diadem",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "trees"
      ]
    },
    "C": {
      "name": "Helga Hufflepuff's Cup",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "dp",
        "trees"
      ]
    },
    "B": {
      "name": "Marvolo Gaunt's Ring",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "data structures",
        "dp"
      ]
    },
    "A": {
      "name": "Tom Riddle's Diary",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    }
  },
  "854": {
    "B": {
      "name": "Maxim Buys an Apartment",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Fraction",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "math"
      ]
    }
  },
  "853": {
    "E": {
      "name": "Lada Malina",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3400,
      "tags": [
        "data structures",
        "geometry"
      ]
    },
    "D": {
      "name": "Michael and Charging Stations",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Boredom",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2100,
      "tags": [
        "data structures"
      ]
    },
    "B": {
      "name": "Jury Meeting",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1800,
      "tags": [
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "A": {
      "name": "Planning",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1500,
      "tags": [
        "greedy"
      ]
    }
  },
  "852": {
    "I": {
      "name": "Dating",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "brute force",
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "H": {
      "name": "Bob and stages",
      "type": "PROGRAMMING",
      "rating": 3000,
      "tags": [
        "dp",
        "geometry"
      ]
    },
    "G": {
      "name": "Bathroom terminal",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "implementation"
      ]
    },
    "F": {
      "name": "Product transformation",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "combinatorics",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Casinos and travel",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dp"
      ]
    },
    "D": {
      "name": "Exploration plan",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "binary search",
        "flows",
        "graph matchings",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Property",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Neural Network country",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "dp",
        "matrices"
      ]
    },
    "A": {
      "name": "Digits",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    }
  },
  "851": {
    "B": {
      "name": "Arpa and an exam about geometry",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "geometry",
        "math"
      ]
    },
    "A": {
      "name": "Arpa and a research in Mexican wave",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "850": {
    "F": {
      "name": "Rainbow Balls",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "math"
      ]
    },
    "E": {
      "name": "Random Elections",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2800,
      "tags": [
        "bitmasks",
        "brute force",
        "divide and conquer",
        "fft",
        "math"
      ]
    },
    "D": {
      "name": "Tournament Construction",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2800,
      "tags": [
        "constructive algorithms",
        "dp",
        "graphs",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Arpa and a game with Mojtaba",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2200,
      "tags": [
        "bitmasks",
        "dp",
        "games"
      ]
    },
    "B": {
      "name": "Arpa and a list of numbers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "implementation",
        "number theory"
      ]
    },
    "A": {
      "name": "Five Dimensional Points",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "geometry",
        "math"
      ]
    }
  },
  "849": {
    "B": {
      "name": "Tell Your World",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "geometry"
      ]
    },
    "A": {
      "name": "Odds and Ends",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "848": {
    "E": {
      "name": "Days of Floral Colours",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3400,
      "tags": [
        "combinatorics",
        "divide and conquer",
        "dp",
        "fft",
        "math"
      ]
    },
    "D": {
      "name": "Shake It!",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2900,
      "tags": [
        "combinatorics",
        "dp",
        "flows",
        "graphs"
      ]
    },
    "C": {
      "name": "Goodbye Souvenir",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "divide and conquer"
      ]
    },
    "B": {
      "name": "Rooter's Song",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "data structures",
        "geometry",
        "implementation",
        "sortings",
        "two pointers"
      ]
    },
    "A": {
      "name": "From Y to Y",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms"
      ]
    }
  },
  "847": {
    "M": {
      "name": "Weather Tomorrow",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "L": {
      "name": "Berland SU Computer Network",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "hashing",
        "trees"
      ]
    },
    "K": {
      "name": "Travel Cards",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "J": {
      "name": "Students Initiation",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "binary search",
        "flows",
        "graphs"
      ]
    },
    "I": {
      "name": "Noise Level",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "dfs and similar",
        "implementation",
        "math"
      ]
    },
    "H": {
      "name": "Load Testing",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "greedy"
      ]
    },
    "G": {
      "name": "University Classes",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "implementation"
      ]
    },
    "F": {
      "name": "Berland Elections",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "E": {
      "name": "Packmen",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "binary search",
        "dp"
      ]
    },
    "D": {
      "name": "Dog Show",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy"
      ]
    },
    "C": {
      "name": "Sum of Nestings",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Preparing for Merge Sort",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "A": {
      "name": "Union of Doubly Linked Lists",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "implementation"
      ]
    }
  },
  "846": {
    "F": {
      "name": "Random Query",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "data structures",
        "math",
        "probabilities",
        "two pointers"
      ]
    },
    "E": {
      "name": "Chemistry in Berland",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "dfs and similar",
        "greedy",
        "trees"
      ]
    },
    "D": {
      "name": "Monitor",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "C": {
      "name": "Four Segments",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "brute force",
        "data structures",
        "dp"
      ]
    },
    "B": {
      "name": "Math Show",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "brute force",
        "greedy"
      ]
    },
    "A": {
      "name": "Curriculum Vitae",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "845": {
    "G": {
      "name": "Shortest Path Problem?",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "dfs and similar",
        "graphs",
        "math"
      ]
    },
    "F": {
      "name": "Guards In The Storehouse",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "E": {
      "name": "Fire in the City",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "D": {
      "name": "Driving Test",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Two TVs",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Luba And The Ticket",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Chess Tourney",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "implementation",
        "sortings"
      ]
    }
  },
  "844": {
    "B": {
      "name": "Rectangles",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "A": {
      "name": "Diversity",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "implementation",
        "strings"
      ]
    }
  },
  "843": {
    "E": {
      "name": "Maximum Flow",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3000,
      "tags": [
        "flows",
        "graphs"
      ]
    },
    "D": {
      "name": "Dynamic Shortest Path",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3400,
      "tags": [
        "graphs",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Upgrading Tree",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2600,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "math",
        "trees"
      ]
    },
    "B": {
      "name": "Interactive LowerBound",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "interactive",
        "probabilities"
      ]
    },
    "A": {
      "name": "Sorting by Subsequences",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "dfs and similar",
        "dsu",
        "implementation",
        "math",
        "sortings"
      ]
    }
  },
  "842": {
    "E": {
      "name": "Nikita and game",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "binary search",
        "dfs and similar",
        "divide and conquer",
        "graphs",
        "trees"
      ]
    },
    "D": {
      "name": "Vitya and Strange Lesson",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "C": {
      "name": "Ilya And The Tree",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "graphs",
        "math",
        "number theory",
        "trees"
      ]
    },
    "B": {
      "name": "Gleb And Pizza",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "geometry"
      ]
    },
    "A": {
      "name": "Kirill And The Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "two pointers"
      ]
    }
  },
  "841": {
    "B": {
      "name": "Godsend",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "games",
        "math"
      ]
    },
    "A": {
      "name": "Generous Kefa",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "840": {
    "E": {
      "name": "In a Trap",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3200,
      "tags": [
        "trees"
      ]
    },
    "D": {
      "name": "Destiny",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "probabilities"
      ]
    },
    "C": {
      "name": "On the Bench",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "B": {
      "name": "Leha and another game about graph",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "data structures",
        "dfs and similar",
        "dp",
        "graphs"
      ]
    },
    "A": {
      "name": "Leha and Function",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "combinatorics",
        "greedy",
        "math",
        "number theory",
        "sortings"
      ]
    }
  },
  "839": {
    "E": {
      "name": "Mother of Dragons",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "brute force",
        "graphs",
        "math",
        "meet-in-the-middle"
      ]
    },
    "D": {
      "name": "Winter is here",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Journey",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "probabilities",
        "trees"
      ]
    },
    "B": {
      "name": "Game of the Rows",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Arya and Bran",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "838": {
    "F": {
      "name": "Expected Earnings",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": []
    },
    "E": {
      "name": "Convex Countour",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "dp"
      ]
    },
    "D": {
      "name": "Airplane Arrangements",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Future Failure",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "dp",
        "games"
      ]
    },
    "B": {
      "name": "Diverging Directions",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "data structures",
        "dfs and similar",
        "trees"
      ]
    },
    "A": {
      "name": "Binary Blocks",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "brute force"
      ]
    }
  },
  "837": {
    "G": {
      "name": "Functions On The Segments",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "data structures"
      ]
    },
    "F": {
      "name": "Prefix Sums",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "binary search",
        "brute force",
        "combinatorics",
        "math",
        "matrices"
      ]
    },
    "E": {
      "name": "Vasya's Function",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "binary search",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Round Subset",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dp",
        "math"
      ]
    },
    "C": {
      "name": "Two Seals",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "B": {
      "name": "Flag of Berland",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Text Volume",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "835": {
    "F": {
      "name": "Roads in the Kingdom",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2500,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "The penguin's game",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "constructive algorithms",
        "interactive"
      ]
    },
    "D": {
      "name": "Palindromic characteristics",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "dp",
        "hashing",
        "strings"
      ]
    },
    "C": {
      "name": "Star sky",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1600,
      "tags": [
        "dp",
        "implementation"
      ]
    },
    "B": {
      "name": "The number on the board",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1100,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Key races",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "834": {
    "B": {
      "name": "The Festive Evening",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "A": {
      "name": "The Useless Toy",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "833": {
    "E": {
      "name": "Caramel Clouds",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3400,
      "tags": [
        "data structures",
        "dp",
        "sortings"
      ]
    },
    "D": {
      "name": "Red-Black Cobweb",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "divide and conquer",
        "implementation",
        "trees"
      ]
    },
    "C": {
      "name": "Ever-Hungry Krakozyabra",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2700,
      "tags": [
        "brute force",
        "combinatorics",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "The Bakery",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "data structures",
        "divide and conquer",
        "dp",
        "two pointers"
      ]
    },
    "A": {
      "name": "The Meaningless Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "math",
        "number theory"
      ]
    }
  },
  "832": {
    "E": {
      "name": "Vasya and Shifts",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "matrices"
      ]
    },
    "D": {
      "name": "Misha, Grisha and Underground",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "C": {
      "name": "Strange Radiation",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Petya and Exam",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Sasha and Sticks",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "games",
        "math"
      ]
    }
  },
  "831": {
    "C": {
      "name": "Jury Marks",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Keyboard Layouts",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Unimodal Array",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "830": {
    "E": {
      "name": "Perpetual Motion Machine",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3100,
      "tags": [
        "constructive algorithms",
        "dp",
        "graphs",
        "implementation",
        "math",
        "trees"
      ]
    },
    "D": {
      "name": "Singer House",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2800,
      "tags": [
        "combinatorics",
        "dp",
        "graphs",
        "trees"
      ]
    },
    "C": {
      "name": "Bamboo Partition",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "data structures",
        "implementation",
        "math",
        "number theory",
        "sortings",
        "two pointers"
      ]
    },
    "B": {
      "name": "Cards Sorting",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "data structures",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Office Keys",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "brute force",
        "dp",
        "greedy",
        "sortings"
      ]
    }
  },
  "828": {
    "B": {
      "name": "Black Square",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Restaurant Tables",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    }
  },
  "827": {
    "F": {
      "name": "Dirty Arkady's Kitchen",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3200,
      "tags": [
        "data structures",
        "dp",
        "graphs",
        "shortest paths"
      ]
    },
    "E": {
      "name": "Rusty String",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2700,
      "tags": [
        "fft",
        "math",
        "strings"
      ]
    },
    "D": {
      "name": "Best Edge Weight",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "C": {
      "name": "DNA Evolution",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "strings"
      ]
    },
    "B": {
      "name": "High Load",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "trees"
      ]
    },
    "A": {
      "name": "String Reconstruction",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "data structures",
        "greedy",
        "sortings",
        "strings"
      ]
    }
  },
  "825": {
    "G": {
      "name": "Tree Queries",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "F": {
      "name": "String Compression",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "dp",
        "hashing",
        "string suffix structures",
        "strings"
      ]
    },
    "E": {
      "name": "Minimal Labels",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "greedy"
      ]
    },
    "D": {
      "name": "Suitable Replacement",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "binary search",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Multi-judge Solving",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Five-In-a-Row",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Binary Protocol",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    }
  },
  "822": {
    "F": {
      "name": "Madness",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "trees"
      ]
    },
    "E": {
      "name": "Liar",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "dp",
        "hashing",
        "string suffix structures"
      ]
    },
    "D": {
      "name": "My pretty girl Noora",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Hacker, pack your bags!",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Crossword solving",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "I'm bored with life",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math",
        "number theory"
      ]
    }
  },
  "821": {
    "E": {
      "name": "Okabe and El Psy Kongroo",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "dp",
        "matrices"
      ]
    },
    "D": {
      "name": "Okabe and City",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "graphs",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Okabe and Boxes",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "data structures",
        "greedy",
        "trees"
      ]
    },
    "B": {
      "name": "Okabe and Banana Trees",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "math"
      ]
    },
    "A": {
      "name": "Okabe and Future Gadget Laboratory",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "820": {
    "B": {
      "name": "Mister B and Angle in Polygon",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "geometry",
        "math"
      ]
    },
    "A": {
      "name": "Mister B and Book Reading",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "819": {
    "E": {
      "name": "Mister B and Flight to the Moon",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "constructive algorithms",
        "graphs"
      ]
    },
    "D": {
      "name": "Mister B and Astronomers",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "number theory"
      ]
    },
    "C": {
      "name": "Mister B and Beacons on Field",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2900,
      "tags": [
        "number theory"
      ]
    },
    "B": {
      "name": "Mister B and PR Shifts",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Mister B and Boring Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 2200,
      "tags": [
        "games",
        "greedy"
      ]
    }
  },
  "818": {
    "G": {
      "name": "Four Melodies",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "flows",
        "graphs"
      ]
    },
    "F": {
      "name": "Level Generation",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "binary search",
        "math",
        "ternary search"
      ]
    },
    "E": {
      "name": "Card Game Again",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "data structures",
        "number theory",
        "two pointers"
      ]
    },
    "D": {
      "name": "Multicolored Cars",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "C": {
      "name": "Sofa Thief",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "B": {
      "name": "Permutation Game",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Diplomas and Certificates",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "817": {
    "F": {
      "name": "MEX Queries",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "binary search",
        "data structures",
        "trees"
      ]
    },
    "E": {
      "name": "Choosing The Commander",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "bitmasks",
        "data structures",
        "trees"
      ]
    },
    "D": {
      "name": "Imbalanced Array",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "data structures",
        "divide and conquer",
        "dsu",
        "sortings"
      ]
    },
    "C": {
      "name": "Really Big Numbers",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "binary search",
        "brute force",
        "dp",
        "math"
      ]
    },
    "B": {
      "name": "Makes And The Product",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "combinatorics",
        "implementation",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Treasure Hunt",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "implementation",
        "math",
        "number theory"
      ]
    }
  },
  "816": {
    "B": {
      "name": "Karen and Coffee",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "binary search",
        "data structures",
        "implementation"
      ]
    },
    "A": {
      "name": "Karen and Morning",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "815": {
    "E": {
      "name": "Karen and Neighborhood",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2900,
      "tags": [
        "binary search",
        "constructive algorithms",
        "implementation"
      ]
    },
    "D": {
      "name": "Karen and Cards",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2800,
      "tags": [
        "binary search",
        "combinatorics",
        "data structures",
        "geometry"
      ]
    },
    "C": {
      "name": "Karen and Supermarket",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "brute force",
        "dp",
        "trees"
      ]
    },
    "B": {
      "name": "Karen and Test",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "combinatorics",
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Karen and Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    }
  },
  "814": {
    "E": {
      "name": "An unavoidable detour for home",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "combinatorics",
        "dp",
        "graphs",
        "shortest paths"
      ]
    },
    "D": {
      "name": "An overnight dance in discotheque",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "dp",
        "geometry",
        "greedy",
        "trees"
      ]
    },
    "C": {
      "name": "An impassioned circulation of affection",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "dp",
        "strings",
        "two pointers"
      ]
    },
    "B": {
      "name": "An express train to reveries",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "An abandoned sentiment from past",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "sortings"
      ]
    }
  },
  "813": {
    "F": {
      "name": "Bipartite Checking",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "data structures",
        "dsu",
        "graphs"
      ]
    },
    "E": {
      "name": "Army Creation",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "D": {
      "name": "Two Melodies",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "dp",
        "flows"
      ]
    },
    "C": {
      "name": "The Tag Game",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "B": {
      "name": "The Golden Age",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "brute force",
        "math"
      ]
    },
    "A": {
      "name": "The Contest",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    }
  },
  "812": {
    "E": {
      "name": "Sagheer and Apple Tree",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "games",
        "trees"
      ]
    },
    "D": {
      "name": "Sagheer and Kindergarten",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "dfs and similar",
        "graphs",
        "implementation",
        "trees"
      ]
    },
    "C": {
      "name": "Sagheer and Nubian Market",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "sortings"
      ]
    },
    "B": {
      "name": "Sagheer, the Hausmeister",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "bitmasks",
        "brute force",
        "dp"
      ]
    },
    "A": {
      "name": "Sagheer and Crossroads",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    }
  },
  "811": {
    "E": {
      "name": "Vladik and Entertaining Flags",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "dsu",
        "graphs"
      ]
    },
    "D": {
      "name": "Vladik and Favorite Game",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "interactive"
      ]
    },
    "C": {
      "name": "Vladik and Memorable Trip",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "dp",
        "implementation"
      ]
    },
    "B": {
      "name": "Vladik and Complicated Book",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Vladik and Courtesy",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "810": {
    "B": {
      "name": "Summer sell-off",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Straight <<A>>",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "809": {
    "E": {
      "name": "Surprise me!",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "divide and conquer",
        "math",
        "number theory",
        "trees"
      ]
    },
    "D": {
      "name": "Hitchhiking in the Baltic States",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "C": {
      "name": "Find a car",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2600,
      "tags": [
        "combinatorics",
        "divide and conquer",
        "dp"
      ]
    },
    "B": {
      "name": "Glad to see you!",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "interactive"
      ]
    },
    "A": {
      "name": "Do you want a date?",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "implementation",
        "math",
        "sortings"
      ]
    }
  },
  "808": {
    "G": {
      "name": "Anthem of Berland",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "dp",
        "strings"
      ]
    },
    "F": {
      "name": "Card Game",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "binary search",
        "flows",
        "graphs"
      ]
    },
    "E": {
      "name": "Selling Souvenirs",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "binary search",
        "dp",
        "greedy",
        "ternary search"
      ]
    },
    "D": {
      "name": "Array Division",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "data structures",
        "implementation"
      ]
    },
    "C": {
      "name": "Tea Party",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Average Sleep Time",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "data structures",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Lucky Year",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "807": {
    "B": {
      "name": "T-Shirt Hunt",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Is it rated?",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation",
        "sortings"
      ]
    }
  },
  "805": {
    "B": {
      "name": "3-palindrome",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "Fake NP",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "804": {
    "F": {
      "name": "Fake bullions",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3400,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "dp",
        "graphs",
        "number theory"
      ]
    },
    "E": {
      "name": "The same permutation ",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "constructive algorithms"
      ]
    },
    "D": {
      "name": "Expected diameter of a tree",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "brute force",
        "dfs and similar",
        "dp",
        "sortings",
        "trees"
      ]
    },
    "C": {
      "name": "Ice cream coloring",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "greedy"
      ]
    },
    "B": {
      "name": "Minimum number of steps",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "combinatorics",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Find Amir",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    }
  },
  "803": {
    "G": {
      "name": "Periodic RMQ Problem",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "data structures"
      ]
    },
    "F": {
      "name": "Coprime Subsequences",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "bitmasks",
        "combinatorics",
        "number theory"
      ]
    },
    "E": {
      "name": "Roma and Poker",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "dp",
        "graphs"
      ]
    },
    "D": {
      "name": "Magazine Ad",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "greedy"
      ]
    },
    "C": {
      "name": "Maximal GCD",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Distances to Zero",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "Maximal Binary Matrix",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "constructive algorithms"
      ]
    }
  },
  "802": {
    "O": {
      "name": "April Fools' Problem (hard)",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "binary search",
        "data structures",
        "flows"
      ]
    },
    "N": {
      "name": "April Fools' Problem (medium)",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "binary search",
        "flows",
        "graphs"
      ]
    },
    "M": {
      "name": "April Fools' Problem (easy)",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "L": {
      "name": "Send the Fool Further! (hard)",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "dfs and similar",
        "dp",
        "math",
        "trees"
      ]
    },
    "K": {
      "name": "Send the Fool Further! (medium)",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dp",
        "trees"
      ]
    },
    "J": {
      "name": "Send the Fool Further! (easy)",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "I": {
      "name": "Fake News (hard)",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "string suffix structures"
      ]
    },
    "H": {
      "name": "Fake News (medium)",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "strings"
      ]
    },
    "G": {
      "name": "Fake News (easy)",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "F": {
      "name": "Marmots (hard)",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "math",
        "probabilities"
      ]
    },
    "E": {
      "name": "Marmots (medium)",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "math"
      ]
    },
    "D": {
      "name": "Marmots (easy)",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "math"
      ]
    },
    "C": {
      "name": "Heidi and Library (hard)",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "flows"
      ]
    },
    "B": {
      "name": "Heidi and Library (medium)",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "A": {
      "name": "Heidi and Library (easy)",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "greedy"
      ]
    }
  },
  "801": {
    "B": {
      "name": "Valued Keys",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "constructive algorithms",
        "greedy",
        "strings"
      ]
    },
    "A": {
      "name": "Vicious Keyboard",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "brute force"
      ]
    }
  },
  "799": {
    "G": {
      "name": "Cut the pie",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3500,
      "tags": [
        "binary search",
        "data structures",
        "geometry"
      ]
    },
    "F": {
      "name": "Beautiful fountains rows",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3500,
      "tags": [
        "data structures"
      ]
    },
    "E": {
      "name": "Aquarium decoration",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "greedy",
        "two pointers"
      ]
    },
    "D": {
      "name": "Field expansion",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "dp",
        "meet-in-the-middle"
      ]
    },
    "C": {
      "name": "Fountains",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "data structures",
        "implementation"
      ]
    },
    "B": {
      "name": "T-shirt buying",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "A": {
      "name": "Carrot Cakes",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "798": {
    "E": {
      "name": "Mike and code of a permutation",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "constructive algorithms",
        "data structures",
        "graphs",
        "sortings"
      ]
    },
    "D": {
      "name": "Mike and distribution",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "sortings"
      ]
    },
    "C": {
      "name": "Mike and gcd problem",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "dp",
        "greedy",
        "number theory"
      ]
    },
    "B": {
      "name": "Mike and strings",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "dp",
        "strings"
      ]
    },
    "A": {
      "name": "Mike and palindrome",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "constructive algorithms",
        "strings"
      ]
    }
  },
  "797": {
    "F": {
      "name": "Mice and Holes",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "E": {
      "name": "Array Queries",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "brute force",
        "data structures",
        "dp"
      ]
    },
    "D": {
      "name": "Broken BST",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "data structures",
        "dfs and similar"
      ]
    },
    "C": {
      "name": "Minimal string",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "data structures",
        "greedy",
        "strings"
      ]
    },
    "B": {
      "name": "Odd sum",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "k-Factorization",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "implementation",
        "math",
        "number theory"
      ]
    }
  },
  "796": {
    "F": {
      "name": "Sequence Recovery",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "bitmasks",
        "data structures",
        "greedy"
      ]
    },
    "E": {
      "name": "Exam Cheating",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "dp"
      ]
    },
    "D": {
      "name": "Police Stations",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "graphs",
        "shortest paths",
        "trees"
      ]
    },
    "C": {
      "name": "Bank Hacking",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "data structures",
        "dp",
        "trees"
      ]
    },
    "B": {
      "name": "Find The Bone",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Buying A House",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "794": {
    "G": {
      "name": "Replace All",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3400,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "F": {
      "name": "Leha and security system",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2800,
      "tags": [
        "data structures"
      ]
    },
    "E": {
      "name": "Choosing Carrot",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "games",
        "math"
      ]
    },
    "D": {
      "name": "Labelling Cities",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "dfs and similar",
        "graphs",
        "hashing"
      ]
    },
    "C": {
      "name": "Naming Company",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1800,
      "tags": [
        "games",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Cutting Carrot",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "geometry",
        "math"
      ]
    },
    "A": {
      "name": "Bank Robbery",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "793": {
    "G": {
      "name": "Oleg and chess",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3400,
      "tags": [
        "data structures",
        "divide and conquer",
        "flows",
        "graph matchings"
      ]
    },
    "F": {
      "name": "Julia the snail",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "divide and conquer",
        "dp"
      ]
    },
    "E": {
      "name": "Problem of offices",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "D": {
      "name": "Presents in Bankopolis",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "dp",
        "graphs",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Mice problem",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "geometry",
        "implementation",
        "math",
        "sortings"
      ]
    },
    "B": {
      "name": "Igor and his way to work",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "graphs",
        "implementation",
        "shortest paths"
      ]
    },
    "A": {
      "name": "Oleg and shares",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "792": {
    "F": {
      "name": "Mages and Monsters",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": [
        "data structures",
        "geometry"
      ]
    },
    "E": {
      "name": "Colored Balls",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "greedy",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Paths in a Complete Binary Tree",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "bitmasks",
        "trees"
      ]
    },
    "C": {
      "name": "Divide by Three",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "dp",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Counting-out Rhyme",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "New Bus Route",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "implementation",
        "sortings"
      ]
    }
  },
  "791": {
    "A": {
      "name": "Bear and Big Brother",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "789": {
    "B": {
      "name": "Masha and geometric depression",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Anastasia and pebbles",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "788": {
    "E": {
      "name": "New task",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2900,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Finding lines",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3000,
      "tags": [
        "constructive algorithms",
        "divide and conquer",
        "interactive"
      ]
    },
    "C": {
      "name": "The Great Mixing",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "dfs and similar",
        "graphs",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Weird journey",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2100,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "A": {
      "name": "Functions again",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "dp",
        "two pointers"
      ]
    }
  },
  "787": {
    "B": {
      "name": "Not Afraid",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "The Monster",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    }
  },
  "786": {
    "E": {
      "name": "ALT",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3200,
      "tags": [
        "data structures",
        "flows",
        "graphs",
        "trees"
      ]
    },
    "D": {
      "name": "Rap God",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3400,
      "tags": [
        "data structures",
        "dfs and similar",
        "hashing",
        "strings",
        "trees"
      ]
    },
    "C": {
      "name": "Till I Collapse",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "divide and conquer"
      ]
    },
    "B": {
      "name": "Legacy",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "graphs",
        "shortest paths"
      ]
    },
    "A": {
      "name": "Berzerk",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "dp",
        "games"
      ]
    }
  },
  "785": {
    "E": {
      "name": "Anton and Permutation",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "data structures"
      ]
    },
    "D": {
      "name": "Anton and School - 2",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Anton and Fairy Tale",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "math"
      ]
    },
    "B": {
      "name": "Anton and Classes",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Anton and Polyhedrons",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "784": {
    "G": {
      "name": "BF Calculator",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "*special"
      ]
    },
    "F": {
      "name": "Crunching Numbers Just for You",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "E": {
      "name": "Twisted Circuit",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "*special",
        "brute force",
        "implementation"
      ]
    },
    "D": {
      "name": "Touchy-Feely Palindromes",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "C": {
      "name": "INTERCALC",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "B": {
      "name": "Kids' Riddle",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "*special"
      ]
    },
    "A": {
      "name": "Numbers Joke",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "*special"
      ]
    }
  },
  "780": {
    "H": {
      "name": "Intranet of Buses",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3100,
      "tags": [
        "binary search",
        "geometry",
        "implementation",
        "two pointers"
      ]
    },
    "G": {
      "name": "Andryusha and Nervous Barriers",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "F": {
      "name": "Axel and Marston in Bitland",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "dp",
        "graphs",
        "matrices"
      ]
    },
    "E": {
      "name": "Underground Lab",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs"
      ]
    },
    "D": {
      "name": "Innokenty and a Football League",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "2-sat",
        "graphs",
        "greedy",
        "implementation",
        "shortest paths",
        "strings"
      ]
    },
    "C": {
      "name": "Andryusha and Colored Balloons",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "B": {
      "name": "The Meeting Place Cannot Be Changed",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "binary search"
      ]
    },
    "A": {
      "name": "Andryusha and Socks",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "779": {
    "C": {
      "name": "Dishonest Sellers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Weird Rounding",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "greedy"
      ]
    },
    "A": {
      "name": "Pupils Redistribution",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "778": {
    "E": {
      "name": "Selling Numbers",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3000,
      "tags": [
        "dp",
        "sortings"
      ]
    },
    "D": {
      "name": "Parquet Re-laying",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2700,
      "tags": [
        "constructive algorithms"
      ]
    },
    "C": {
      "name": "Peterson Polyglot",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "dfs and similar",
        "dsu",
        "hashing",
        "strings",
        "trees"
      ]
    },
    "B": {
      "name": "Bitwise Formula",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar",
        "expression parsing",
        "implementation"
      ]
    },
    "A": {
      "name": "String Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "greedy",
        "strings"
      ]
    }
  },
  "777": {
    "E": {
      "name": "Hanoi Factory",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "data structures",
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "D": {
      "name": "Cloud of Hashtags",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "C": {
      "name": "Alyona and Spreadsheet",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "implementation",
        "two pointers"
      ]
    },
    "B": {
      "name": "Game of Credit Cards",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Shell Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "implementation",
        "math"
      ]
    }
  },
  "776": {
    "G": {
      "name": "Sherlock and the Encrypted Data",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 2900,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dp"
      ]
    },
    "F": {
      "name": "Sherlock's bet to Moriarty",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "constructive algorithms",
        "data structures",
        "divide and conquer",
        "geometry",
        "graphs",
        "implementation",
        "trees"
      ]
    },
    "E": {
      "name": "The Holmes Children",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2100,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "The Door Problem",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "2-sat",
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "C": {
      "name": "Molly's Chemicals",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Sherlock and his girlfriend",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "number theory"
      ]
    },
    "A": {
      "name": "A Serial Killer",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    }
  },
  "775": {
    "A": {
      "name": "University Schedule",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "*special"
      ]
    }
  },
  "774": {
    "L": {
      "name": "Bars",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "*special",
        "binary search"
      ]
    },
    "K": {
      "name": "Stepan and Vowels",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "*special",
        "implementation",
        "strings"
      ]
    },
    "J": {
      "name": "Stepan's Series",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "*special",
        "dp"
      ]
    },
    "I": {
      "name": "Composing Of String",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "*special",
        "dp"
      ]
    },
    "H": {
      "name": "Repairing Of String",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "*special",
        "constructive algorithms"
      ]
    },
    "G": {
      "name": "Perfectionist Arkadiy",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "*special",
        "number theory"
      ]
    },
    "F": {
      "name": "Pens And Days Of Week",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "*special",
        "binary search",
        "number theory"
      ]
    },
    "E": {
      "name": "Big Number and Remainder",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "*special",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Lie or Truth",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "*special",
        "constructive algorithms",
        "implementation",
        "sortings"
      ]
    },
    "C": {
      "name": "Maximum Number",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "*special",
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Significant Cups",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "*special",
        "binary search",
        "data structures",
        "two pointers"
      ]
    },
    "A": {
      "name": "Amusement Park",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "*special",
        "ternary search"
      ]
    }
  },
  "773": {
    "F": {
      "name": "Test Data Generation",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3400,
      "tags": [
        "combinatorics",
        "divide and conquer",
        "dp",
        "fft",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Blog Post Rating",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "sortings"
      ]
    },
    "D": {
      "name": "Perishable Roads",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "dp",
        "graphs",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Prairie Partition",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Dynamic Problem Scoring",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "greedy"
      ]
    },
    "A": {
      "name": "Success Rate",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "math"
      ]
    }
  },
  "772": {
    "E": {
      "name": "Verifying Kingdom",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3200,
      "tags": [
        "binary search",
        "divide and conquer",
        "interactive",
        "trees"
      ]
    },
    "D": {
      "name": "Varying Kibibits",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2700,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "C": {
      "name": "Vulnerable Kerbals",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "dp",
        "graphs",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Volatile Kite",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "geometry"
      ]
    },
    "A": {
      "name": "Voltage Keepsake",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "math"
      ]
    }
  },
  "771": {
    "F": {
      "name": "Bear and Isomorphic Points",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3300,
      "tags": [
        "geometry",
        "two pointers"
      ]
    },
    "E": {
      "name": "Bear and Rectangle Strips",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3000,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Bear and Company",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Bear and Tree Jumps",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "B": {
      "name": "Bear and Different Names",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "Bear and Friendship Condition",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 1500,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    }
  },
  "770": {
    "D": {
      "name": "Draw Brackets!",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "C": {
      "name": "Online Courses In BSU",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "*special",
        "dfs and similar",
        "graphs",
        "implementation"
      ]
    },
    "B": {
      "name": "Maximize Sum of Digits",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "*special",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "New Password",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "*special",
        "implementation"
      ]
    }
  },
  "769": {
    "D": {
      "name": "k-Interesting Pairs Of Integers",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "*special",
        "bitmasks",
        "brute force",
        "meet-in-the-middle"
      ]
    },
    "C": {
      "name": "Cycle In Maze",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "*special",
        "dfs and similar",
        "graphs",
        "greedy",
        "shortest paths"
      ]
    },
    "B": {
      "name": "News About Credit",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "*special",
        "greedy",
        "two pointers"
      ]
    },
    "A": {
      "name": "Year of University Entrance",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "*special",
        "implementation",
        "sortings"
      ]
    }
  },
  "768": {
    "G": {
      "name": "The Winds of Winter",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3300,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "F": {
      "name": "Barrels and boxes",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "combinatorics",
        "math",
        "number theory",
        "probabilities"
      ]
    },
    "E": {
      "name": "Game of Stones",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "bitmasks",
        "dp",
        "games"
      ]
    },
    "D": {
      "name": "Jon and Orbs",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2200,
      "tags": [
        "dp",
        "math",
        "probabilities"
      ]
    },
    "C": {
      "name": "Jon Snow and his Favourite Number",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "dp",
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Code For 1",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "divide and conquer"
      ]
    },
    "A": {
      "name": "Oath of the Night's Watch",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "constructive algorithms",
        "sortings"
      ]
    }
  },
  "767": {
    "E": {
      "name": "Change-free",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "greedy"
      ]
    },
    "D": {
      "name": "Cartons of milk",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Garland",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "B": {
      "name": "The Queue",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "greedy"
      ]
    },
    "A": {
      "name": "Snacktower",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "data structures",
        "implementation"
      ]
    }
  },
  "766": {
    "E": {
      "name": "Mahmoud and a xor trip",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "data structures",
        "dfs and similar",
        "dp",
        "math",
        "trees"
      ]
    },
    "D": {
      "name": "Mahmoud and a Dictionary",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "dsu",
        "graphs"
      ]
    },
    "C": {
      "name": "Mahmoud and a Message",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "strings"
      ]
    },
    "B": {
      "name": "Mahmoud and a Triangle",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "geometry",
        "greedy",
        "math",
        "number theory",
        "sortings"
      ]
    },
    "A": {
      "name": "Mahmoud and Longest Uncommon Subsequence",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "strings"
      ]
    }
  },
  "765": {
    "G": {
      "name": "Math, math everywhere",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3200,
      "tags": [
        "brute force",
        "dp",
        "math",
        "meet-in-the-middle",
        "number theory"
      ]
    },
    "F": {
      "name": "Souvenirs",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3100,
      "tags": [
        "data structures"
      ]
    },
    "E": {
      "name": "Tree Folding",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "implementation",
        "trees"
      ]
    },
    "D": {
      "name": "Artsem and Saunders",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "dsu",
        "math"
      ]
    },
    "C": {
      "name": "Table Tennis Game 2",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1200,
      "tags": [
        "math"
      ]
    },
    "B": {
      "name": "Code obfuscation",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Neverending competitions",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "764": {
    "B": {
      "name": "Timofey and cubes",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "Taymyr is calling you",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    }
  },
  "763": {
    "E": {
      "name": "Timofey and our friends animals",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "data structures",
        "divide and conquer",
        "dsu"
      ]
    },
    "D": {
      "name": "Timofey and a flat tree",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "data structures",
        "graphs",
        "hashing",
        "shortest paths",
        "trees"
      ]
    },
    "C": {
      "name": "Timofey and remoduling",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2600,
      "tags": [
        "brute force",
        "implementation",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Timofey and rectangles",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "geometry"
      ]
    },
    "A": {
      "name": "Timofey and a tree",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "dp",
        "dsu",
        "graphs",
        "implementation",
        "trees"
      ]
    }
  },
  "762": {
    "F": {
      "name": "Tree nesting",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "combinatorics",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "Radio stations",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "D": {
      "name": "Maximum path",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Two strings",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "binary search",
        "hashing",
        "strings",
        "two pointers"
      ]
    },
    "B": {
      "name": "USB vs. PS/2",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "greedy",
        "implementation",
        "sortings",
        "two pointers"
      ]
    },
    "A": {
      "name": "k-th divisor",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "math",
        "number theory"
      ]
    }
  },
  "761": {
    "F": {
      "name": "Dasha and Photos",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2600,
      "tags": [
        "brute force",
        "data structures",
        "dp",
        "implementation"
      ]
    },
    "E": {
      "name": "Dasha and Puzzle",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "D": {
      "name": "Dasha and Very Difficult Problem",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "brute force",
        "constructive algorithms",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Dasha and Password",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "dp",
        "implementation"
      ]
    },
    "B": {
      "name": "Dasha and friends",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Dasha and Stairs",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation",
        "math"
      ]
    }
  },
  "760": {
    "B": {
      "name": "Frodo and pillows",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "greedy"
      ]
    },
    "A": {
      "name": "Petr and a calendar",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "758": {
    "F": {
      "name": "Geometrical Progression",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2400,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Broken Tree",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "D": {
      "name": "Ability To Convert",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy",
        "math",
        "strings"
      ]
    },
    "C": {
      "name": "Unfair Poll",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "constructive algorithms",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Blown Garland",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation",
        "number theory"
      ]
    },
    "A": {
      "name": "Holiday Of Equality",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "757": {
    "G": {
      "name": "Can Bash Save the Day?",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3400,
      "tags": [
        "data structures",
        "divide and conquer",
        "graphs",
        "trees"
      ]
    },
    "F": {
      "name": "Team Rocket Rises Again",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "graphs",
        "shortest paths"
      ]
    },
    "E": {
      "name": "Bash Plays with Functions",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "number theory"
      ]
    },
    "D": {
      "name": "Felicity's Big Secret Revealed",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "C": {
      "name": "Felicity is Coming!",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "hashing",
        "sortings",
        "strings"
      ]
    },
    "B": {
      "name": "Bash's Big Day",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Gotta Catch Em' All!",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "756": {
    "F": {
      "name": "Long number",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3400,
      "tags": [
        "expression parsing",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Byteland coins",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3200,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "Bacterial Melee",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "string suffix structures"
      ]
    },
    "C": {
      "name": "Nikita and stack",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "data structures"
      ]
    },
    "B": {
      "name": "Travel Card",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "dp"
      ]
    },
    "A": {
      "name": "Pavel and barbecue",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "dfs and similar"
      ]
    }
  },
  "755": {
    "G": {
      "name": "PolandBall and Many Other Balls",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3200,
      "tags": [
        "combinatorics",
        "divide and conquer",
        "dp",
        "fft",
        "math",
        "number theory"
      ]
    },
    "F": {
      "name": "PolandBall and Gifts",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2600,
      "tags": [
        "bitmasks",
        "dp",
        "greedy"
      ]
    },
    "E": {
      "name": "PolandBall and White-Red graph",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "graphs",
        "shortest paths"
      ]
    },
    "D": {
      "name": "PolandBall and Polygon",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2000,
      "tags": [
        "data structures"
      ]
    },
    "C": {
      "name": "PolandBall and Forest",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "interactive",
        "trees"
      ]
    },
    "B": {
      "name": "PolandBall and Game",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "binary search",
        "data structures",
        "games",
        "greedy",
        "sortings",
        "strings"
      ]
    },
    "A": {
      "name": "PolandBall and Hypothesis",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "graphs",
        "math",
        "number theory"
      ]
    }
  },
  "754": {
    "E": {
      "name": "Dasha and cyclic table",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "bitmasks",
        "brute force",
        "fft",
        "strings",
        "trees"
      ]
    },
    "D": {
      "name": "Fedor and coupons",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Vladik and chat",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dp",
        "implementation",
        "strings"
      ]
    },
    "B": {
      "name": "Ilya and tic-tac-toe game",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Lesha and array splitting",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    }
  },
  "753": {
    "C": {
      "name": "Interactive Bulls and Cows (Hard)",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "constructive algorithms",
        "interactive"
      ]
    },
    "B": {
      "name": "Interactive Bulls and Cows (Easy)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "Santa Claus and Candies",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "dp",
        "greedy",
        "math"
      ]
    }
  },
  "750": {
    "H": {
      "name": "New Year and Snowy Grid",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3500,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "interactive"
      ]
    },
    "G": {
      "name": "New Year and Binary Tree Paths",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 3200,
      "tags": [
        "bitmasks",
        "brute force",
        "combinatorics",
        "dp"
      ]
    },
    "F": {
      "name": "New Year and Finding Roots",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "constructive algorithms",
        "implementation",
        "interactive",
        "trees"
      ]
    },
    "E": {
      "name": "New Year and Old Subsequence",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "divide and conquer",
        "dp",
        "matrices"
      ]
    },
    "D": {
      "name": "New Year and Fireworks",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "data structures",
        "dfs and similar",
        "dp",
        "implementation"
      ]
    },
    "C": {
      "name": "New Year and Rating",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "New Year and North Pole",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1300,
      "tags": [
        "geometry",
        "implementation"
      ]
    },
    "A": {
      "name": "New Year and Hurry",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "binary search",
        "brute force",
        "implementation",
        "math"
      ]
    }
  },
  "749": {
    "E": {
      "name": "Inversions After Shuffle",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "probabilities"
      ]
    },
    "D": {
      "name": "Leaving Auction",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "C": {
      "name": "Voting",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "greedy",
        "implementation",
        "two pointers"
      ]
    },
    "B": {
      "name": "Parallelogram is Back",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "constructive algorithms",
        "geometry"
      ]
    },
    "A": {
      "name": "Bachgold Problem",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation",
        "math",
        "number theory"
      ]
    }
  },
  "748": {
    "F": {
      "name": "Santa Clauses and a Soccer Championship",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "Santa Claus and Tangerines",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "two pointers"
      ]
    },
    "D": {
      "name": "Santa Claus and a Palindrome",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy"
      ]
    },
    "C": {
      "name": "Santa Claus and Robot",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "B": {
      "name": "Santa Claus and Keyboard Check",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Santa Claus and a Place in a Class",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "747": {
    "F": {
      "name": "Igor and Interesting Numbers",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "E": {
      "name": "Comments",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "expression parsing",
        "implementation",
        "strings"
      ]
    },
    "D": {
      "name": "Winter Is Coming",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Servers",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "B": {
      "name": "Mammoth's Genome Decoding",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Display Size",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "math"
      ]
    }
  },
  "746": {
    "G": {
      "name": "New Roads",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "graphs",
        "trees"
      ]
    },
    "F": {
      "name": "Music in Car",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "greedy",
        "two pointers"
      ]
    },
    "E": {
      "name": "Numbers Exchange",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 1900,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Green and Black Tea",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Tram",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Decoding",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Compote",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "745": {
    "B": {
      "name": "Hongcow Solves A Puzzle",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Hongcow Learns the Cyclic Shift",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "744": {
    "E": {
      "name": "Hongcow Masters the Cyclic Shift",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3200,
      "tags": [
        "strings",
        "two pointers"
      ]
    },
    "D": {
      "name": "Hongcow Draws a Circle",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3200,
      "tags": [
        "geometry"
      ]
    },
    "C": {
      "name": "Hongcow Buys a Deck of Cards",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "brute force",
        "dp"
      ]
    },
    "B": {
      "name": "Hongcow's Game",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1900,
      "tags": [
        "bitmasks",
        "divide and conquer",
        "interactive"
      ]
    },
    "A": {
      "name": "Hongcow Builds A Nation",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    }
  },
  "743": {
    "E": {
      "name": "Vladik and cards",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "dp"
      ]
    },
    "D": {
      "name": "Chloe and pleasant prizes",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
      ]
    },
    "C": {
      "name": "Vladik and fractions",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Chloe and the sequence ",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "binary search",
        "bitmasks",
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "Vladik and flights",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    }
  },
  "742": {
    "B": {
      "name": "Arpa\u2019s obvious problem and Mehrdad\u2019s terrible solution",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Arpa\u2019s hard exam and Mehrdad\u2019s naive cheat",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation",
        "math",
        "number theory"
      ]
    }
  },
  "741": {
    "E": {
      "name": "Arpa\u2019s abnormal DNA and Mehrdad\u2019s deep interest",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3400,
      "tags": [
        "data structures",
        "string suffix structures"
      ]
    },
    "D": {
      "name": "Arpa\u2019s letter-marked tree and Mehrdad\u2019s Dokhtar-kosh paths",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "data structures",
        "dfs and similar",
        "trees"
      ]
    },
    "C": {
      "name": "Arpa\u2019s overnight party and Mehrdad\u2019s silent entering",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2600,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs"
      ]
    },
    "B": {
      "name": "Arpa's weak amphitheater and Mehrdad's valuable Hoses",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "dp",
        "dsu"
      ]
    },
    "A": {
      "name": "Arpa's loud Owf and Mehrdad's evil plan",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "math"
      ]
    }
  },
  "740": {
    "B": {
      "name": "Alyona and flowers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "Alyona and copybooks",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "739": {
    "E": {
      "name": "Gosha is hunting",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "brute force",
        "data structures",
        "dp",
        "flows",
        "math",
        "probabilities",
        "sortings"
      ]
    },
    "D": {
      "name": "Recover a functional graph",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3400,
      "tags": [
        "graph matchings"
      ]
    },
    "C": {
      "name": "Alyona and towers",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "data structures"
      ]
    },
    "B": {
      "name": "Alyona and a tree",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "A": {
      "name": "Alyona and mex",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    }
  },
  "737": {
    "F": {
      "name": "Dirty plates",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3300,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "E": {
      "name": "Tanya is 5!",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3300,
      "tags": [
        "graph matchings",
        "graphs",
        "greedy",
        "schedules"
      ]
    }
  },
  "736": {
    "E": {
      "name": "Chess Championship",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "constructive algorithms",
        "flows",
        "greedy",
        "math"
      ]
    },
    "D": {
      "name": "Permutations",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2800,
      "tags": [
        "math",
        "matrices"
      ]
    }
  },
  "735": {
    "E": {
      "name": "Ostap and Tree",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "dp",
        "trees"
      ]
    },
    "D": {
      "name": "Taxes",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1600,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Tennis Championship",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1600,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Urbanization",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "number theory",
        "sortings"
      ]
    },
    "A": {
      "name": "Ostap and Grasshopper",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "734": {
    "F": {
      "name": "Anton and School",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "implementation",
        "math"
      ]
    },
    "E": {
      "name": "Anton and Tree",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "D": {
      "name": "Anton and Chess",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "implementation"
      ]
    },
    "C": {
      "name": "Anton and Making Potions",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "dp",
        "greedy",
        "two pointers"
      ]
    },
    "B": {
      "name": "Anton and Digits",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 800,
      "tags": [
        "brute force",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Anton and Danik",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "733": {
    "F": {
      "name": "Drivers Dissatisfaction",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "dsu",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "Sleep in Class",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "data structures",
        "math",
        "two pointers"
      ]
    },
    "D": {
      "name": "Kostya the Sculptor",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1600,
      "tags": [
        "data structures",
        "hashing"
      ]
    },
    "C": {
      "name": "Epidemic in Monstropolis",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy",
        "two pointers"
      ]
    },
    "B": {
      "name": "Parade",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Grasshopper And the String",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "732": {
    "F": {
      "name": "Tourist Reform",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "E": {
      "name": "Sockets",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "D": {
      "name": "Exams",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Sanatorium",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1200,
      "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Cormen --- The Best Friend Of a Man",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "A": {
      "name": "Buy a Shovel",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation",
        "math"
      ]
    }
  },
  "731": {
    "F": {
      "name": "Video Cards",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "data structures",
        "implementation",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Funny Game",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "dp",
        "games"
      ]
    },
    "D": {
      "name": "80-th Level Archeology",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Socks",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy"
      ]
    },
    "B": {
      "name": "Coupons and Discounts",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "Night at the Museum",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "730": {
    "L": {
      "name": "Expression Queries",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": [
        "data structures"
      ]
    },
    "K": {
      "name": "Roads Orientation Problem",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": [
        "graphs"
      ]
    },
    "J": {
      "name": "Bottles",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "dp"
      ]
    },
    "I": {
      "name": "Olympiad in Programming and Sports",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "dp",
        "flows",
        "graphs",
        "greedy"
      ]
    },
    "H": {
      "name": "Delete Them",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "G": {
      "name": "Car Repair Shop",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    },
    "F": {
      "name": "Ber Patio",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": []
    },
    "E": {
      "name": "Award Ceremony",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "D": {
      "name": "Running Over The Bridges",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Bulmart",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "binary search",
        "dfs and similar"
      ]
    },
    "B": {
      "name": "Minimum and Maximum",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "interactive"
      ]
    },
    "A": {
      "name": "Toda 2",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "729": {
    "F": {
      "name": "Financiers Game",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "dp"
      ]
    },
    "E": {
      "name": "Subordinates",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "data structures",
        "graphs",
        "greedy",
        "sortings"
      ]
    },
    "D": {
      "name": "Sea Battle",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Road to Cinema",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Spotlights",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "dp",
        "implementation"
      ]
    },
    "A": {
      "name": "Interview with Oleg",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "727": {
    "F": {
      "name": "Polycarp's problems",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "dp",
        "greedy"
      ]
    },
    "E": {
      "name": "Games on a CD",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "hashing",
        "string suffix structures",
        "strings"
      ]
    },
    "D": {
      "name": "T-shirts Distribution",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "flows",
        "greedy"
      ]
    },
    "C": {
      "name": "Guess the Array",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "interactive",
        "math"
      ]
    },
    "B": {
      "name": "Bill Total Value",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "expression parsing",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Transformation: from A to B",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "dfs and similar",
        "math"
      ]
    }
  },
  "725": {
    "G": {
      "name": "Messages on a Tree",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3300,
      "tags": []
    },
    "F": {
      "name": "Family Photos",
      "type": "PROGRAMMING",
      "points": 3250.0,
      "rating": 2900,
      "tags": [
        "games",
        "greedy"
      ]
    },
    "E": {
      "name": "Too Much Money",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "brute force",
        "greedy"
      ]
    },
    "D": {
      "name": "Contest Balloons",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 1800,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "C": {
      "name": "Hidden Word",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation",
        "strings"
      ]
    },
    "B": {
      "name": "Food on the Plane",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Jumping Ball",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "724": {
    "G": {
      "name": "Xor-matic Number of the Graph",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "bitmasks",
        "graphs",
        "math",
        "number theory",
        "trees"
      ]
    },
    "F": {
      "name": "Uniformly Branched Trees",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "combinatorics",
        "dp",
        "trees"
      ]
    },
    "E": {
      "name": "Goods transportation",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "dp",
        "flows",
        "greedy"
      ]
    },
    "D": {
      "name": "Dense Subsequence",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "greedy",
        "strings"
      ]
    },
    "C": {
      "name": "Ray Tracing",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "greedy",
        "hashing",
        "implementation",
        "math",
        "number theory",
        "sortings"
      ]
    },
    "B": {
      "name": "Batch Sort",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Checking the Calendar",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "723": {
    "F": {
      "name": "st-Spanning Tree",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2300,
      "tags": [
        "dsu",
        "graphs",
        "greedy",
        "implementation"
      ]
    },
    "E": {
      "name": "One-Way Reform",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "flows",
        "graphs",
        "greedy"
      ]
    },
    "D": {
      "name": "Lakes in Berland",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Polycarp at the Radio",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Text Document Analysis",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "expression parsing",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "The New Year: Meeting Friends",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math",
        "sortings"
      ]
    }
  },
  "722": {
    "F": {
      "name": "Cyclic Cipher",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "chinese remainder theorem",
        "data structures",
        "implementation",
        "number theory",
        "two pointers"
      ]
    },
    "E": {
      "name": "Research Rover",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "D": {
      "name": "Generating Sets",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "greedy",
        "strings",
        "trees"
      ]
    },
    "C": {
      "name": "Destroying Array",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "data structures",
        "dsu"
      ]
    },
    "B": {
      "name": "Verse Pattern",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Broken Clock",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "721": {
    "E": {
      "name": "Road to Home",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2700,
      "tags": [
        "binary search",
        "dp"
      ]
    },
    "D": {
      "name": "Maxim and Array",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Journey",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "dp",
        "graphs"
      ]
    },
    "B": {
      "name": "Passwords",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "implementation",
        "math",
        "sortings",
        "strings"
      ]
    },
    "A": {
      "name": "One-dimensional Japanese Crossword",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "720": {
    "F": {
      "name": "Array Covering",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": [
        "data structures"
      ]
    },
    "E": {
      "name": "Cipher",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": [
        "implementation"
      ]
    },
    "D": {
      "name": "Slalom",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": [
        "data structures",
        "dp",
        "sortings"
      ]
    },
    "C": {
      "name": "Homework",
      "type": "PROGRAMMING",
      "rating": 3100,
      "tags": [
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Cactusophobia",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "dfs and similar",
        "flows"
      ]
    },
    "A": {
      "name": "Closing ceremony",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "greedy"
      ]
    }
  },
  "719": {
    "B": {
      "name": "Anatoly and Cockroaches",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Vitya in the Countryside",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    }
  },
  "718": {
    "E": {
      "name": "Matvey's Birthday",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3300,
      "tags": [
        "bitmasks",
        "graphs"
      ]
    },
    "D": {
      "name": "Andrew and Chemistry",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "dp",
        "hashing",
        "trees"
      ]
    },
    "C": {
      "name": "Sasha and Array",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "math",
        "matrices"
      ]
    },
    "A": {
      "name": "Efim and Strange Grade",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "dp",
        "implementation",
        "math"
      ]
    }
  },
  "717": {
    "I": {
      "name": "Cowboy Beblop at his computer",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "geometry"
      ]
    },
    "H": {
      "name": "Pokermon League challenge",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "math",
        "probabilities"
      ]
    },
    "G": {
      "name": "Underfail",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "flows"
      ]
    },
    "F": {
      "name": "Heroes of Making Magic III",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "data structures"
      ]
    },
    "E": {
      "name": "Paint it really, really dark gray",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "dfs and similar"
      ]
    },
    "D": {
      "name": "Dexterina\u2019s Lab",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "games",
        "matrices",
        "probabilities"
      ]
    },
    "C": {
      "name": "Potions Homework",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "R3D3\u2019s Summer Adventure",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "A": {
      "name": "Festival Organization",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "combinatorics",
        "math",
        "number theory"
      ]
    }
  },
  "716": {
    "B": {
      "name": "Complete the Word",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "two pointers"
      ]
    },
    "A": {
      "name": "Crazy Computer",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "715": {
    "E": {
      "name": "Complete the Permutations",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3400,
      "tags": [
        "combinatorics",
        "fft",
        "graphs",
        "math"
      ]
    },
    "D": {
      "name": "Create a Maze",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "constructive algorithms"
      ]
    },
    "C": {
      "name": "Digit Tree",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2700,
      "tags": [
        "dfs and similar",
        "divide and conquer",
        "dsu",
        "trees"
      ]
    },
    "B": {
      "name": "Complete The Graph",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "constructive algorithms",
        "graphs",
        "shortest paths"
      ]
    },
    "A": {
      "name": "Plus and Square Root",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "714": {
    "B": {
      "name": "Filya and Homework",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Meeting of Old Friends",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "713": {
    "E": {
      "name": "Sonya Partymaker",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3300,
      "tags": [
        "binary search",
        "dp"
      ]
    },
    "D": {
      "name": "Animals and Puzzle",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "C": {
      "name": "Sonya and Problem Wihtout a Legend",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "dp",
        "sortings"
      ]
    },
    "B": {
      "name": "Searching Rectangles",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "constructive algorithms",
        "interactive"
      ]
    },
    "A": {
      "name": "Sonya and Queries",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "data structures",
        "implementation"
      ]
    }
  },
  "712": {
    "E": {
      "name": "Memory and Casinos",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "math",
        "probabilities"
      ]
    },
    "D": {
      "name": "Memory and Scores",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2200,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "C": {
      "name": "Memory and De-Evolution",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Memory and Trident",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Memory and Crow",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "711": {
    "E": {
      "name": "ZS and The Birthday Paradox",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "math",
        "number theory",
        "probabilities"
      ]
    },
    "D": {
      "name": "Directed Roads",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "graphs",
        "math"
      ]
    },
    "C": {
      "name": "Coloring Trees",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Chris and Magic Square",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "Bus to Udayland",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "710": {
    "F": {
      "name": "String Set Queries",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "brute force",
        "data structures",
        "hashing",
        "interactive",
        "string suffix structures",
        "strings"
      ]
    },
    "E": {
      "name": "Generate a String",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "dp"
      ]
    },
    "D": {
      "name": "Two Arithmetic Progressions",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Magic Odd Square",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "B": {
      "name": "Optimal Point on a Line",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "brute force",
        "sortings"
      ]
    },
    "A": {
      "name": "King Moves",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "709": {
    "B": {
      "name": "Checkpoints",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Juicer",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "708": {
    "E": {
      "name": "Student's Camp",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "Incorrect Flow",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "flows"
      ]
    },
    "C": {
      "name": "Centroids",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "B": {
      "name": "Recover the String",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Letters Cyclic Shift",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "strings"
      ]
    }
  },
  "707": {
    "E": {
      "name": "Garlands",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Persistent Bookcase ",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "bitmasks",
        "data structures",
        "dfs and similar",
        "implementation"
      ]
    },
    "C": {
      "name": "Pythagorean Triples",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Bakery",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "graphs"
      ]
    },
    "A": {
      "name": "Brain's Photos",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "706": {
    "E": {
      "name": "Working routine",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "D": {
      "name": "Vasiliy's Multiset",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "bitmasks",
        "data structures",
        "trees"
      ]
    },
    "C": {
      "name": "Hard problem",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "dp",
        "strings"
      ]
    },
    "B": {
      "name": "Interesting drink",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "binary search",
        "dp",
        "implementation"
      ]
    },
    "A": {
      "name": "Beru-taxi",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "brute force",
        "geometry",
        "implementation"
      ]
    }
  },
  "705": {
    "B": {
      "name": "Spider Man",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "games",
        "math"
      ]
    },
    "A": {
      "name": "Hulk",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "704": {
    "E": {
      "name": "Iron Man",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3300,
      "tags": [
        "data structures",
        "geometry",
        "trees"
      ]
    },
    "D": {
      "name": "Captain America",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3100,
      "tags": [
        "flows",
        "greedy"
      ]
    },
    "C": {
      "name": "Black Widow",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2900,
      "tags": [
        "dp",
        "graphs",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Ant Man",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2500,
      "tags": [
        "dp",
        "graphs",
        "greedy"
      ]
    },
    "A": {
      "name": "Thor",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "data structures",
        "implementation"
      ]
    }
  },
  "703": {
    "E": {
      "name": "Mishka and Divisors",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2600,
      "tags": [
        "dp",
        "number theory"
      ]
    },
    "D": {
      "name": "Mishka and Interesting sum",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "data structures"
      ]
    },
    "C": {
      "name": "Chris and Road",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2100,
      "tags": [
        "geometry",
        "implementation"
      ]
    },
    "B": {
      "name": "Mishka and trip",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Mishka and Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "702": {
    "F": {
      "name": "T-Shirts",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "data structures"
      ]
    },
    "E": {
      "name": "Analysis of Pathes in Functional Graph",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "data structures",
        "graphs"
      ]
    },
    "D": {
      "name": "Road to Post Office",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "math"
      ]
    },
    "C": {
      "name": "Cellular Network",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "binary search",
        "implementation",
        "two pointers"
      ]
    },
    "B": {
      "name": "Powers of Two",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "brute force",
        "data structures",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Maximum Increase",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "dp",
        "greedy",
        "implementation"
      ]
    }
  },
  "701": {
    "C": {
      "name": "They Are Everywhere",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "strings",
        "two pointers"
      ]
    },
    "B": {
      "name": "Cells Not Under Attack",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1200,
      "tags": [
        "data structures",
        "math"
      ]
    },
    "A": {
      "name": "Cards",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "700": {
    "E": {
      "name": "Cool Slogans",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3300,
      "tags": [
        "string suffix structures",
        "strings"
      ]
    },
    "D": {
      "name": "Huffman Coding on Segment",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3100,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "C": {
      "name": "Break Up",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2600,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "B": {
      "name": "Connecting Universities",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
      ]
    },
    "A": {
      "name": "As Fast As Possible",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "math"
      ]
    }
  },
  "699": {
    "B": {
      "name": "One Bomb",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Launch of Collider",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "698": {
    "F": {
      "name": "Coprime Permutation",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "combinatorics",
        "number theory"
      ]
    },
    "E": {
      "name": "Cron",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": []
    },
    "D": {
      "name": "Limak and Shooting Points",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "brute force",
        "geometry",
        "math"
      ]
    },
    "C": {
      "name": "LRU",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "dp",
        "math",
        "probabilities"
      ]
    },
    "B": {
      "name": "Fix a Tree",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "trees"
      ]
    },
    "A": {
      "name": "Vacations",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "dp"
      ]
    }
  },
  "697": {
    "B": {
      "name": "Barnicle",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "implementation",
        "math",
        "strings"
      ]
    },
    "A": {
      "name": "Pineapple Incident",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "696": {
    "F": {
      "name": "...Dary!",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3300,
      "tags": [
        "binary search",
        "geometry",
        "two pointers"
      ]
    },
    "E": {
      "name": "...Wait for it...",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "dsu",
        "trees"
      ]
    },
    "D": {
      "name": "Legen...",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "dp",
        "matrices",
        "strings"
      ]
    },
    "C": {
      "name": "PLEASE",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "combinatorics",
        "dp",
        "implementation",
        "math",
        "matrices"
      ]
    },
    "B": {
      "name": "Puzzles",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "math",
        "probabilities",
        "trees"
      ]
    },
    "A": {
      "name": "Lorenzo Von Matterhorn",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "data structures",
        "implementation",
        "trees"
      ]
    }
  },
  "691": {
    "F": {
      "name": "Couple Cover",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "brute force",
        "dp",
        "number theory"
      ]
    },
    "E": {
      "name": "Xor-sequences",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "matrices"
      ]
    },
    "D": {
      "name": "Swaps in Permutation",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "dsu",
        "math"
      ]
    },
    "C": {
      "name": "Exponential notation",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "B": {
      "name": "s-palindrome",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Fashion in Berland",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "690": {
    "F3": {
      "name": "Tree of Life (hard)",
      "type": "PROGRAMMING",
      "rating": 3200,
      "tags": [
        "trees"
      ]
    },
    "F2": {
      "name": "Tree of Life (medium)",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "hashing",
        "trees"
      ]
    },
    "F1": {
      "name": "Tree of Life (easy)",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": []
    },
    "E2": {
      "name": "Photographs (II)",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": []
    },
    "E1": {
      "name": "Photographs (I)",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": []
    },
    "D3": {
      "name": "The Wall (hard)",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dp"
      ]
    },
    "D2": {
      "name": "The Wall (medium)",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "combinatorics"
      ]
    },
    "D1": {
      "name": "The Wall (easy)",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": []
    },
    "C3": {
      "name": "Brain Network (hard)",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "trees"
      ]
    },
    "C2": {
      "name": "Brain Network (medium)",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "C1": {
      "name": "Brain Network (easy)",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": []
    },
    "B3": {
      "name": "Recover Polygon (hard)",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "data structures"
      ]
    },
    "B2": {
      "name": "Recover Polygon (medium)",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "geometry"
      ]
    },
    "B1": {
      "name": "Recover Polygon (easy)",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": []
    },
    "A3": {
      "name": "Collective Mindsets (hard)",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": []
    },
    "A2": {
      "name": "Collective Mindsets (medium)",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": []
    },
    "A1": {
      "name": "Collective Mindsets (easy)",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": []
    }
  },
  "689": {
    "E": {
      "name": "Mike and Geometry Problem",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "combinatorics",
        "data structures",
        "dp",
        "geometry",
        "implementation"
      ]
    },
    "D": {
      "name": "Friends and Subsequences",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "C": {
      "name": "Mike and Chocolate Thieves",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "combinatorics",
        "math"
      ]
    },
    "B": {
      "name": "Mike and Shortcuts",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "graphs",
        "greedy",
        "shortest paths"
      ]
    },
    "A": {
      "name": "Mike and Cellphone",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "688": {
    "B": {
      "name": "Lovely Palindromes",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Opponents",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "687": {
    "E": {
      "name": "TOF",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "D": {
      "name": "Dividing Kingdom II",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "data structures",
        "dsu",
        "graphs",
        "sortings"
      ]
    },
    "C": {
      "name": "The Values You Can Make",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Remainders Game",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "chinese remainder theorem",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "NP-Hard Problem",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    }
  },
  "686": {
    "B": {
      "name": "Little Robber Girl's Zoo",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Free Ice Cream",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "685": {
    "E": {
      "name": "Travelling Through the Snow Queen's Kingdom",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "bitmasks",
        "brute force",
        "divide and conquer",
        "graphs"
      ]
    },
    "D": {
      "name": "Kay and Eternity",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "brute force",
        "implementation",
        "sortings"
      ]
    },
    "C": {
      "name": "Optimal Point",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2900,
      "tags": [
        "binary search",
        "math"
      ]
    },
    "B": {
      "name": "Kay and Snowflake",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "A": {
      "name": "Robbers' watch",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "math"
      ]
    }
  },
  "683": {
    "J": {
      "name": "The Hero with Bombs",
      "type": "PROGRAMMING",
      "rating": 3000,
      "tags": [
        "*special"
      ]
    },
    "I": {
      "name": "Loader",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "*special",
        "graphs"
      ]
    },
    "H": {
      "name": "Exchange of Books",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "*special"
      ]
    },
    "G": {
      "name": "The Fraction",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "*special"
      ]
    },
    "F": {
      "name": "Reformat the String",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special"
      ]
    },
    "E": {
      "name": "Hammer throwing",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special"
      ]
    },
    "D": {
      "name": "Chocolate Bar",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "*special",
        "math"
      ]
    },
    "C": {
      "name": "Symmetric Difference",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "*special"
      ]
    },
    "B": {
      "name": "The Teacher of Physical Education",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "*special"
      ]
    },
    "A": {
      "name": "The Check of the Point",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "*special",
        "geometry"
      ]
    }
  },
  "682": {
    "E": {
      "name": "Alyona and Triangles",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2600,
      "tags": [
        "geometry",
        "two pointers"
      ]
    },
    "D": {
      "name": "Alyona and Strings",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "dp",
        "strings"
      ]
    },
    "C": {
      "name": "Alyona and the Tree",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
      ]
    },
    "B": {
      "name": "Alyona and Mex",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "sortings"
      ]
    },
    "A": {
      "name": "Alyona and Numbers",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory"
      ]
    }
  },
  "681": {
    "E": {
      "name": "Runaway to a Shadow",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "geometry",
        "sortings"
      ]
    },
    "D": {
      "name": "Gifts by the List",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "C": {
      "name": "Heap Operations",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy"
      ]
    },
    "B": {
      "name": "Economy Game",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "brute force"
      ]
    },
    "A": {
      "name": "A Good Contest",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "680": {
    "B": {
      "name": "Bear and Finding Criminals",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "Bear and Five Cards",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "679": {
    "E": {
      "name": "Bear and Bad Powers of 42",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Bear and Chase",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "brute force",
        "dfs and similar",
        "graphs",
        "implementation",
        "math",
        "probabilities"
      ]
    },
    "C": {
      "name": "Bear and Square Grid",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "dfs and similar",
        "dsu",
        "implementation"
      ]
    },
    "B": {
      "name": "Bear and Tower of Cubes",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "dp",
        "greedy"
      ]
    },
    "A": {
      "name": "Bear and Prime 100",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "interactive",
        "math"
      ]
    }
  },
  "678": {
    "F": {
      "name": "Lena and Queries",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "data structures",
        "divide and conquer",
        "geometry"
      ]
    },
    "E": {
      "name": "Another Sith Tournament",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "bitmasks",
        "dp",
        "math",
        "probabilities"
      ]
    },
    "D": {
      "name": "Iterated Linear Function",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Joty and Chocolate",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "implementation",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "The Same Calendar",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Johny Likes Numbers",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "677": {
    "E": {
      "name": "Vanya and Balloons",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "brute force",
        "dp",
        "implementation"
      ]
    },
    "D": {
      "name": "Vanya and Treasure",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "dp",
        "graphs",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Vanya and Label",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "bitmasks",
        "combinatorics",
        "implementation",
        "strings"
      ]
    },
    "B": {
      "name": "Vanya and Food Processor",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Vanya and Fence",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "676": {
    "E": {
      "name": "The Last Fight Between Human and AI",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2400,
      "tags": [
        "math"
      ]
    },
    "D": {
      "name": "Theseus and labyrinth",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2000,
      "tags": [
        "graphs",
        "implementation",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Vasya and String",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "dp",
        "strings",
        "two pointers"
      ]
    },
    "B": {
      "name": "Pyramid of Glasses",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "implementation",
        "math",
        "math"
      ]
    },
    "A": {
      "name": "Nicholas and Permutation",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "675": {
    "E": {
      "name": "Trains and Statistic",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Tree Construction",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "C": {
      "name": "Money Transfers",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Restoring Painting",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Infinite Sequence",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "math"
      ]
    }
  },
  "673": {
    "B": {
      "name": "Problems for Round",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Bear and Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "672": {
    "B": {
      "name": "Different is Good",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Summer Camp",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "671": {
    "E": {
      "name": "Organizing a Race",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3300,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "D": {
      "name": "Roads in Yusland",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Ultimate Weirdness of an Array",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "number theory"
      ]
    },
    "B": {
      "name": "Robin Hood",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "greedy"
      ]
    },
    "A": {
      "name": "Recycling Bottles",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "dp",
        "geometry",
        "greedy",
        "implementation"
      ]
    }
  },
  "670": {
    "F": {
      "name": "Restore a Number",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "constructive algorithms",
        "strings"
      ]
    },
    "E": {
      "name": "Correct Bracket Sequence Editor",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "data structures",
        "dsu",
        "strings"
      ]
    },
    "D2": {
      "name": "Magic Powder - 2",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "implementation"
      ]
    },
    "D1": {
      "name": "Magic Powder - 1",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "binary search",
        "brute force",
        "implementation"
      ]
    },
    "C": {
      "name": "Cinema",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Game of Robots",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Holidays",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math"
      ]
    }
  },
  "669": {
    "A": {
      "name": "Little Artem and Presents",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "667": {
    "B": {
      "name": "Coat of Anticubism",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "geometry"
      ]
    },
    "A": {
      "name": "Pouring Rain",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "geometry",
        "math"
      ]
    }
  },
  "666": {
    "E": {
      "name": "Forensic Examination",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3100,
      "tags": [
        "data structures",
        "string suffix structures"
      ]
    },
    "D": {
      "name": "Chain Reaction",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3000,
      "tags": [
        "brute force",
        "geometry"
      ]
    },
    "C": {
      "name": "Codeword",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "combinatorics",
        "strings"
      ]
    },
    "B": {
      "name": "World Tour",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "graphs",
        "shortest paths"
      ]
    },
    "A": {
      "name": "Reberland Linguistics",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "dp",
        "implementation",
        "strings"
      ]
    }
  },
  "665": {
    "F": {
      "name": "Four Divisors",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "data structures",
        "dp",
        "math",
        "number theory",
        "sortings",
        "two pointers"
      ]
    },
    "E": {
      "name": "Beautiful Subarrays",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "data structures",
        "divide and conquer",
        "strings",
        "trees"
      ]
    },
    "D": {
      "name": "Simple Subset",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "number theory"
      ]
    },
    "C": {
      "name": "Simple Strings",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "dp",
        "greedy",
        "strings"
      ]
    },
    "B": {
      "name": "Shopping",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "brute force"
      ]
    },
    "A": {
      "name": "Buses Between Cities",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    }
  },
  "664": {
    "A": {
      "name": "Complicated GCD",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math",
        "number theory"
      ]
    }
  },
  "663": {
    "A": {
      "name": "Rebus",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "expression parsing",
        "greedy",
        "math"
      ]
    }
  },
  "662": {
    "E": {
      "name": "To Hack or not to Hack",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3100,
      "tags": [
        "brute force",
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "International Olympiad",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Binary Table",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2600,
      "tags": [
        "bitmasks",
        "brute force",
        "divide and conquer",
        "dp",
        "fft",
        "math"
      ]
    },
    "B": {
      "name": "Graph Coloring",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "A": {
      "name": "Gambling Nim",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "math",
        "matrices",
        "probabilities"
      ]
    }
  },
  "661": {
    "H": {
      "name": "Rotate Matrix",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "*special"
      ]
    },
    "G": {
      "name": "Hungarian Notation",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "*special"
      ]
    },
    "F": {
      "name": "Primes in Interval",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "*special"
      ]
    },
    "E": {
      "name": "Divisibility Check",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "*special"
      ]
    },
    "D": {
      "name": "Maximal Difference",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "*special"
      ]
    },
    "C": {
      "name": "Array Sum",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "*special"
      ]
    },
    "B": {
      "name": "Seasons",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "*special"
      ]
    },
    "A": {
      "name": "Lazy Caterer Sequence",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "*special"
      ]
    }
  },
  "660": {
    "F": {
      "name": "Bear and Bowling 4",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "binary search",
        "data structures",
        "divide and conquer",
        "geometry",
        "ternary search"
      ]
    },
    "E": {
      "name": "Different Subsets For All Tuples",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "D": {
      "name": "Number of Parallelograms",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "geometry"
      ]
    },
    "C": {
      "name": "Hard Process",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "binary search",
        "dp",
        "two pointers"
      ]
    },
    "B": {
      "name": "Seating On Bus",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Co-prime Array",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation",
        "math",
        "number theory"
      ]
    }
  },
  "659": {
    "G": {
      "name": "Fence Divercity",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "combinatorics",
        "dp",
        "number theory"
      ]
    },
    "F": {
      "name": "Polycarp and Hay",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "sortings"
      ]
    },
    "E": {
      "name": "New Reform",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy"
      ]
    },
    "D": {
      "name": "Bicycle Race",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "geometry",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Tanya and Toys",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Qualifying Contest",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "sortings"
      ]
    },
    "A": {
      "name": "Round House",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "658": {
    "A": {
      "name": "Bear and Reverse Radewoosh",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "656": {
    "G": {
      "name": "You're a Professional",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "*special"
      ]
    },
    "F": {
      "name": "Ace It!",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "*special"
      ]
    },
    "E": {
      "name": "Out of Controls",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "*special"
      ]
    },
    "D": {
      "name": "Rosetta Problem",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "*special"
      ]
    },
    "C": {
      "name": "Without Text",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "*special"
      ]
    },
    "B": {
      "name": "Scrambled",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "A": {
      "name": "Da Vinci Powers",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "*special"
      ]
    }
  },
  "653": {
    "G": {
      "name": "Move by Prime",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3100,
      "tags": [
        "combinatorics",
        "math",
        "number theory"
      ]
    },
    "F": {
      "name": "Paper task",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "string suffix structures",
        "strings"
      ]
    },
    "E": {
      "name": "Bear and Forgotten Tree 2",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "trees"
      ]
    },
    "D": {
      "name": "Delivery Bears",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "flows",
        "graphs"
      ]
    },
    "C": {
      "name": "Bear and Up-Down",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "B": {
      "name": "Bear and Compressing",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "dfs and similar",
        "dp",
        "strings"
      ]
    },
    "A": {
      "name": "Bear and Three Balls",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "brute force",
        "implementation",
        "sortings"
      ]
    }
  },
  "652": {
    "F": {
      "name": "Ants on a Circle",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "E": {
      "name": "Pursuit For Artifacts",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "trees"
      ]
    },
    "D": {
      "name": "Nested Segments",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "data structures",
        "sortings"
      ]
    },
    "C": {
      "name": "Foe Pairs",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "combinatorics",
        "sortings",
        "two pointers"
      ]
    },
    "B": {
      "name": "z-sort",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "sortings"
      ]
    },
    "A": {
      "name": "Gabriel and Caterpillar",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "651": {
    "B": {
      "name": "Beautiful Paintings",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Joysticks",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "dp",
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "650": {
    "E": {
      "name": "Clockwork Bomb",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3200,
      "tags": [
        "data structures",
        "dfs and similar",
        "dsu",
        "greedy",
        "trees"
      ]
    },
    "D": {
      "name": "Zip-line",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "hashing"
      ]
    },
    "C": {
      "name": "Table Compression",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "dp",
        "dsu",
        "graphs",
        "greedy"
      ]
    },
    "B": {
      "name": "Image Preview",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "brute force",
        "dp",
        "two pointers"
      ]
    },
    "A": {
      "name": "Watchmen",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "data structures",
        "geometry",
        "math"
      ]
    }
  },
  "645": {
    "G": {
      "name": "Armistice Area Apportionment",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3200,
      "tags": [
        "binary search",
        "geometry"
      ]
    },
    "F": {
      "name": "Cowslip Collections",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2500,
      "tags": [
        "combinatorics",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Intellectual Inquiry",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "dp",
        "greedy",
        "strings"
      ]
    },
    "D": {
      "name": "Robot Rapping Results Report",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "dp",
        "graphs"
      ]
    },
    "C": {
      "name": "Enduring Exodus",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "two pointers"
      ]
    },
    "B": {
      "name": "Mischievous Mess Makers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Amity Assessment",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "644": {
    "C": {
      "name": "Hostname Aliases",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "*special",
        "binary search",
        "data structures",
        "implementation",
        "sortings",
        "strings"
      ]
    },
    "B": {
      "name": "Processing Queries",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "*special",
        "constructive algorithms",
        "data structures",
        "two pointers"
      ]
    },
    "A": {
      "name": "Parliament of Berland",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "*special",
        "constructive algorithms"
      ]
    }
  },
  "643": {
    "G": {
      "name": "Choosing Ads",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3200,
      "tags": [
        "data structures"
      ]
    },
    "F": {
      "name": "Bears and Juice",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2900,
      "tags": [
        "dp",
        "math",
        "meet-in-the-middle"
      ]
    },
    "E": {
      "name": "Bear and Destroying Subtrees",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2700,
      "tags": [
        "dp",
        "math",
        "probabilities",
        "trees"
      ]
    },
    "D": {
      "name": "Bearish Fanpages",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2900,
      "tags": []
    },
    "C": {
      "name": "Levels and Regions",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2400,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Bear and Two Paths",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "graphs"
      ]
    },
    "A": {
      "name": "Bear and Colors",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "implementation"
      ]
    }
  },
  "641": {
    "G": {
      "name": "Little Artem and Graph",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2300,
      "tags": []
    },
    "F": {
      "name": "Little Artem and 2-SAT",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": []
    },
    "E": {
      "name": "Little Artem and Time Machine",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Little Artem and Random Variable",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "dp",
        "implementation",
        "math",
        "probabilities"
      ]
    },
    "C": {
      "name": "Little Artem and Dance",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation"
      ]
    },
    "B": {
      "name": "Little Artem and Matrix",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1400,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Little Artem and Grasshopper",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "639": {
    "F": {
      "name": "Bear and Chemistry",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3300,
      "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "Bear and Paradox",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2800,
      "tags": [
        "binary search",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "D": {
      "name": "Bear and Contribution",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Bear and Polynomials",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2200,
      "tags": [
        "hashing",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Bear and Forgotten Tree 3",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "graphs",
        "trees"
      ]
    },
    "A": {
      "name": "Bear and Displayed Friends",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    }
  },
  "638": {
    "D": {
      "name": "Three-dimensional Turtle Super Computer ",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "dfs and similar",
        "graphs"
      ]
    },
    "C": {
      "name": "Road Improvement",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "*special",
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "B": {
      "name": "Making Genome in Berland",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "*special",
        "dfs and similar",
        "strings"
      ]
    },
    "A": {
      "name": "Home Numbers",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "*special",
        "constructive algorithms",
        "math"
      ]
    }
  },
  "637": {
    "D": {
      "name": "Running with Obstacles",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1600,
      "tags": [
        "*special",
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Promocodes with Mistakes",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "*special",
        "brute force",
        "constructive algorithms",
        "implementation"
      ]
    },
    "B": {
      "name": "Chat Order",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "*special",
        "binary search",
        "constructive algorithms",
        "data structures",
        "sortings"
      ]
    },
    "A": {
      "name": "Voting for Photos",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "*special",
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "635": {
    "A": {
      "name": "Orchestra",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "634": {
    "A": {
      "name": "Island Puzzle",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "633": {
    "H": {
      "name": "Fibonacci-ish II",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3100,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "G": {
      "name": "Yash And Trees",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "bitmasks",
        "data structures",
        "dfs and similar",
        "math",
        "number theory"
      ]
    },
    "F": {
      "name": "The Chocolate Spree",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2600,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "Startup Funding",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "probabilities",
        "two pointers"
      ]
    },
    "D": {
      "name": "Fibonacci-ish",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "dp",
        "hashing",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Spy Syndrome 2",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "dp",
        "hashing",
        "implementation",
        "sortings",
        "string suffix structures",
        "strings"
      ]
    },
    "B": {
      "name": "A Trivial Problem",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Ebony and Ivory",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    }
  },
  "632": {
    "F": {
      "name": "Magic Matrix",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "brute force",
        "divide and conquer",
        "graphs",
        "matrices",
        "trees"
      ]
    },
    "E": {
      "name": "Thief in a Shop",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "divide and conquer",
        "dp",
        "fft",
        "math"
      ]
    },
    "D": {
      "name": "Longest Subsequence",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "The Smallest String Concatenation",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "sortings",
        "strings"
      ]
    },
    "B": {
      "name": "Alice, Bob, Two Teams",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "brute force",
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "Grandma Laura and Apples",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": []
    }
  },
  "631": {
    "E": {
      "name": "Product Sum",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "dp",
        "geometry"
      ]
    },
    "D": {
      "name": "Messenger",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "hashing",
        "implementation",
        "string suffix structures",
        "strings"
      ]
    },
    "C": {
      "name": "Report",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "data structures",
        "sortings"
      ]
    },
    "B": {
      "name": "Print Check",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "Interview",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "630": {
    "R": {
      "name": "Game",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "games",
        "math"
      ]
    },
    "Q": {
      "name": "Pyramids",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "geometry",
        "math"
      ]
    },
    "P": {
      "name": "Area of a Star",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "geometry"
      ]
    },
    "O": {
      "name": "Arrow",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "geometry"
      ]
    },
    "N": {
      "name": "Forecast",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "math"
      ]
    },
    "M": {
      "name": "Turn",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "geometry",
        "math"
      ]
    },
    "L": {
      "name": "Cracking the Code",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "K": {
      "name": "Indivisibility",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "J": {
      "name": "Divisibility",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "I": {
      "name": "Parking Lot",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "H": {
      "name": "Benches",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "G": {
      "name": "Challenge Pennants",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "F": {
      "name": "Selection of Personnel",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "E": {
      "name": "A rectangle",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "math"
      ]
    },
    "D": {
      "name": "Hexagons!",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "math"
      ]
    },
    "C": {
      "name": "Lucky Numbers",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "B": {
      "name": "Moore's Law",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Again Twenty Five!",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "number theory"
      ]
    }
  },
  "629": {
    "E": {
      "name": "Famil Door and Roads",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "combinatorics",
        "data structures",
        "dfs and similar",
        "dp",
        "probabilities",
        "trees"
      ]
    },
    "D": {
      "name": "Babaei and Birthday Cake",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "C": {
      "name": "Famil Door and Brackets",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2000,
      "tags": [
        "dp",
        "strings"
      ]
    },
    "B": {
      "name": "Far Relative\u2019s Problem",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "brute force"
      ]
    },
    "A": {
      "name": "Far Relative\u2019s Birthday Cake",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "combinatorics",
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "628": {
    "F": {
      "name": "Bear and Fair Set",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "flows",
        "graphs"
      ]
    },
    "E": {
      "name": "Zbazi in Zeydabad",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "D": {
      "name": "Magic Numbers",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Bear and String Distance",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "greedy",
        "strings"
      ]
    },
    "B": {
      "name": "New Skateboard",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "dp"
      ]
    },
    "A": {
      "name": "Tennis Tournament",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "627": {
    "F": {
      "name": "Island Puzzle",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3400,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "Orchestra",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "two pointers"
      ]
    },
    "D": {
      "name": "Preorder Test",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "binary search",
        "dfs and similar",
        "dp",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "C": {
      "name": "Package Delivery",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "divide and conquer",
        "greedy"
      ]
    },
    "B": {
      "name": "Factory Repairs",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "data structures"
      ]
    },
    "A": {
      "name": "XOR Equation",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "dp",
        "math"
      ]
    }
  },
  "626": {
    "G": {
      "name": "Raffles",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3100,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "math"
      ]
    },
    "F": {
      "name": "Group Projects",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "dp"
      ]
    },
    "E": {
      "name": "Simple Skewness",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "math",
        "ternary search"
      ]
    },
    "D": {
      "name": "Jerry's Protest",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "probabilities"
      ]
    },
    "C": {
      "name": "Block Towers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Cards",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "dp",
        "math"
      ]
    },
    "A": {
      "name": "Robot Sequence",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "625": {
    "E": {
      "name": "Frog Fights",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "D": {
      "name": "Finals in arithmetic",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "K-special Tables",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "B": {
      "name": "War of the Corporations",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy",
        "strings"
      ]
    },
    "A": {
      "name": "Guest From the Past",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1700,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "624": {
    "B": {
      "name": "Making a String",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Save Luke",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "623": {
    "E": {
      "name": "Transforming Sequence",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3300,
      "tags": [
        "combinatorics",
        "dp",
        "fft",
        "math"
      ]
    },
    "D": {
      "name": "Birthday",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "greedy",
        "math",
        "probabilities"
      ]
    },
    "C": {
      "name": "Electric Charges",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2900,
      "tags": [
        "binary search",
        "dp"
      ]
    },
    "B": {
      "name": "Array GCD",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2300,
      "tags": [
        "dp",
        "greedy",
        "number theory"
      ]
    },
    "A": {
      "name": "Graph and String",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "graphs"
      ]
    }
  },
  "622": {
    "F": {
      "name": "The Sum of the k-th Powers",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "math"
      ]
    },
    "E": {
      "name": "Ants in Leaves",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "greedy",
        "sortings",
        "trees"
      ]
    },
    "D": {
      "name": "Optimal Number Permutation",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "constructive algorithms"
      ]
    },
    "C": {
      "name": "Not Equal on a Segment",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "B": {
      "name": "The Time",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Infinite Sequence",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "621": {
    "E": {
      "name": "Wet Shark and Blocks",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "dp",
        "matrices"
      ]
    },
    "D": {
      "name": "Rat Kwesh and Cheese",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "brute force",
        "constructive algorithms",
        "math"
      ]
    },
    "C": {
      "name": "Wet Shark and Flowers",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "combinatorics",
        "math",
        "number theory",
        "probabilities"
      ]
    },
    "B": {
      "name": "Wet Shark and Bishops",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "combinatorics",
        "implementation"
      ]
    },
    "A": {
      "name": "Wet Shark and Odd and Even",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "620": {
    "F": {
      "name": "Xors on Segments",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "data structures",
        "strings",
        "trees"
      ]
    },
    "E": {
      "name": "New Year Tree",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "bitmasks",
        "data structures",
        "trees"
      ]
    },
    "D": {
      "name": "Professor GukiZ and Two Arrays",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "binary search",
        "two pointers"
      ]
    },
    "C": {
      "name": "Pearls in a Row",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Grandfather Dovlet\u2019s calculator",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Professor GukiZ's Robot",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "618": {
    "G": {
      "name": "Combining Slimes",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3300,
      "tags": [
        "dp",
        "math",
        "matrices",
        "probabilities"
      ]
    },
    "F": {
      "name": "Double Knapsack",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3000,
      "tags": [
        "constructive algorithms",
        "two pointers"
      ]
    },
    "E": {
      "name": "Robot Arm",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "geometry"
      ]
    },
    "D": {
      "name": "Hamiltonian Spanning Tree",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "dp",
        "graph matchings",
        "greedy",
        "trees"
      ]
    },
    "C": {
      "name": "Constellation",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "geometry",
        "implementation"
      ]
    },
    "B": {
      "name": "Guess the Permutation",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "Slime Combining",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "617": {
    "E": {
      "name": "XOR and Favorite Number",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2200,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Polyline",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "C": {
      "name": "Watering Flowers",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    },
    "B": {
      "name": "Chocolate",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "combinatorics"
      ]
    },
    "A": {
      "name": "Elephant",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math"
      ]
    }
  },
  "616": {
    "F": {
      "name": "Expensive Strings",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "string suffix structures",
        "strings"
      ]
    },
    "E": {
      "name": "Sum of Remainders",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "implementation",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Longest k-Good Segment",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "binary search",
        "data structures",
        "two pointers"
      ]
    },
    "C": {
      "name": "The Labyrinth",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "dfs and similar"
      ]
    },
    "B": {
      "name": "Dinner with Emma",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "games",
        "greedy"
      ]
    },
    "A": {
      "name": "Comparing Two Long Integers",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "615": {
    "E": {
      "name": "Hexagons",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Multipliers",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Running Track",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2000,
      "tags": [
        "dp",
        "greedy",
        "strings",
        "trees"
      ]
    },
    "B": {
      "name": "Longtail Hedgehog",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1600,
      "tags": [
        "dp",
        "graphs"
      ]
    },
    "A": {
      "name": "Bulbs",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "614": {
    "B": {
      "name": "Gena's Code",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Link/Cut Tree",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "613": {
    "E": {
      "name": "Puzzle Lover",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3200,
      "tags": [
        "dp",
        "hashing",
        "strings"
      ]
    },
    "D": {
      "name": "Kingdom and its Cities",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2800,
      "tags": [
        "dfs and similar",
        "divide and conquer",
        "dp",
        "graphs",
        "sortings",
        "trees"
      ]
    },
    "C": {
      "name": "Necklace",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "B": {
      "name": "Skills",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "brute force",
        "dp",
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "A": {
      "name": "Peter and Snow Blower",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "geometry",
        "ternary search"
      ]
    }
  },
  "612": {
    "F": {
      "name": "Simba on the Circle",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "dp"
      ]
    },
    "E": {
      "name": "Square Root of Permutation",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "math"
      ]
    },
    "D": {
      "name": "The Union of k-Segments",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Replace To Make Regular Bracket Sequence",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "data structures",
        "expression parsing",
        "math"
      ]
    },
    "B": {
      "name": "HDD is Outdated Technology",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "The Text Splitting",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    }
  },
  "611": {
    "H": {
      "name": "New Year  and Forgotten Tree",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3200,
      "tags": [
        "constructive algorithms",
        "flows",
        "graphs"
      ]
    },
    "G": {
      "name": "New Year and Cake",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2900,
      "tags": [
        "geometry",
        "two pointers"
      ]
    },
    "F": {
      "name": "New Year and Cleaning",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "implementation"
      ]
    },
    "E": {
      "name": "New Year and Three Musketeers",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "D": {
      "name": "New Year and Ancient Prophecy",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2000,
      "tags": [
        "dp",
        "hashing",
        "strings"
      ]
    },
    "C": {
      "name": "New Year and Domino",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "dp",
        "implementation"
      ]
    },
    "B": {
      "name": "New Year and Old Property",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1300,
      "tags": [
        "bitmasks",
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "New Year and Days",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "610": {
    "E": {
      "name": "Alphabet Permutations",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "strings"
      ]
    },
    "D": {
      "name": "Vika and Segments",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "data structures",
        "geometry",
        "two pointers"
      ]
    },
    "C": {
      "name": "Harmony Analysis",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Vika and Squares",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "Pasha and Stick",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "combinatorics",
        "math"
      ]
    }
  },
  "609": {
    "F": {
      "name": "Frogs and mosquitoes",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "E": {
      "name": "Minimum spanning tree for each edge",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "trees"
      ]
    },
    "D": {
      "name": "Gadgets for dollars and pounds",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "binary search",
        "greedy",
        "two pointers"
      ]
    },
    "C": {
      "name": "Load Balancing",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "The Best Gift",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "USB Flash Drives",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    }
  },
  "608": {
    "B": {
      "name": "Hamming Distance Sum",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "combinatorics",
        "strings"
      ]
    },
    "A": {
      "name": "Saitama Destroys Hotel",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "607": {
    "E": {
      "name": "Cross Sum",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3300,
      "tags": [
        "binary search",
        "geometry"
      ]
    },
    "D": {
      "name": "Power Tree",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "C": {
      "name": "Marbles",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "hashing",
        "strings"
      ]
    },
    "B": {
      "name": "Zuma",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1900,
      "tags": [
        "dp"
      ]
    },
    "A": {
      "name": "Chain Reaction",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "dp"
      ]
    }
  },
  "606": {
    "B": {
      "name": "Testing Robots",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Magic Spheres",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    }
  },
  "605": {
    "E": {
      "name": "Intergalaxy Trips",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "probabilities",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Board Game",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "dfs and similar"
      ]
    },
    "C": {
      "name": "Freelancer's Dreams",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "geometry"
      ]
    },
    "B": {
      "name": "Lazy Student",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "data structures",
        "graphs"
      ]
    },
    "A": {
      "name": "Sorting Railway Cars",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    }
  },
  "604": {
    "B": {
      "name": "More Cowbell",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "binary search",
        "greedy"
      ]
    },
    "A": {
      "name": "Uncowed Forces",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "603": {
    "E": {
      "name": "Pastoral Oddities",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "divide and conquer",
        "dsu",
        "math",
        "trees"
      ]
    },
    "D": {
      "name": "Ruminations on Ruminants",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "geometry",
        "math"
      ]
    },
    "C": {
      "name": "Lieges of Legendre",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "games",
        "math"
      ]
    },
    "B": {
      "name": "Moodular Arithmetic",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "dsu",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Alternative Thinking",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "dp",
        "greedy",
        "math"
      ]
    }
  },
  "602": {
    "B": {
      "name": "Approximating a Constant Range",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "dp",
        "implementation",
        "two pointers"
      ]
    },
    "A": {
      "name": "Two Bases",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "601": {
    "E": {
      "name": "A Museum Robbery",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "D": {
      "name": "Acyclic Organic Compounds",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "dfs and similar",
        "dsu",
        "hashing",
        "strings",
        "trees"
      ]
    },
    "C": {
      "name": "Kleof\u00e1\u0161 and the n-thlon",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2300,
      "tags": [
        "dp",
        "math",
        "probabilities"
      ]
    },
    "B": {
      "name": "Lipshitz Sequence",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "math"
      ]
    },
    "A": {
      "name": "The Two Routes",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "graphs",
        "shortest paths"
      ]
    }
  },
  "600": {
    "F": {
      "name": "Edge coloring of bipartite graph",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "graphs"
      ]
    },
    "E": {
      "name": "Lomsat gelral",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "data structures",
        "dfs and similar",
        "dsu",
        "trees"
      ]
    },
    "D": {
      "name": "Area of Two Circles' Intersection",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "geometry"
      ]
    },
    "C": {
      "name": "Make Palindrome",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "strings"
      ]
    },
    "B": {
      "name": "Queries about less or equal elements",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "binary search",
        "data structures",
        "sortings",
        "two pointers"
      ]
    },
    "A": {
      "name": "Extract Numbers",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "599": {
    "E": {
      "name": "Sandy and Nuts",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2600,
      "tags": [
        "bitmasks",
        "dp",
        "trees"
      ]
    },
    "D": {
      "name": "Spongebob and Squares",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "math"
      ]
    },
    "C": {
      "name": "Day at the Beach",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "sortings"
      ]
    },
    "B": {
      "name": "Spongebob and Joke",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Patrick and Shopping",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "598": {
    "F": {
      "name": "Cut Length",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "geometry"
      ]
    },
    "E": {
      "name": "Chocolate Bar",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "brute force",
        "dp"
      ]
    },
    "D": {
      "name": "Igor In the Museum",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "graphs",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Nearest vectors",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "geometry",
        "sortings"
      ]
    },
    "B": {
      "name": "Queries on a String",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Tricky Sum",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "math"
      ]
    }
  },
  "597": {
    "C": {
      "name": "Subsequences",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "B": {
      "name": "Restaurant",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Divisibility",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "math"
      ]
    }
  },
  "596": {
    "E": {
      "name": "Wilbur and Strings",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "strings"
      ]
    },
    "D": {
      "name": "Wilbur and Trees",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "dp",
        "math",
        "probabilities",
        "sortings"
      ]
    },
    "C": {
      "name": "Wilbur and Points",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "combinatorics",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Wilbur and Array",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Wilbur and Swimming Pool",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "geometry",
        "implementation"
      ]
    }
  },
  "595": {
    "B": {
      "name": "Pasha and Phone",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "math"
      ]
    },
    "A": {
      "name": "Vitaly and Night",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "594": {
    "E": {
      "name": "Cutting the Line",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3100,
      "tags": [
        "string suffix structures",
        "strings"
      ]
    },
    "D": {
      "name": "REQ",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "number theory"
      ]
    },
    "C": {
      "name": "Edo and Magnets",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "greedy",
        "implementation",
        "two pointers"
      ]
    },
    "B": {
      "name": "Max and Bike",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "geometry"
      ]
    },
    "A": {
      "name": "Warrior and Archer",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 2300,
      "tags": [
        "games"
      ]
    }
  },
  "593": {
    "E": {
      "name": "Strange Calculation and Cats",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2400,
      "tags": [
        "dp",
        "matrices"
      ]
    },
    "D": {
      "name": "Happy Tree Party",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "math",
        "trees"
      ]
    },
    "C": {
      "name": "Beautiful Function",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "B": {
      "name": "Anton and Lines",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "geometry",
        "sortings"
      ]
    },
    "A": {
      "name": "2Char",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "592": {
    "E": {
      "name": "BCPC",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "binary search",
        "geometry",
        "two pointers"
      ]
    },
    "D": {
      "name": "Super M",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
      ]
    },
    "C": {
      "name": "The Big Race",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "math"
      ]
    },
    "B": {
      "name": "The Monster and the Squirrel",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "PawnChess",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    }
  },
  "591": {
    "B": {
      "name": "Rebranding",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Wizards' Duel",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "590": {
    "E": {
      "name": "Birthday",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3200,
      "tags": [
        "graph matchings",
        "strings"
      ]
    },
    "D": {
      "name": "Top Secret Task",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2300,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Three States",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "graphs",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Chip 'n Dale Rescue Rangers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "geometry",
        "math"
      ]
    },
    "A": {
      "name": "Median Smoothing",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1700,
      "tags": [
        "implementation"
      ]
    }
  },
  "588": {
    "B": {
      "name": "Duff in Love",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Duff and Meat",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 900,
      "tags": [
        "greedy"
      ]
    }
  },
  "587": {
    "F": {
      "name": "Duff is Mad",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "strings"
      ]
    },
    "E": {
      "name": "Duff as a Queen",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2900,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Duff in Mafia",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3100,
      "tags": [
        "2-sat",
        "binary search"
      ]
    },
    "C": {
      "name": "Duff in the Army",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "B": {
      "name": "Duff in Beach",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "dp"
      ]
    },
    "A": {
      "name": "Duff and Weight Lifting",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "greedy"
      ]
    }
  },
  "586": {
    "B": {
      "name": "Laurenty and Shop",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Alena's Schedule",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "585": {
    "F": {
      "name": "Digits of Number Pi",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3200,
      "tags": [
        "dp",
        "implementation",
        "strings"
      ]
    },
    "E": {
      "name": "Present for Vitalik the Philatelist ",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2900,
      "tags": [
        "combinatorics",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Lizard Era: Beginning",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2300,
      "tags": [
        "meet-in-the-middle"
      ]
    },
    "C": {
      "name": "Alice, Bob, Oranges and Apples",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2400,
      "tags": [
        "number theory"
      ]
    },
    "B": {
      "name": "Phillip and Trains",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "graphs",
        "shortest paths"
      ]
    },
    "A": {
      "name": "Gennady the Dentist",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "584": {
    "E": {
      "name": "Anton and Ira",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "D": {
      "name": "Dima and Lisa",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Marina and Vasya",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "greedy",
        "strings"
      ]
    },
    "B": {
      "name": "Kolya and Tanya ",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "combinatorics"
      ]
    },
    "A": {
      "name": "Olesya and Rodion",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "math"
      ]
    }
  },
  "583": {
    "B": {
      "name": "Robot's Task",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Asphalting Roads",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "582": {
    "E": {
      "name": "Boolean Function",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "bitmasks",
        "dp",
        "expression parsing"
      ]
    },
    "D": {
      "name": "Number of Binominal Coefficients",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3300,
      "tags": [
        "dp",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Superior Periodic Subarrays",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "number theory"
      ]
    },
    "B": {
      "name": "Once Again...",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "dp",
        "matrices"
      ]
    },
    "A": {
      "name": "GCD Table",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "greedy",
        "number theory"
      ]
    }
  },
  "581": {
    "F": {
      "name": "Zublicanes and Mumocrates",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2400,
      "tags": [
        "dp",
        "trees",
        "two pointers"
      ]
    },
    "E": {
      "name": "Kojiro and Furrari",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Three Logos",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "geometry",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Developing Skills",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "implementation",
        "math",
        "sortings"
      ]
    },
    "B": {
      "name": "Luxurious Houses",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Vasya the Hipster",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "580": {
    "E": {
      "name": "Kefa and Watch",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "hashing",
        "strings"
      ]
    },
    "D": {
      "name": "Kefa and Dishes",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "C": {
      "name": "Kefa and Park",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "B": {
      "name": "Kefa and Company",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "sortings",
        "two pointers"
      ]
    },
    "A": {
      "name": "Kefa and First Steps",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 900,
      "tags": [
        "brute force",
        "dp",
        "implementation"
      ]
    }
  },
  "579": {
    "B": {
      "name": "Finding Team Member",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Raising Bacteria",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 1000,
      "tags": [
        "bitmasks"
      ]
    }
  },
  "578": {
    "F": {
      "name": "Mirror Box",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3200,
      "tags": [
        "matrices",
        "trees"
      ]
    },
    "E": {
      "name": "Walking!",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "D": {
      "name": "LCS Again",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Weakness and Poorness",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2000,
      "tags": [
        "ternary search"
      ]
    },
    "B": {
      "name": "\"Or\" Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "greedy"
      ]
    },
    "A": {
      "name": "A Problem about Polyline",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 1700,
      "tags": [
        "geometry",
        "math"
      ]
    }
  },
  "577": {
    "B": {
      "name": "Modulo Sum",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1900,
      "tags": [
        "combinatorics",
        "data structures",
        "dp",
        "two pointers"
      ]
    },
    "A": {
      "name": "Multiplication Table",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation",
        "number theory"
      ]
    }
  },
  "576": {
    "E": {
      "name": "Painting Edges",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3300,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "D": {
      "name": "Flights for Regular Customers",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "dp",
        "matrices"
      ]
    },
    "C": {
      "name": "Points on Plane",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "divide and conquer",
        "geometry",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Invariance of Tree",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "greedy",
        "trees"
      ]
    },
    "A": {
      "name": "Vasya and Petya's Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "math",
        "number theory"
      ]
    }
  },
  "575": {
    "I": {
      "name": "Robots protection",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "data structures"
      ]
    },
    "H": {
      "name": "Bots",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory"
      ]
    },
    "G": {
      "name": "Run for beer",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "shortest paths"
      ]
    },
    "F": {
      "name": "Bulbo",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "E": {
      "name": "Spectator Riots",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "geometry"
      ]
    },
    "D": {
      "name": "Tablecity",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "C": {
      "name": "Party",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "bitmasks",
        "brute force",
        "graph matchings"
      ]
    },
    "B": {
      "name": "Bribes",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "A": {
      "name": "Fibonotci",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "data structures",
        "math",
        "matrices"
      ]
    }
  },
  "574": {
    "B": {
      "name": "Bear and Three Musketeers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "dfs and similar",
        "graphs",
        "hashing"
      ]
    },
    "A": {
      "name": "Bear and Elections",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "573": {
    "E": {
      "name": "Bear and Bowling",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3200,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "D": {
      "name": "Bear and Cavalry",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "divide and conquer",
        "dp"
      ]
    },
    "C": {
      "name": "Bear and Drawing",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "trees"
      ]
    },
    "B": {
      "name": "Bear and Blocks",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "math"
      ]
    },
    "A": {
      "name": "Bear and Poker",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "implementation",
        "math",
        "number theory"
      ]
    }
  },
  "572": {
    "B": {
      "name": "Order Book",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "data structures",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Arrays",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "sortings"
      ]
    }
  },
  "571": {
    "E": {
      "name": "Geometric Progressions",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 3200,
      "tags": [
        "math"
      ]
    },
    "D": {
      "name": "Campus",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3100,
      "tags": [
        "binary search",
        "data structures",
        "dsu",
        "trees"
      ]
    },
    "C": {
      "name": "CNF 2",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy"
      ]
    },
    "B": {
      "name": "Minimization",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2000,
      "tags": [
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Lengthening Sticks",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2100,
      "tags": [
        "combinatorics",
        "implementation",
        "math"
      ]
    }
  },
  "570": {
    "E": {
      "name": "Pig and Palindromes",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "D": {
      "name": "Tree Requests",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "bitmasks",
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "C": {
      "name": "Replacement",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "data structures",
        "implementation"
      ]
    },
    "B": {
      "name": "Simple Game",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "games",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Elections",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    }
  },
  "569": {
    "B": {
      "name": "Inventory",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Music",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "568": {
    "E": {
      "name": "Longest Increasing Subsequence",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "D": {
      "name": "Sign Posts",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2800,
      "tags": [
        "brute force",
        "geometry",
        "math"
      ]
    },
    "C": {
      "name": "New Language",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2600,
      "tags": [
        "2-sat",
        "greedy"
      ]
    },
    "B": {
      "name": "Symmetric and Transitive",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "A": {
      "name": "Primes or Palindromes?",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "implementation",
        "math",
        "number theory"
      ]
    }
  },
  "567": {
    "F": {
      "name": "Mausoleum",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "dp"
      ]
    },
    "E": {
      "name": "President and Roads",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "graphs",
        "hashing",
        "shortest paths"
      ]
    },
    "D": {
      "name": "One-Dimensional Battle Ships",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Geometric Progression",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "data structures",
        "dp"
      ]
    },
    "B": {
      "name": "Berland National Library",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Lineland Mail",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "566": {
    "G": {
      "name": "Max and Min",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "geometry"
      ]
    },
    "F": {
      "name": "Clique in the Divisibility Graph",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "dp",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Restoring Map",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3200,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "trees"
      ]
    },
    "D": {
      "name": "Restructuring Company",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "dsu"
      ]
    },
    "C": {
      "name": "Logistical Questions",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "dfs and similar",
        "divide and conquer",
        "trees"
      ]
    },
    "B": {
      "name": "Replicating Processes",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "Matching Names",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2300,
      "tags": [
        "dfs and similar",
        "strings",
        "trees"
      ]
    }
  },
  "560": {
    "B": {
      "name": "Gerald is into Art",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "Currency System in Geraldion",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation",
        "sortings"
      ]
    }
  },
  "559": {
    "E": {
      "name": "Gerald and Path",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 3000,
      "tags": [
        "dp",
        "sortings"
      ]
    },
    "D": {
      "name": "Randomizer",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2800,
      "tags": [
        "combinatorics",
        "geometry",
        "probabilities"
      ]
    },
    "C": {
      "name": "Gerald and Giant Chess",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Equivalent Strings",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "divide and conquer",
        "hashing",
        "sortings",
        "strings"
      ]
    },
    "A": {
      "name": "Gerald's Hexagon",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "geometry",
        "math"
      ]
    }
  },
  "558": {
    "E": {
      "name": "A Simple Task",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "sortings",
        "strings"
      ]
    },
    "D": {
      "name": "Guess Your Way Out! II",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "implementation",
        "sortings"
      ]
    },
    "C": {
      "name": "Amr and Chemistry",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "graphs",
        "greedy",
        "math",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Amr and The Large Array",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Lala Land and Apple Trees",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation",
        "sortings"
      ]
    }
  },
  "557": {
    "E": {
      "name": "Ann and Half-Palindrome",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "dp",
        "graphs",
        "string suffix structures",
        "strings",
        "trees"
      ]
    },
    "D": {
      "name": "Vitaly and Cycle",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "graphs",
        "math"
      ]
    },
    "C": {
      "name": "Arthur and Table",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "data structures",
        "dp",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "B": {
      "name": "Pasha and Tea",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "implementation",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Ilya and Diplomas",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "556": {
    "B": {
      "name": "Case of Fake Numbers",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Case of the Zeros and Ones",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 900,
      "tags": [
        "greedy"
      ]
    }
  },
  "555": {
    "E": {
      "name": "Case of Computer Network",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "D": {
      "name": "Case of a Top Secret",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Case of Chocolate",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2200,
      "tags": [
        "data structures"
      ]
    },
    "B": {
      "name": "Case of Fugitive",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2000,
      "tags": [
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Case of Matryoshkas",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 1500,
      "tags": [
        "implementation"
      ]
    }
  },
  "554": {
    "B": {
      "name": "Ohana Cleans Up",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "greedy",
        "strings"
      ]
    },
    "A": {
      "name": "Kyoya and Photobooks",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 900,
      "tags": [
        "brute force",
        "math",
        "strings"
      ]
    }
  },
  "553": {
    "E": {
      "name": "Kyoya and Train",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3200,
      "tags": [
        "dp",
        "fft",
        "graphs",
        "math",
        "probabilities"
      ]
    },
    "D": {
      "name": "Nudist Beach",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "graphs",
        "greedy"
      ]
    },
    "C": {
      "name": "Love Triangles",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "B": {
      "name": "Kyoya and Permutation",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "combinatorics",
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Kyoya and Colored Balls",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 1500,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    }
  },
  "552": {
    "E": {
      "name": "Vanya and Brackets",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "dp",
        "expression parsing",
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "D": {
      "name": "Vanya and Triangles",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "combinatorics",
        "data structures",
        "geometry",
        "math",
        "sortings"
      ]
    },
    "C": {
      "name": "Vanya and Scales",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "math",
        "meet-in-the-middle",
        "number theory"
      ]
    },
    "B": {
      "name": "Vanya and Books",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Vanya and Table",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "551": {
    "E": {
      "name": "GukiZ and GukiZiana",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "data structures",
        "implementation"
      ]
    },
    "D": {
      "name": "GukiZ and Binary Operations",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "combinatorics",
        "implementation",
        "math",
        "matrices",
        "number theory"
      ]
    },
    "C": {
      "name": "GukiZ hates Boxes",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "greedy"
      ]
    },
    "B": {
      "name": "ZgukistringZ",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "GukiZ and Contest",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "implementation",
        "sortings"
      ]
    }
  },
  "550": {
    "E": {
      "name": "Brackets in Implications",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Regular Bridge",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "graphs",
        "implementation"
      ]
    },
    "C": {
      "name": "Divisibility by Eight",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "dp",
        "math"
      ]
    },
    "B": {
      "name": "Preparing Olympiad",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1400,
      "tags": [
        "bitmasks",
        "brute force"
      ]
    },
    "A": {
      "name": "Two Substrings",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation",
        "strings"
      ]
    }
  },
  "549": {
    "H": {
      "name": "Degenerate Matrix",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "math"
      ]
    },
    "G": {
      "name": "Happy Line",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "greedy",
        "sortings"
      ]
    },
    "F": {
      "name": "Yura and Developers",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "divide and conquer"
      ]
    },
    "E": {
      "name": "Sasha Circle",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "geometry",
        "math"
      ]
    },
    "D": {
      "name": "Haar Features",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "The Game Of Parity",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "games"
      ]
    },
    "B": {
      "name": "Looksery Party",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy"
      ]
    },
    "A": {
      "name": "Face Detection",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 900,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "548": {
    "B": {
      "name": "Mike and Fun",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Mike and Fax",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    }
  },
  "547": {
    "E": {
      "name": "Mike and Friends",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "string suffix structures",
        "strings",
        "trees"
      ]
    },
    "D": {
      "name": "Mike and Fish",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2600,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs"
      ]
    },
    "C": {
      "name": "Mike and Foam",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2300,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Mike and Feet",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "dsu"
      ]
    },
    "A": {
      "name": "Mike and Frog",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "546": {
    "E": {
      "name": "Soldier and Traveling",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2100,
      "tags": [
        "flows",
        "graphs",
        "math"
      ]
    },
    "D": {
      "name": "Soldier and Number Game",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "dp",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Soldier and Cards",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "dfs and similar",
        "games"
      ]
    },
    "B": {
      "name": "Soldier and Badges",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Soldier and Bananas",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    }
  },
  "545": {
    "E": {
      "name": "Paths and Trees",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "graphs",
        "greedy",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Queue",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "C": {
      "name": "Woodcutters",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1500,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "B": {
      "name": "Equidistant String",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Toy Cars",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "544": {
    "B": {
      "name": "Sea and Islands",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "Set of Strings",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "543": {
    "E": {
      "name": "Listening to Music",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3200,
      "tags": [
        "constructive algorithms",
        "data structures"
      ]
    },
    "D": {
      "name": "Road Improvement",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2300,
      "tags": [
        "dp",
        "trees"
      ]
    },
    "C": {
      "name": "Remembering Strings",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "B": {
      "name": "Destroying Roads",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "graphs",
        "shortest paths"
      ]
    },
    "A": {
      "name": "Writing Code",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "dp"
      ]
    }
  },
  "542": {
    "F": {
      "name": "Quest",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "E": {
      "name": "Playing on Graph",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2600,
      "tags": [
        "graphs",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Superhero's Job",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2600,
      "tags": [
        "dfs and similar",
        "dp",
        "hashing",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Idempotent functions",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "graphs",
        "math"
      ]
    },
    "B": {
      "name": "Duck Hunt",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3100,
      "tags": [
        "data structures"
      ]
    },
    "A": {
      "name": "Place Your Ad Here",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "sortings"
      ]
    }
  },
  "540": {
    "E": {
      "name": "Infinite Inversions",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "data structures",
        "implementation",
        "sortings",
        "trees"
      ]
    },
    "D": {
      "name": "Bad Luck Island",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "dp",
        "probabilities"
      ]
    },
    "C": {
      "name": "Ice Cave",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "dfs and similar"
      ]
    },
    "B": {
      "name": "School Marks",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Combination Lock",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "538": {
    "H": {
      "name": "Summer Dichotomy",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3200,
      "tags": [
        "2-sat",
        "data structures",
        "dfs and similar",
        "greedy"
      ]
    },
    "G": {
      "name": "Berserk Robot ",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3100,
      "tags": [
        "constructive algorithms",
        "math",
        "sortings"
      ]
    },
    "F": {
      "name": "A Heap of Heaps",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "data structures",
        "math",
        "sortings"
      ]
    },
    "E": {
      "name": "Demiurges Play Again",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "dp",
        "math",
        "trees"
      ]
    },
    "D": {
      "name": "Weird Chess",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation"
      ]
    },
    "C": {
      "name": "Tourist's Notes",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "brute force",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Quasi Binary",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Cutting Banner",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "536": {
    "E": {
      "name": "Tavas on the Path",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "data structures",
        "divide and conquer",
        "trees"
      ]
    },
    "D": {
      "name": "Tavas in Kansas",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "dp",
        "games"
      ]
    }
  },
  "535": {
    "E": {
      "name": "Tavas and Pashmaks",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "geometry",
        "math"
      ]
    },
    "D": {
      "name": "Tavas and Malekas",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "greedy",
        "hashing",
        "string suffix structures",
        "strings"
      ]
    },
    "C": {
      "name": "Tavas and Karafs",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Tavas and SaDDas",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "bitmasks",
        "brute force",
        "combinatorics",
        "implementation"
      ]
    },
    "A": {
      "name": "Tavas and Nafas",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "534": {
    "F": {
      "name": "Simplified Nonogram",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "dp",
        "hashing",
        "meet-in-the-middle"
      ]
    },
    "E": {
      "name": "Berland Local Positioning System",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "greedy",
        "hashing",
        "implementation"
      ]
    },
    "D": {
      "name": "Handshakes",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "greedy"
      ]
    },
    "C": {
      "name": "Polycarpus' Dice",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "math"
      ]
    },
    "B": {
      "name": "Covered Path",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "dp",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Exam",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "implementation",
        "math"
      ]
    }
  },
  "533": {
    "F": {
      "name": "Encoding",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "hashing",
        "string suffix structures",
        "strings"
      ]
    },
    "E": {
      "name": "Correcting Mistakes",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy",
        "hashing",
        "strings",
        "two pointers"
      ]
    },
    "D": {
      "name": "Landmarks",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "C": {
      "name": "Board Game",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 1700,
      "tags": [
        "games",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Work Group",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "strings",
        "trees"
      ]
    },
    "A": {
      "name": "Berland Miners",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "greedy",
        "trees"
      ]
    }
  },
  "530": {
    "I": {
      "name": "Different variables",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "*special"
      ]
    },
    "H": {
      "name": "Points in triangle",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "*special",
        "geometry"
      ]
    },
    "G": {
      "name": "Levenshtein distance",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "*special"
      ]
    },
    "F": {
      "name": "Jumping frogs",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "*special"
      ]
    },
    "E": {
      "name": "Sum and product",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "*special"
      ]
    },
    "D": {
      "name": "Set subtraction",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "*special"
      ]
    },
    "C": {
      "name": "Diophantine equation",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "*special"
      ]
    },
    "B": {
      "name": "String inside out",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "*special"
      ]
    },
    "A": {
      "name": "Quadratic equation",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "*special"
      ]
    }
  },
  "529": {
    "B": {
      "name": "Group Photo 2 (online mirror version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "greedy",
        "sortings"
      ]
    }
  },
  "528": {
    "E": {
      "name": "Triangles 3000",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "geometry",
        "sortings"
      ]
    },
    "D": {
      "name": "Fuzzy Search",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "brute force",
        "fft"
      ]
    }
  },
  "527": {
    "E": {
      "name": "Data Center Drama",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "D": {
      "name": "Clique Problem",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "C": {
      "name": "Glass Carving",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "data structures",
        "implementation"
      ]
    },
    "B": {
      "name": "Error Correct System",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Playing with Paper",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "526": {
    "G": {
      "name": "Spiders Evil Plan",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3300,
      "tags": [
        "greedy",
        "trees"
      ]
    },
    "F": {
      "name": "Pudding Monsters",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "divide and conquer"
      ]
    },
    "E": {
      "name": "Transmitting Levels",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2400,
      "tags": [
        "dp",
        "implementation"
      ]
    },
    "D": {
      "name": "Om Nom and Necklace",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2200,
      "tags": [
        "hashing",
        "string suffix structures",
        "strings"
      ]
    },
    "C": {
      "name": "Om Nom and Candies",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Om Nom and Dark Park",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "dfs and similar",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "King of Thieves",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "525": {
    "E": {
      "name": "Anya and Cubes",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "dp",
        "math",
        "meet-in-the-middle"
      ]
    },
    "D": {
      "name": "Arthur and Walls",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "data structures",
        "graphs",
        "greedy",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Ilya and Sticks",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "greedy",
        "math",
        "sortings"
      ]
    },
    "B": {
      "name": "Pasha and String",
      "type": "PROGRAMMING",
      "points": 750.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "strings"
      ]
    },
    "A": {
      "name": "Vitaliy and Pie",
      "type": "PROGRAMMING",
      "points": 250.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "hashing",
        "strings"
      ]
    }
  },
  "524": {
    "F": {
      "name": "And Yet Another Bracket Sequence",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "greedy",
        "hashing",
        "string suffix structures",
        "strings"
      ]
    },
    "E": {
      "name": "Rooks and Rectangles",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "sortings"
      ]
    },
    "D": {
      "name": "Social Network",
      "type": "PROGRAMMING",
      "points": 1250.0,
      "rating": 2100,
      "tags": [
        "greedy",
        "two pointers"
      ]
    },
    "C": {
      "name": "The Art of Dealing with ATM",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "sortings"
      ]
    },
    "B": {
      "name": "\u0424\u043e\u0442\u043e \u043d\u0430 \u043f\u0430\u043c\u044f\u0442\u044c - 2 (round version)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "A": {
      "name": "\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0432\u044b \u0437\u043d\u0430\u0435\u0442\u0435 \u044d\u0442\u0438\u0445 \u043b\u044e\u0434\u0435\u0439?",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    }
  },
  "523": {
    "D": {
      "name": "Statistics of Recompressing Videos",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1600,
      "tags": [
        "*special",
        "data structures",
        "implementation"
      ]
    },
    "C": {
      "name": "Name Quest",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "*special",
        "greedy"
      ]
    },
    "B": {
      "name": "Mean Requests",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "A": {
      "name": "Rotate, Flip and Zoom",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "*special",
        "implementation"
      ]
    }
  },
  "522": {
    "D": {
      "name": "Closest Equals",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "*special",
        "data structures"
      ]
    },
    "C": {
      "name": "Chicken or Fish?",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Photo to Remember",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "*special",
        "data structures",
        "dp",
        "implementation"
      ]
    },
    "A": {
      "name": "Reposts",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "*special",
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
      ]
    }
  },
  "521": {
    "E": {
      "name": "Cycling City",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "D": {
      "name": "Shop",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2800,
      "tags": [
        "greedy"
      ]
    }
  },
  "520": {
    "E": {
      "name": "Pluses everywhere",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Cubes",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "games",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "DNA Alignment",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "math",
        "strings"
      ]
    },
    "B": {
      "name": "Two Buttons",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "dfs and similar",
        "graphs",
        "greedy",
        "implementation",
        "math",
        "shortest paths"
      ]
    },
    "A": {
      "name": "Pangram",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "519": {
    "E": {
      "name": "A and B and Lecture Rooms",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "D": {
      "name": "A and B and Interesting Substrings",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "data structures",
        "dp",
        "two pointers"
      ]
    },
    "C": {
      "name": "A and B and Team Training",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "implementation",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "A and B and Compilation Errors",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "data structures",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "A and B and Chess",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "518": {
    "F": {
      "name": "Pasha and Pipe",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "brute force",
        "combinatorics",
        "dp",
        "implementation"
      ]
    },
    "E": {
      "name": "Arthur and Questions",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "greedy",
        "implementation",
        "math",
        "ternary search"
      ]
    },
    "D": {
      "name": "Ilya and Escalator",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "probabilities"
      ]
    },
    "C": {
      "name": "Anya and Smartphone",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "data structures",
        "implementation"
      ]
    },
    "B": {
      "name": "Tanya and Postcard",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Vitaly and Strings",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "strings"
      ]
    }
  },
  "516": {
    "E": {
      "name": "Drazil and His Happy Friends",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3100,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Drazil and Morning Exercise",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "dfs and similar",
        "dp",
        "dsu",
        "trees",
        "two pointers"
      ]
    }
  },
  "515": {
    "E": {
      "name": "Drazil and Park",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2300,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Drazil and Tiles",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "C": {
      "name": "Drazil and Factorial",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "math",
        "sortings"
      ]
    },
    "B": {
      "name": "Drazil and His Happy Friends",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "dsu",
        "meet-in-the-middle",
        "number theory"
      ]
    },
    "A": {
      "name": "Drazil and Date",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "math"
      ]
    }
  },
  "514": {
    "E": {
      "name": "Darth Vader and Tree",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "dp",
        "matrices"
      ]
    },
    "D": {
      "name": "R2D2 and Droid Army",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "data structures",
        "two pointers"
      ]
    },
    "C": {
      "name": "Watto and Mechanism",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "data structures",
        "hashing",
        "string suffix structures",
        "strings"
      ]
    },
    "B": {
      "name": "Han Solo and Lazer Gun",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "data structures",
        "geometry",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Chewba\u0441ca and Number",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "513": {
    "G3": {
      "name": "Inversions problem",
      "type": "PROGRAMMING",
      "points": 16.0,
      "rating": 3100,
      "tags": [
        "dp"
      ]
    },
    "G2": {
      "name": "Inversions problem",
      "type": "PROGRAMMING",
      "points": 5.0,
      "rating": 2400,
      "tags": [
        "dp",
        "probabilities"
      ]
    },
    "G1": {
      "name": "Inversions problem",
      "type": "PROGRAMMING",
      "points": 3.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "dfs and similar",
        "dp",
        "meet-in-the-middle"
      ]
    },
    "F2": {
      "name": "Scaygerboss",
      "type": "PROGRAMMING",
      "points": 6.0,
      "rating": 2800,
      "tags": [
        "flows"
      ]
    },
    "F1": {
      "name": "Scaygerboss",
      "type": "PROGRAMMING",
      "points": 14.0,
      "rating": 2700,
      "tags": [
        "flows"
      ]
    },
    "E2": {
      "name": "Subarray Cuts",
      "type": "PROGRAMMING",
      "points": 12.0,
      "rating": 2700,
      "tags": [
        "dp"
      ]
    },
    "E1": {
      "name": "Subarray Cuts",
      "type": "PROGRAMMING",
      "points": 9.0,
      "rating": 2600,
      "tags": [
        "dp"
      ]
    },
    "D2": {
      "name": "Constrained Tree",
      "type": "PROGRAMMING",
      "points": 8.0,
      "rating": 2600,
      "tags": [
        "constructive algorithms",
        "data structures"
      ]
    },
    "D1": {
      "name": "Constrained Tree",
      "type": "PROGRAMMING",
      "points": 9.0,
      "rating": 2400,
      "tags": [
        "dfs and similar"
      ]
    },
    "C": {
      "name": "Second price auction",
      "type": "PROGRAMMING",
      "points": 8.0,
      "rating": 2000,
      "tags": [
        "bitmasks",
        "probabilities"
      ]
    },
    "B2": {
      "name": "Permutations",
      "type": "PROGRAMMING",
      "points": 4.0,
      "rating": 1800,
      "tags": [
        "bitmasks",
        "divide and conquer",
        "math"
      ]
    },
    "B1": {
      "name": "Permutations",
      "type": "PROGRAMMING",
      "points": 3.0,
      "rating": 1400,
      "tags": [
        "brute force"
      ]
    },
    "A": {
      "name": "Game",
      "type": "PROGRAMMING",
      "points": 3.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "512": {
    "E": {
      "name": "Fox And Polygon",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2900,
      "tags": [
        "constructive algorithms",
        "divide and conquer"
      ]
    },
    "D": {
      "name": "Fox And Travelling",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2900,
      "tags": [
        "dp",
        "trees"
      ]
    }
  },
  "510": {
    "E": {
      "name": "Fox And Dinner",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "flows"
      ]
    },
    "D": {
      "name": "Fox And Jumping",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "math"
      ]
    },
    "C": {
      "name": "Fox And Names",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "graphs",
        "sortings"
      ]
    },
    "B": {
      "name": "Fox And Two Dots",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "dfs and similar"
      ]
    },
    "A": {
      "name": "Fox And Snake",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "509": {
    "F": {
      "name": "Progress Monitoring",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "dp",
        "trees"
      ]
    },
    "E": {
      "name": "Pretty Song",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "math",
        "strings"
      ]
    },
    "D": {
      "name": "Restoring Numbers",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "C": {
      "name": "Sums of Digits",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Painting Pebbles",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Maximum in Table",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "508": {
    "E": {
      "name": "Arthur and Brackets",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Tanya and Password",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "C": {
      "name": "Anya and Ghosts",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "B": {
      "name": "Anton and currency you all know",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "math",
        "strings"
      ]
    },
    "A": {
      "name": "Pasha and Pixels",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "brute force"
      ]
    }
  },
  "507": {
    "E": {
      "name": "Breaking Good",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "shortest paths"
      ]
    },
    "D": {
      "name": "The Maths Lecture",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "dp",
        "implementation"
      ]
    },
    "C": {
      "name": "Guess Your Way Out!",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "implementation",
        "math",
        "trees"
      ]
    },
    "B": {
      "name": "Amr and Pins",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "geometry",
        "math"
      ]
    },
    "A": {
      "name": "Amr and Music",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    }
  },
  "506": {
    "E": {
      "name": "Mr. Kitayuta's Gift",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "combinatorics",
        "dp",
        "matrices",
        "strings"
      ]
    },
    "D": {
      "name": "Mr. Kitayuta's Colorful Graph",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2400,
      "tags": [
        "brute force",
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    }
  },
  "505": {
    "E": {
      "name": "Mr. Kitayuta vs. Bamboos",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2900,
      "tags": [
        "binary search",
        "greedy"
      ]
    },
    "D": {
      "name": "Mr. Kitayuta's Technology",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "dfs and similar"
      ]
    },
    "C": {
      "name": "Mr. Kitayuta, the Treasure Hunter",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "dfs and similar",
        "dp",
        "two pointers"
      ]
    },
    "B": {
      "name": "Mr. Kitayuta's Colorful Graph",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "dfs and similar",
        "dp",
        "dsu",
        "graphs"
      ]
    },
    "A": {
      "name": "Mr. Kitayuta's Gift",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    }
  },
  "504": {
    "E": {
      "name": "Misha and LCP on Tree",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "binary search",
        "dfs and similar",
        "hashing",
        "string suffix structures",
        "trees"
      ]
    },
    "D": {
      "name": "Misha and XOR",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "bitmasks"
      ]
    }
  },
  "501": {
    "E": {
      "name": "Misha and Palindrome Degree",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "combinatorics",
        "implementation"
      ]
    },
    "D": {
      "name": "Misha and Permutations Summation",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2000,
      "tags": [
        "data structures"
      ]
    },
    "C": {
      "name": "Misha and Forest",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "sortings",
        "trees"
      ]
    },
    "B": {
      "name": "Misha and Changing Handles",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "data structures",
        "dsu",
        "strings"
      ]
    },
    "A": {
      "name": "Contest",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "500": {
    "G": {
      "name": "New Year Running",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3200,
      "tags": [
        "number theory",
        "trees"
      ]
    },
    "F": {
      "name": "New Year Shopping",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2700,
      "tags": [
        "divide and conquer",
        "dp"
      ]
    },
    "E": {
      "name": "New Year Domino",
      "type": "PROGRAMMING",
      "points": 2750.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "dp",
        "dsu"
      ]
    },
    "D": {
      "name": "New Year Santa Network",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "C": {
      "name": "New Year Book Reading",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "New Year Permutation",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "New Year Transportation",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "dfs and similar",
        "graphs",
        "implementation"
      ]
    }
  },
  "499": {
    "B": {
      "name": "Lecture",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Watching a movie",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "498": {
    "E": {
      "name": "Stairs and Lines",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "dp",
        "matrices"
      ]
    },
    "D": {
      "name": "Traffic Jams in the Land",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "dp",
        "number theory"
      ]
    },
    "C": {
      "name": "Array and Operations",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "flows",
        "graph matchings",
        "number theory"
      ]
    },
    "B": {
      "name": "Name That Tune",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "dp",
        "probabilities",
        "two pointers"
      ]
    },
    "A": {
      "name": "Crazy Town",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "geometry"
      ]
    }
  },
  "497": {
    "E": {
      "name": "Subsequences Return",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "dp",
        "matrices"
      ]
    },
    "D": {
      "name": "Gears",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "brute force",
        "geometry",
        "math"
      ]
    }
  },
  "496": {
    "E": {
      "name": "Distributing Parts ",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 2100,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "D": {
      "name": "Tennis Game",
      "type": "PROGRAMMING",
      "points": 2250.0,
      "rating": 1900,
      "tags": [
        "binary search"
      ]
    },
    "C": {
      "name": "Removing Columns",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation"
      ]
    },
    "B": {
      "name": "Secret Combination",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "Minimum Difficulty",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    }
  },
  "495": {
    "B": {
      "name": "Modular Equations",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Digital Counter",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    }
  },
  "494": {
    "E": {
      "name": "Sharti",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3200,
      "tags": [
        "data structures",
        "games"
      ]
    },
    "D": {
      "name": "Birthday",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "C": {
      "name": "Helping People",
      "type": "PROGRAMMING",
      "points": 1750.0,
      "rating": 2600,
      "tags": [
        "dp",
        "probabilities"
      ]
    },
    "B": {
      "name": "Obsessive String",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "dp",
        "strings"
      ]
    },
    "A": {
      "name": "Treasure",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "greedy"
      ]
    }
  },
  "493": {
    "E": {
      "name": "Vasya and Polynomial",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "math"
      ]
    },
    "D": {
      "name": "Vasya and Chess",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "games",
        "math"
      ]
    },
    "C": {
      "name": "Vasya and Basketball",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "implementation",
        "sortings",
        "two pointers"
      ]
    },
    "B": {
      "name": "Vasya and Wrestling",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Vasya and Football",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    }
  },
  "492": {
    "E": {
      "name": "Vanya and Field",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "math"
      ]
    },
    "D": {
      "name": "Vanya and Computer Game",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "implementation",
        "math",
        "sortings"
      ]
    },
    "C": {
      "name": "Vanya and Exams",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Vanya and Lanterns",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "binary search",
        "implementation",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Vanya and Cubes",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "491": {
    "C": {
      "name": "Deciphering",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "flows",
        "graph matchings"
      ]
    },
    "B": {
      "name": "New York Hotel",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Up the hill",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "490": {
    "F": {
      "name": "Treeland Tour",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "E": {
      "name": "Restoring Increasing Sequence",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "brute force",
        "greedy",
        "implementation"
      ]
    },
    "D": {
      "name": "Chocolate",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "dfs and similar",
        "math",
        "meet-in-the-middle",
        "number theory"
      ]
    },
    "C": {
      "name": "Hacking Cypher",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "math",
        "number theory",
        "strings"
      ]
    },
    "B": {
      "name": "Queue",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "dsu",
        "implementation"
      ]
    },
    "A": {
      "name": "Team Olympiad",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    }
  },
  "489": {
    "F": {
      "name": "Special Matrices",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "E": {
      "name": "Hiking",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "dp"
      ]
    },
    "D": {
      "name": "Unbearable Controversy of Being",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "combinatorics",
        "dfs and similar",
        "graphs"
      ]
    },
    "C": {
      "name": "Given Length and Sum of Digits...",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "BerSU Ball",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "dfs and similar",
        "dp",
        "graph matchings",
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "A": {
      "name": "SwapSort",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    }
  },
  "488": {
    "B": {
      "name": "Candy Boxes",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Giga Tower",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "brute force"
      ]
    }
  },
  "487": {
    "E": {
      "name": "Tourists",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3200,
      "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "D": {
      "name": "Conveyor Belts",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "data structures"
      ]
    },
    "C": {
      "name": "Prefix Product Sequence",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Strip",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "two pointers"
      ]
    },
    "A": {
      "name": "Fight the Monster",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "brute force",
        "implementation"
      ]
    }
  },
  "486": {
    "E": {
      "name": "LIS of Sequence",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "hashing",
        "math"
      ]
    },
    "D": {
      "name": "Valid Sets",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "dfs and similar",
        "dp",
        "math",
        "trees"
      ]
    },
    "C": {
      "name": "Palindrome Transformation",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "OR in Matrix",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "hashing",
        "implementation"
      ]
    },
    "A": {
      "name": "Calculating Function",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "485": {
    "B": {
      "name": "Valuable Resources",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "greedy"
      ]
    },
    "A": {
      "name": "Factory",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "implementation",
        "math",
        "matrices"
      ]
    }
  },
  "484": {
    "E": {
      "name": "Sign on Fence",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "constructive algorithms",
        "data structures"
      ]
    },
    "D": {
      "name": "Kindergarten",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Strange Sorting",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2600,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Maximum Value",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "math",
        "sortings",
        "two pointers"
      ]
    },
    "A": {
      "name": "Bits",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "bitmasks",
        "constructive algorithms"
      ]
    }
  },
  "483": {
    "B": {
      "name": "Friends and Presents",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "math"
      ]
    },
    "A": {
      "name": "Counterexample ",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation",
        "math",
        "number theory"
      ]
    }
  },
  "482": {
    "E": {
      "name": "ELCA",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3200,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "D": {
      "name": "Random Function and Tree",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "combinatorics",
        "dp",
        "trees"
      ]
    },
    "C": {
      "name": "Game with Strings",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2600,
      "tags": [
        "bitmasks",
        "dp",
        "probabilities"
      ]
    },
    "B": {
      "name": "Interesting Array",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "data structures",
        "trees"
      ]
    },
    "A": {
      "name": "Diverse Permutation",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    }
  },
  "480": {
    "E": {
      "name": "Parking Lot",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "divide and conquer"
      ]
    },
    "D": {
      "name": "Parcels",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "dp",
        "graphs"
      ]
    }
  },
  "479": {
    "E": {
      "name": "Riding in a Lift",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 1900,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "D": {
      "name": "Long Jumps",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Exams",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Towers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Expression",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "math"
      ]
    }
  },
  "478": {
    "E": {
      "name": "Wavy numbers",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "brute force",
        "dfs and similar",
        "meet-in-the-middle",
        "sortings"
      ]
    },
    "D": {
      "name": "Red-Green Towers",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Table Decorations",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Random Teams",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Initial Bet",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    }
  },
  "477": {
    "E": {
      "name": "Dreamoon and Notepad",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3100,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Dreamoon and Binary",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "dp",
        "strings"
      ]
    }
  },
  "476": {
    "E": {
      "name": "Dreamoon and Strings",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "dp",
        "strings"
      ]
    },
    "D": {
      "name": "Dreamoon and Sets",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Dreamoon and Sums",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "math"
      ]
    },
    "B": {
      "name": "Dreamoon and WiFi",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "bitmasks",
        "brute force",
        "combinatorics",
        "dp",
        "math",
        "probabilities"
      ]
    },
    "A": {
      "name": "Dreamoon and Stairs",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "475": {
    "F": {
      "name": "Meta-universe",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "data structures"
      ]
    },
    "E": {
      "name": "Strongly Connected City 2",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "dfs and similar"
      ]
    },
    "D": {
      "name": "CGCDSSQ",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "data structures",
        "math"
      ]
    },
    "C": {
      "name": "Kamal-ol-molk's Painting",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
      ]
    },
    "B": {
      "name": "Strongly Connected City",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "dfs and similar",
        "graphs",
        "implementation"
      ]
    },
    "A": {
      "name": "Bayan Bus",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    }
  },
  "474": {
    "F": {
      "name": "Ant colony",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "math",
        "number theory"
      ]
    },
    "E": {
      "name": "Pillars",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "sortings",
        "trees"
      ]
    },
    "D": {
      "name": "Flowers",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Captain Marmot",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "geometry"
      ]
    },
    "B": {
      "name": "Worms",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "binary search",
        "implementation"
      ]
    },
    "A": {
      "name": "Keyboard",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "472": {
    "G": {
      "name": "Design Tutorial: Increase the Constraints",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 2800,
      "tags": [
        "bitmasks",
        "data structures",
        "fft"
      ]
    },
    "F": {
      "name": "Design Tutorial: Change the Goal",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "math",
        "matrices"
      ]
    },
    "E": {
      "name": "Design Tutorial: Learn from a Game",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "D": {
      "name": "Design Tutorial: Inverse the Problem",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "dfs and similar",
        "dsu",
        "shortest paths",
        "trees"
      ]
    },
    "C": {
      "name": "Design Tutorial: Make It Nondeterministic",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Design Tutorial: Learn from Life",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": []
    },
    "A": {
      "name": "Design Tutorial: Learn from Math",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "math",
        "number theory"
      ]
    }
  },
  "471": {
    "E": {
      "name": "MUH and Lots and Lots of Segments",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "dsu"
      ]
    },
    "D": {
      "name": "MUH and Cube Walls",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "string suffix structures",
        "strings"
      ]
    },
    "C": {
      "name": "MUH and House of Cards",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "brute force",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "MUH and Important Things",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "MUH and Sticks",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    }
  },
  "470": {
    "H": {
      "name": "Array Sorting",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "*special"
      ]
    },
    "G": {
      "name": "Hamming Distance",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "*special"
      ]
    },
    "F": {
      "name": "Pairwise Sums",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "*special"
      ]
    },
    "E": {
      "name": "Chessboard",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "*special"
      ]
    },
    "D": {
      "name": "Caesar Cipher",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "*special"
      ]
    },
    "C": {
      "name": "Eval",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "*special"
      ]
    },
    "B": {
      "name": "Hexakosioihexekontahexaphobia",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special"
      ]
    },
    "A": {
      "name": "Crystal Ball Sequence",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "*special",
        "implementation"
      ]
    }
  },
  "469": {
    "B": {
      "name": "Chat Online",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "I Wanna Be the Guy",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "468": {
    "E": {
      "name": "Permanent",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "dp",
        "graph matchings",
        "math",
        "meet-in-the-middle"
      ]
    },
    "D": {
      "name": "Tree",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3100,
      "tags": [
        "graph matchings"
      ]
    },
    "C": {
      "name": "Hack it!",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "constructive algorithms",
        "math"
      ]
    },
    "B": {
      "name": "Two Sets",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "2-sat",
        "dfs and similar",
        "dsu",
        "graph matchings",
        "greedy"
      ]
    },
    "A": {
      "name": "24 Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    }
  },
  "467": {
    "E": {
      "name": "Alex and Complicated Task",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Fedor and Essay",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "hashing",
        "strings"
      ]
    },
    "C": {
      "name": "George and Job",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "dp",
        "implementation"
      ]
    },
    "B": {
      "name": "Fedor and New Game",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "George and Accommodation",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "466": {
    "E": {
      "name": "Information Graph",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "trees"
      ]
    },
    "D": {
      "name": "Increase Sequence",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "C": {
      "name": "Number of Ways",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dp",
        "two pointers"
      ]
    },
    "B": {
      "name": "Wonder Room",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "math"
      ]
    },
    "A": {
      "name": "Cheap Travel",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    }
  },
  "465": {
    "B": {
      "name": "Inbox (100500)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "inc ARG",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "464": {
    "E": {
      "name": "The Classic Problem",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "graphs",
        "shortest paths"
      ]
    },
    "D": {
      "name": "World of Darkraft - 2",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "dp",
        "probabilities"
      ]
    },
    "C": {
      "name": "Substitutes in Number",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Restore Cube ",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "geometry"
      ]
    },
    "A": {
      "name": "No to Palindromes!",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "greedy",
        "strings"
      ]
    }
  },
  "463": {
    "E": {
      "name": "Caisa and Tree",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "dfs and similar",
        "math",
        "number theory",
        "trees"
      ]
    },
    "D": {
      "name": "Gargari and Permutations",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "implementation"
      ]
    },
    "C": {
      "name": "Gargari and Bishops",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "greedy",
        "hashing",
        "implementation"
      ]
    },
    "B": {
      "name": "Caisa and Pylons",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Caisa and Sugar",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "462": {
    "B": {
      "name": "Appleman and Card Game",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Appleman and Easy Task",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "461": {
    "E": {
      "name": "Appleman and a Game",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "binary search",
        "shortest paths",
        "strings"
      ]
    },
    "D": {
      "name": "Appleman and Complicated Task",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2800,
      "tags": [
        "dsu",
        "math"
      ]
    },
    "C": {
      "name": "Appleman and a Sheet of Paper",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "B": {
      "name": "Appleman and Tree",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "A": {
      "name": "Appleman and Toastman",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "sortings"
      ]
    }
  },
  "460": {
    "E": {
      "name": "Roland and Rose",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "brute force",
        "geometry",
        "math",
        "sortings"
      ]
    },
    "D": {
      "name": "Little Victor and Set",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "constructive algorithms",
        "math"
      ]
    },
    "C": {
      "name": "Present",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "data structures",
        "greedy"
      ]
    },
    "B": {
      "name": "Little Dima and Equation",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "implementation",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Vasya and Socks",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    }
  },
  "459": {
    "E": {
      "name": "Pashmak and Graph",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 1900,
      "tags": [
        "dp",
        "sortings"
      ]
    },
    "D": {
      "name": "Pashmak and Parmida's problem",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "data structures",
        "divide and conquer",
        "sortings"
      ]
    },
    "C": {
      "name": "Pashmak and Buses",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "math"
      ]
    },
    "B": {
      "name": "Pashmak and Flowers",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "combinatorics",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Pashmak and Garden",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    }
  },
  "457": {
    "F": {
      "name": "An easy problem about trees",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3200,
      "tags": [
        "dp",
        "games",
        "greedy",
        "trees"
      ]
    },
    "E": {
      "name": "Flow Optimality",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "constructive algorithms",
        "flows",
        "math"
      ]
    },
    "D": {
      "name": "Bingo!",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "combinatorics",
        "math",
        "probabilities"
      ]
    },
    "C": {
      "name": "Elections",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "brute force"
      ]
    },
    "B": {
      "name": "Distributed Join",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Golden System",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "math",
        "meet-in-the-middle"
      ]
    }
  },
  "456": {
    "B": {
      "name": "Fedya and Maths",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Laptops",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "sortings"
      ]
    }
  },
  "455": {
    "E": {
      "name": "Function",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Serega and Fun",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "data structures"
      ]
    },
    "C": {
      "name": "Civilization",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "dfs and similar",
        "dp",
        "dsu",
        "ternary search",
        "trees"
      ]
    },
    "B": {
      "name": "A Lot of Games",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "dfs and similar",
        "dp",
        "games",
        "implementation",
        "strings",
        "trees"
      ]
    },
    "A": {
      "name": "Boredom",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "dp"
      ]
    }
  },
  "454": {
    "B": {
      "name": "Little Pony and Sort by Shift",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Little Pony and Crystal Mine",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "453": {
    "E": {
      "name": "Little Pony and Lord Tirek",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Little Pony and Elements of Harmony",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "dp",
        "matrices"
      ]
    },
    "C": {
      "name": "Little Pony and Summer Sun Celebration",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs"
      ]
    },
    "B": {
      "name": "Little Pony and Harmony Chest",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "bitmasks",
        "brute force",
        "dp"
      ]
    },
    "A": {
      "name": "Little Pony and Expected Maximum",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "probabilities"
      ]
    }
  },
  "452": {
    "F": {
      "name": "Permutation",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "divide and conquer",
        "hashing"
      ]
    },
    "E": {
      "name": "Three strings",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "dsu",
        "string suffix structures",
        "strings"
      ]
    },
    "D": {
      "name": "Washer, Dryer, Folder",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Magic Trick",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "combinatorics",
        "math",
        "probabilities"
      ]
    },
    "B": {
      "name": "4-point polyline",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "constructive algorithms",
        "geometry",
        "trees"
      ]
    },
    "A": {
      "name": "Eevee",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    }
  },
  "451": {
    "E": {
      "name": "Devu and Flowers",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2300,
      "tags": [
        "bitmasks",
        "combinatorics",
        "number theory"
      ]
    },
    "D": {
      "name": "Count Good Substrings",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "math"
      ]
    },
    "C": {
      "name": "Predict Outcome of the Game",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Sort the Array",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Game With Sticks",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "450": {
    "B": {
      "name": "Jzzhu and Sequences",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Jzzhu and Children",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "449": {
    "E": {
      "name": "Jzzhu and Squares",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "dp",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Jzzhu and Numbers",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dp"
      ]
    },
    "C": {
      "name": "Jzzhu and Apples",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "number theory"
      ]
    },
    "B": {
      "name": "Jzzhu and Cities",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "graphs",
        "greedy",
        "shortest paths"
      ]
    },
    "A": {
      "name": "Jzzhu and Chocolate",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "448": {
    "E": {
      "name": "Divisors",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "dfs and similar",
        "implementation",
        "number theory"
      ]
    },
    "D": {
      "name": "Multiplication Table",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "brute force"
      ]
    },
    "C": {
      "name": "Painting Fence",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 1900,
      "tags": [
        "divide and conquer",
        "dp",
        "greedy"
      ]
    },
    "B": {
      "name": "Suffix Structures",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Rewards",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "447": {
    "B": {
      "name": "DZY Loves Strings",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "DZY Loves Hash",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "446": {
    "E": {
      "name": "DZY Loves Bridges",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "math",
        "matrices"
      ]
    },
    "D": {
      "name": "DZY Loves Games",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2800,
      "tags": [
        "math",
        "matrices",
        "probabilities"
      ]
    },
    "C": {
      "name": "DZY Loves Fibonacci Numbers",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "DZY Loves Modification",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "data structures",
        "greedy"
      ]
    },
    "A": {
      "name": "DZY Loves Sequences",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "dp",
        "implementation",
        "two pointers"
      ]
    }
  },
  "445": {
    "B": {
      "name": "DZY Loves Chemistry",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "dfs and similar",
        "dsu",
        "greedy"
      ]
    },
    "A": {
      "name": "DZY Loves Chessboard",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "dfs and similar",
        "implementation"
      ]
    }
  },
  "444": {
    "E": {
      "name": "DZY Loves Planting",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "binary search",
        "dsu",
        "trees"
      ]
    },
    "D": {
      "name": "DZY Loves Strings",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "hashing",
        "strings",
        "two pointers"
      ]
    },
    "C": {
      "name": "DZY Loves Colors",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "data structures"
      ]
    },
    "B": {
      "name": "DZY Loves FFT",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2300,
      "tags": [
        "probabilities"
      ]
    },
    "A": {
      "name": "DZY Loves Physics",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "443": {
    "B": {
      "name": "Kolya and Tandem Repeat",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Anton and Letters",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "442": {
    "E": {
      "name": "Gena and Second Distance",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "geometry"
      ]
    },
    "D": {
      "name": "Adam and Tree",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "C": {
      "name": "Artem and Array ",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "B": {
      "name": "Andrey and Problem",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "greedy",
        "math",
        "probabilities"
      ]
    },
    "A": {
      "name": "Borya and Hanabi",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "bitmasks",
        "brute force",
        "implementation"
      ]
    }
  },
  "441": {
    "E": {
      "name": "Valera and Number",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "dp",
        "math",
        "probabilities"
      ]
    },
    "D": {
      "name": "Valera and Swaps",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "dsu",
        "graphs",
        "implementation",
        "math",
        "string suffix structures"
      ]
    },
    "C": {
      "name": "Valera and Tubes ",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "implementation"
      ]
    },
    "B": {
      "name": "Valera and Fruits",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Valera and Antique Items",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "440": {
    "D": {
      "name": "Berland Federalization",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "dp",
        "trees"
      ]
    },
    "C": {
      "name": "One-Based Arithmetic",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "dfs and similar",
        "divide and conquer"
      ]
    },
    "B": {
      "name": "Balancer",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Forgotten Episode",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "439": {
    "E": {
      "name": "Devu and Birthday Celebration",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "Devu and his Brother",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "sortings",
        "ternary search",
        "two pointers"
      ]
    },
    "C": {
      "name": "Devu and Partitioning of the Array",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation",
        "number theory"
      ]
    },
    "B": {
      "name": "Devu, the Dumb Guy",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Devu, the Singer and Churu, the Joker",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "438": {
    "E": {
      "name": "The Child and Binary Tree",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3100,
      "tags": [
        "combinatorics",
        "divide and conquer",
        "fft",
        "number theory"
      ]
    },
    "D": {
      "name": "The Child and Sequence",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "math"
      ]
    }
  },
  "437": {
    "E": {
      "name": "The Child and Polygon",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "dp",
        "geometry"
      ]
    },
    "D": {
      "name": "The Child and Zoo",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "dsu",
        "sortings"
      ]
    },
    "C": {
      "name": "The Child and Toy",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "graphs",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "The Child and Set",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "bitmasks",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "The Child and Homework",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    }
  },
  "436": {
    "F": {
      "name": "Banners",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "brute force",
        "data structures",
        "dp"
      ]
    },
    "E": {
      "name": "Cardboard Box",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "D": {
      "name": "Pudding Monsters",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Dungeons and Candies",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "dsu",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "B": {
      "name": "Om Nom and Spiders",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Feed with Candy",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "greedy"
      ]
    }
  },
  "435": {
    "E": {
      "name": "Special Graph",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": []
    },
    "D": {
      "name": "Special Grid",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Cardiogram",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    },
    "B": {
      "name": "Pasha Maximizes",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Queue on Bus Stop",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "434": {
    "E": {
      "name": "Furukawa Nagisa's Tree",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "binary search",
        "divide and conquer",
        "sortings",
        "trees"
      ]
    },
    "D": {
      "name": "Nanami's Power Plant",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "flows"
      ]
    }
  },
  "433": {
    "E": {
      "name": "Tachibana Kanade's Tofu",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "dp"
      ]
    },
    "D": {
      "name": "Nanami's Digital Board",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "dsu",
        "implementation"
      ]
    },
    "C": {
      "name": "Ryouko's Memory Note",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "implementation",
        "math",
        "sortings"
      ]
    },
    "B": {
      "name": "Kuriyama Mirai's Stones",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1200,
      "tags": [
        "dp",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Kitahara Haruki's Gift",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "432": {
    "E": {
      "name": "Square Tiling",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "D": {
      "name": "Prefixes and Suffixes",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "dp",
        "string suffix structures",
        "strings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Prime Swaps",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Football Kit",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Choosing Teams",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    }
  },
  "431": {
    "E": {
      "name": "Chemistry Experiment",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "data structures",
        "ternary search"
      ]
    },
    "D": {
      "name": "Random Task",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "bitmasks",
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "C": {
      "name": "k-Tree",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "dp",
        "implementation",
        "trees"
      ]
    },
    "B": {
      "name": "Shower Line",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Black Square",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "430": {
    "B": {
      "name": "Balls Game",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "two pointers"
      ]
    },
    "A": {
      "name": "Points and Segments (easy)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "sortings"
      ]
    }
  },
  "429": {
    "E": {
      "name": "Points and Segments",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3000,
      "tags": [
        "graphs"
      ]
    },
    "D": {
      "name": "Tricky Function",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "divide and conquer",
        "geometry"
      ]
    },
    "C": {
      "name": "Guess the Tree",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "B": {
      "name": "Working out",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "dp"
      ]
    },
    "A": {
      "name": "Xor-tree",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "dfs and similar",
        "trees"
      ]
    }
  },
  "427": {
    "E": {
      "name": "Police Patrol",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "greedy",
        "implementation",
        "math",
        "ternary search"
      ]
    },
    "D": {
      "name": "Match & Catch",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "dp",
        "string suffix structures",
        "strings"
      ]
    },
    "C": {
      "name": "Checkposts",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "graphs",
        "two pointers"
      ]
    },
    "B": {
      "name": "Prison Transfer",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "A": {
      "name": "Police Recruits",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "426": {
    "B": {
      "name": "Sereja and Mirroring",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Sereja and Mugs",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "425": {
    "E": {
      "name": "Sereja and Sets",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "dp"
      ]
    },
    "D": {
      "name": "Sereja and Squares",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "data structures",
        "hashing"
      ]
    },
    "C": {
      "name": "Sereja and Two Sequences",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "B": {
      "name": "Sereja and Table ",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2200,
      "tags": [
        "bitmasks",
        "greedy"
      ]
    },
    "A": {
      "name": "Sereja and Swaps",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "sortings"
      ]
    }
  },
  "424": {
    "E": {
      "name": "Colored Jenga",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2500,
      "tags": [
        "dfs and similar",
        "dp",
        "probabilities"
      ]
    },
    "D": {
      "name": "Biathlon Track",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "brute force",
        "constructive algorithms",
        "data structures",
        "dp"
      ]
    },
    "C": {
      "name": "Magic Formulas",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "math"
      ]
    },
    "B": {
      "name": "Megacity",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "binary search",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Squats",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "421": {
    "D": {
      "name": "Bug in Code",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "data structures",
        "sortings"
      ]
    },
    "A": {
      "name": "Pasha and Hamsters",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "420": {
    "E": {
      "name": "Playing the ball",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "geometry"
      ]
    },
    "D": {
      "name": "Cup Trick",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "data structures"
      ]
    },
    "C": {
      "name": "Bug in Code",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "graphs",
        "implementation",
        "two pointers"
      ]
    },
    "B": {
      "name": "Online Meeting",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Start Up",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "418": {
    "E": {
      "name": "Tricky Password",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Big Problems for Organizers",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "graphs",
        "trees"
      ]
    }
  },
  "417": {
    "E": {
      "name": "Square Table",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "math",
        "probabilities"
      ]
    },
    "D": {
      "name": "Cunning Gena",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "bitmasks",
        "dp",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "Football",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "graphs",
        "implementation"
      ]
    },
    "B": {
      "name": "Crash",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Elimination",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "dp",
        "implementation",
        "math"
      ]
    }
  },
  "416": {
    "E": {
      "name": "President's Path",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "dp",
        "graphs",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Population Size",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Booking System",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Art Union",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "dp",
        "implementation"
      ]
    },
    "A": {
      "name": "Guess a number!",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "implementation",
        "two pointers"
      ]
    }
  },
  "415": {
    "B": {
      "name": "Mashmokh and Tokens",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Mashmokh and Lights",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "414": {
    "E": {
      "name": "Mashmokh's Designed Problem",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3200,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Mashmokh and Water Tanks",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "trees",
        "two pointers"
      ]
    },
    "C": {
      "name": "Mashmokh and Reverse Operation",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "combinatorics",
        "divide and conquer"
      ]
    },
    "B": {
      "name": "Mashmokh and ACM",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "combinatorics",
        "dp",
        "number theory"
      ]
    },
    "A": {
      "name": "Mashmokh and Numbers",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "number theory"
      ]
    }
  },
  "413": {
    "E": {
      "name": "Maze 2D",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "divide and conquer"
      ]
    },
    "D": {
      "name": "2048",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "C": {
      "name": "Jeopardy!",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Spyke Chatting",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Data Recovery",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    }
  },
  "412": {
    "E": {
      "name": "E-mail Addresses",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 1900,
      "tags": [
        "implementation"
      ]
    },
    "D": {
      "name": "Giving Awards",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "dfs and similar"
      ]
    },
    "C": {
      "name": "Pattern",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1200,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "B": {
      "name": "Network Configuration",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Poster",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "411": {
    "C": {
      "name": "Kicker",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "implementation"
      ]
    },
    "B": {
      "name": "Multi-core Processor",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Password Check",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "*special",
        "implementation"
      ]
    }
  },
  "409": {
    "I": {
      "name": "Feed the Golorp",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "*special"
      ]
    },
    "H": {
      "name": "A + B Strikes Back",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "*special",
        "brute force",
        "constructive algorithms",
        "dsu",
        "implementation"
      ]
    },
    "G": {
      "name": "On a plane",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "*special",
        "geometry"
      ]
    },
    "F": {
      "name": "000001",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "*special"
      ]
    },
    "E": {
      "name": "Dome",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special"
      ]
    },
    "D": {
      "name": "Big Data",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "*special"
      ]
    },
    "C": {
      "name": "Magnum Opus",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "*special"
      ]
    },
    "B": {
      "name": "Mysterious Language",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "*special"
      ]
    },
    "A": {
      "name": "The Great Game",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "*special"
      ]
    }
  },
  "408": {
    "B": {
      "name": "Garland",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Line to Cashier",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "407": {
    "E": {
      "name": "k-d-sequence",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Largest Submatrix 3",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "dp",
        "hashing"
      ]
    },
    "C": {
      "name": "Curious Array",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "combinatorics",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Long Path",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "dp",
        "implementation"
      ]
    },
    "A": {
      "name": "Triangle",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "geometry",
        "implementation",
        "math"
      ]
    }
  },
  "406": {
    "E": {
      "name": "Hamming Triples",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "implementation",
        "math",
        "two pointers"
      ]
    },
    "D": {
      "name": "Hill Climbing",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "geometry",
        "trees"
      ]
    }
  },
  "405": {
    "E": {
      "name": "Graph Cutting",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2300,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "D": {
      "name": "Toy Sum",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Unusual Product",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Domino Effect",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": []
    },
    "A": {
      "name": "Gravity Flip",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    }
  },
  "404": {
    "E": {
      "name": "Maze 1D",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "greedy",
        "implementation"
      ]
    },
    "D": {
      "name": "Minesweeper 1D",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "dp",
        "implementation"
      ]
    },
    "C": {
      "name": "Restore Graph",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "dfs and similar",
        "graphs",
        "sortings"
      ]
    },
    "B": {
      "name": "Marathon",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Valera and X",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "403": {
    "E": {
      "name": "Two Rooted Trees",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "data structures",
        "implementation",
        "trees"
      ]
    },
    "D": {
      "name": "Beautiful Pairs of Numbers",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "combinatorics",
        "dp"
      ]
    }
  },
  "402": {
    "E": {
      "name": "Strictly Positive Matrix",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "graphs",
        "math"
      ]
    },
    "D": {
      "name": "Upgrading Array",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "dp",
        "greedy",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Searching for Graph",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "constructive algorithms",
        "graphs"
      ]
    },
    "B": {
      "name": "Trees in a Row",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Nuts",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "401": {
    "E": {
      "name": "Olympic Games",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "math"
      ]
    },
    "D": {
      "name": "Roman and Numbers",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "bitmasks",
        "brute force",
        "combinatorics",
        "dp",
        "number theory"
      ]
    },
    "C": {
      "name": "Team",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Sereja and Contests",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Vanya and Cards",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "400": {
    "E": {
      "name": "Inna and Binary Logic",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "bitmasks",
        "data structures"
      ]
    },
    "D": {
      "name": "Dima and Bacteria",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "dsu",
        "graphs",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Inna and Huge Candy Matrix",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Inna and New Matrix of Candies",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "implementation",
        "schedules"
      ]
    },
    "A": {
      "name": "Inna and Choose Options",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "399": {
    "B": {
      "name": "Red and Blue Balls",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "tags": []
    },
    "A": {
      "name": "Pages",
      "type": "PROGRAMMING",
      "points": 500.0,
      "tags": [
        "implementation"
      ]
    }
  },
  "398": {
    "E": {
      "name": "Sorting Permutations",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "tags": []
    },
    "D": {
      "name": "Instant Messanger",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "tags": [
        "data structures"
      ]
    },
    "C": {
      "name": "Tree and Array",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "tags": [
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Painting The Wall",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "tags": [
        "dp",
        "probabilities"
      ]
    },
    "A": {
      "name": "Cards",
      "type": "PROGRAMMING",
      "points": 500.0,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "397": {
    "B": {
      "name": "On Corruption and Numbers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "tags": [
        "constructive algorithms",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "On Segment's Own Points",
      "type": "PROGRAMMING",
      "points": 500.0,
      "tags": [
        "implementation"
      ]
    }
  },
  "396": {
    "E": {
      "name": "On Iteration of One Well-Known Function",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "tags": [
        "math"
      ]
    },
    "D": {
      "name": "On Sum of Number of Inversions in Permutations",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "C": {
      "name": "On Changing Tree",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "tags": [
        "data structures",
        "graphs",
        "trees"
      ]
    },
    "B": {
      "name": "On Sum of Fractions",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "On Number of Decompositions into Multipliers",
      "type": "PROGRAMMING",
      "points": 500.0,
      "tags": [
        "combinatorics",
        "math",
        "number theory"
      ]
    }
  },
  "394": {
    "E": {
      "name": "Lightbulb for Minister",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "tags": [
        "geometry"
      ]
    },
    "D": {
      "name": "Physical Education and Buns",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Dominoes",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "B": {
      "name": "Very Beautiful Number",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Counting Sticks",
      "type": "PROGRAMMING",
      "points": 500.0,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "393": {
    "B": {
      "name": "Three matrices",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "tags": []
    },
    "A": {
      "name": "Nineteen",
      "type": "PROGRAMMING",
      "points": 500.0,
      "tags": []
    }
  },
  "392": {
    "E": {
      "name": "Deleting Substrings",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "tags": []
    },
    "D": {
      "name": "Three Arrays",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "tags": [
        "data structures"
      ]
    },
    "C": {
      "name": "Yet Another Number Sequence",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "tags": [
        "combinatorics",
        "math",
        "matrices"
      ]
    },
    "B": {
      "name": "Tower of Hanoi",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "tags": [
        "dp"
      ]
    },
    "A": {
      "name": "Blocked Points",
      "type": "PROGRAMMING",
      "points": 500.0,
      "tags": [
        "math"
      ]
    }
  },
  "391": {
    "F3": {
      "name": "Stock Trading",
      "type": "PROGRAMMING",
      "points": 10.0,
      "tags": []
    },
    "F2": {
      "name": "Stock Trading",
      "type": "PROGRAMMING",
      "points": 15.0,
      "tags": [
        "greedy"
      ]
    },
    "F1": {
      "name": "Stock Trading",
      "type": "PROGRAMMING",
      "points": 8.0,
      "tags": [
        "dp"
      ]
    },
    "E2": {
      "name": "Three Trees",
      "type": "PROGRAMMING",
      "points": 13.0,
      "tags": []
    },
    "E1": {
      "name": "Three Trees",
      "type": "PROGRAMMING",
      "points": 11.0,
      "tags": []
    },
    "D2": {
      "name": "Supercollider",
      "type": "PROGRAMMING",
      "points": 16.0,
      "tags": [
        "data structures"
      ]
    },
    "D1": {
      "name": "Supercollider",
      "type": "PROGRAMMING",
      "points": 3.0,
      "tags": [
        "brute force"
      ]
    },
    "C3": {
      "name": "The Tournament",
      "type": "PROGRAMMING",
      "points": 8.0,
      "tags": []
    },
    "C2": {
      "name": "The Tournament",
      "type": "PROGRAMMING",
      "points": 4.0,
      "tags": [
        "greedy"
      ]
    },
    "C1": {
      "name": "The Tournament",
      "type": "PROGRAMMING",
      "points": 4.0,
      "tags": [
        "brute force"
      ]
    },
    "B": {
      "name": "Word Folding",
      "type": "PROGRAMMING",
      "points": 5.0,
      "tags": [
        "brute force"
      ]
    },
    "A": {
      "name": "Genetic Engineering",
      "type": "PROGRAMMING",
      "points": 3.0,
      "tags": [
        "implementation",
        "two pointers"
      ]
    }
  },
  "390": {
    "E": {
      "name": "Inna and Large Sweet Matrix",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "tags": []
    },
    "D": {
      "name": "Inna and Sweet Matrix",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "tags": [
        "constructive algorithms"
      ]
    },
    "C": {
      "name": "Inna and Candy Boxes",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "tags": [
        "data structures"
      ]
    },
    "B": {
      "name": "Inna, Dima and Song",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Inna and Alarm Clock",
      "type": "PROGRAMMING",
      "points": 500.0,
      "tags": [
        "implementation"
      ]
    }
  },
  "389": {
    "B": {
      "name": "Fox and Cross",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Fox and Number Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "388": {
    "E": {
      "name": "Fox and Meteor Shower",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "geometry"
      ]
    },
    "D": {
      "name": "Fox and Perfect Sets",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "math"
      ]
    },
    "C": {
      "name": "Fox and Card Game",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "games",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Fox and Minimal path",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "graphs",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Fox and Box Accumulation",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "sortings"
      ]
    }
  },
  "387": {
    "E": {
      "name": "George and Cards",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "D": {
      "name": "George and Interesting Graph",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "graph matchings"
      ]
    },
    "C": {
      "name": "George and Number",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "George and Round",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "greedy",
        "two pointers"
      ]
    },
    "A": {
      "name": "George and Sleep",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "386": {
    "D": {
      "name": "Game with Points",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "dp",
        "graphs",
        "implementation",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Diverse Substrings",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "dp",
        "strings",
        "two pointers"
      ]
    },
    "B": {
      "name": "Fly, freebies, fly!",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "binary search",
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Second-Price Auction",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "385": {
    "E": {
      "name": "Bear in the Field",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "math",
        "matrices"
      ]
    },
    "D": {
      "name": "Bear and Floodlight",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "bitmasks",
        "dp",
        "geometry"
      ]
    },
    "C": {
      "name": "Bear and Prime Numbers",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dp",
        "implementation",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Bear and Strings",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "greedy",
        "implementation",
        "math",
        "strings"
      ]
    },
    "A": {
      "name": "Bear and Raspberry",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    }
  },
  "384": {
    "B": {
      "name": "Multitasking",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "greedy",
        "implementation",
        "sortings",
        "two pointers"
      ]
    },
    "A": {
      "name": "Coder",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "383": {
    "E": {
      "name": "Vowels",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "combinatorics",
        "divide and conquer",
        "dp"
      ]
    },
    "D": {
      "name": "Antimatter",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Propagating tree",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "data structures",
        "dfs and similar",
        "trees"
      ]
    },
    "B": {
      "name": "Volcanoes",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "implementation",
        "sortings",
        "two pointers"
      ]
    },
    "A": {
      "name": "Milking cows",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "data structures",
        "greedy"
      ]
    }
  },
  "382": {
    "E": {
      "name": "Ksenia and Combinatorics",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2600,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "D": {
      "name": "Ksenia and Pawns",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "graphs",
        "implementation",
        "trees"
      ]
    },
    "C": {
      "name": "Arithmetic Progression",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Number Busters",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "math"
      ]
    },
    "A": {
      "name": "Ksenia and Pan Scales",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "381": {
    "B": {
      "name": "Sereja and Stairs",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Sereja and Dima",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation",
        "two pointers"
      ]
    }
  },
  "380": {
    "E": {
      "name": "Sereja and Dividing",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Sereja and Cinema",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "C": {
      "name": "Sereja and Brackets",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "data structures",
        "schedules"
      ]
    },
    "B": {
      "name": "Sereja and Tree",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2400,
      "tags": [
        "graphs",
        "implementation"
      ]
    },
    "A": {
      "name": "Sereja and Prefixes",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "brute force"
      ]
    }
  },
  "379": {
    "G": {
      "name": "New Year Cactus",
      "type": "PROGRAMMING",
      "points": 3500.0,
      "rating": 3100,
      "tags": [
        "dp"
      ]
    },
    "F": {
      "name": "New Year Tree",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "divide and conquer",
        "trees"
      ]
    },
    "E": {
      "name": "New Year Tree Decorations",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "geometry",
        "schedules",
        "sortings"
      ]
    },
    "D": {
      "name": "New Year Letter",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "bitmasks",
        "brute force",
        "dp"
      ]
    },
    "C": {
      "name": "New Year Ratings Change",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "New Year Present",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "New Year Candles",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "378": {
    "B": {
      "name": "Semifinals",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Playing with Dice",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force"
      ]
    }
  },
  "377": {
    "E": {
      "name": "Cookie Clicker",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "dp",
        "geometry"
      ]
    },
    "D": {
      "name": "Developing Game",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "data structures"
      ]
    },
    "C": {
      "name": "Captains Mode",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2200,
      "tags": [
        "bitmasks",
        "dp",
        "games"
      ]
    },
    "B": {
      "name": "Preparing for the Contest",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Maze",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "dfs and similar"
      ]
    }
  },
  "376": {
    "B": {
      "name": "I.O.U.",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Lever",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "375": {
    "E": {
      "name": "Red and Black Tree",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "dp",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Tree and Queries",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "dfs and similar",
        "trees"
      ]
    },
    "C": {
      "name": "Circling Round Treasures",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2600,
      "tags": [
        "bitmasks",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Maximum Submatrix 2",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "data structures",
        "dp",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Divisible by Seven",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "math",
        "number theory"
      ]
    }
  },
  "374": {
    "E": {
      "name": "Inna and Babies",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "binary search",
        "data structures",
        "dsu",
        "geometry",
        "implementation"
      ]
    },
    "D": {
      "name": "Inna and Sequence ",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "trees"
      ]
    },
    "C": {
      "name": "Inna and Dima",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "implementation"
      ]
    },
    "B": {
      "name": "Inna and Nine",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "combinatorics",
        "greedy"
      ]
    },
    "A": {
      "name": "Inna and Pink Pony",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 2000,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "373": {
    "B": {
      "name": "Making Sequences is Fun",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Collecting Beats is Fun",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "372": {
    "E": {
      "name": "Drawing Circles is Fun",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "combinatorics",
        "geometry"
      ]
    },
    "D": {
      "name": "Choosing Subtree is Fun",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "trees",
        "two pointers"
      ]
    },
    "C": {
      "name": "Watching Fireworks is Fun",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "dp",
        "math"
      ]
    },
    "B": {
      "name": "Counting Rectangles is Fun",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "divide and conquer",
        "dp"
      ]
    },
    "A": {
      "name": "Counting Kangaroos is Fun",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "greedy",
        "sortings",
        "two pointers"
      ]
    }
  },
  "371": {
    "E": {
      "name": "Subway Innovation",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "greedy",
        "math",
        "two pointers"
      ]
    },
    "D": {
      "name": "Vessels",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "data structures",
        "dsu",
        "implementation",
        "trees"
      ]
    },
    "C": {
      "name": "Hamburgers",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "brute force"
      ]
    },
    "B": {
      "name": "Fox Dividing Cheese",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "K-Periodic Array",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "370": {
    "E": {
      "name": "Summer Reading",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2500,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "Broken Monitor",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Mittens",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Berland Bingo",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Rook, Bishop and King",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "graphs",
        "math",
        "shortest paths"
      ]
    }
  },
  "369": {
    "E": {
      "name": "Valera and Queries",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "D": {
      "name": "Valera and Fools",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Valera and Elections",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "B": {
      "name": "Valera and Contest",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Valera and Plates",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "368": {
    "B": {
      "name": "Sereja and Suffixes",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "A": {
      "name": "Sereja and Coat Rack",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "367": {
    "E": {
      "name": "Sereja and Intervals",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "D": {
      "name": "Sereja and Sets",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "dfs and similar"
      ]
    },
    "C": {
      "name": "Sereja and the Arrangement of Numbers",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "graphs",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Sereja ans Anagrams",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "A": {
      "name": "Sereja and Algorithm ",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "data structures",
        "implementation"
      ]
    }
  },
  "366": {
    "E": {
      "name": "Dima and Magic Guitar",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Dima and Trap Graph",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "dsu",
        "shortest paths",
        "two pointers"
      ]
    },
    "C": {
      "name": "Dima and Salad",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Dima and To-do List",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Dima and Guards",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    }
  },
  "365": {
    "B": {
      "name": "The Fibonacci Segment",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Good Number",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    }
  },
  "364": {
    "E": {
      "name": "Empty Rectangles",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "divide and conquer",
        "two pointers"
      ]
    },
    "D": {
      "name": "Ghd",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "brute force",
        "math",
        "probabilities"
      ]
    },
    "C": {
      "name": "Beautiful Set",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "number theory"
      ]
    },
    "B": {
      "name": "Free Market",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2200,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "A": {
      "name": "Matrix",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "combinatorics",
        "data structures",
        "implementation"
      ]
    }
  },
  "363": {
    "E": {
      "name": "Two Circles",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "data structures",
        "implementation"
      ]
    },
    "D": {
      "name": "Renting Bikes",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "greedy"
      ]
    },
    "C": {
      "name": "Fixing Typos",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Fence",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "dp"
      ]
    },
    "A": {
      "name": "Soroban",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "362": {
    "E": {
      "name": "Petya and Pipes",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2300,
      "tags": [
        "flows",
        "graphs",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Fools and Foolproof Roads",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy"
      ]
    },
    "C": {
      "name": "Insertion Sort",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "dp",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Petya and Staircases",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Two Semiknights Meet",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "361": {
    "B": {
      "name": "Levko and Permutation",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Levko and Table",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "360": {
    "E": {
      "name": "Levko and Game",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2800,
      "tags": [
        "graphs",
        "greedy",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Levko and Sets",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2600,
      "tags": [
        "number theory"
      ]
    },
    "C": {
      "name": "Levko and Strings",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "B": {
      "name": "Levko and Array",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "dp"
      ]
    },
    "A": {
      "name": "Levko and Array Recovery",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "359": {
    "E": {
      "name": "Neatness",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "dfs and similar"
      ]
    },
    "D": {
      "name": "Pair of Numbers",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "math",
        "two pointers"
      ]
    },
    "C": {
      "name": "Prime Number",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Permutation",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "dp",
        "math"
      ]
    },
    "A": {
      "name": "Table",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    }
  },
  "358": {
    "E": {
      "name": "Dima and Kicks",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "dsu",
        "graphs",
        "implementation"
      ]
    },
    "D": {
      "name": "Dima and Hares",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Dima and Containers",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Dima and Text Messages",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "strings"
      ]
    },
    "A": {
      "name": "Dima and Continuous Line",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "357": {
    "B": {
      "name": "Flag Day",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "Group of Students",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    }
  },
  "356": {
    "E": {
      "name": "Xenia and String Problem",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "dp",
        "hashing",
        "implementation",
        "string suffix structures",
        "strings"
      ]
    },
    "D": {
      "name": "Bags and Coins",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "bitmasks",
        "constructive algorithms",
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Compartments",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Xenia and Hamming",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Knight Tournament",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "data structures",
        "dsu"
      ]
    }
  },
  "355": {
    "B": {
      "name": "Vasya and Public Transport",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Vasya and Digital Root",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "354": {
    "E": {
      "name": "Lucky Number Representation",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp"
      ]
    },
    "D": {
      "name": "Transferring Pyramid",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Vasya and Beautiful Arrays",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "dp",
        "number theory"
      ]
    },
    "B": {
      "name": "Game with Strings",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "dp",
        "games"
      ]
    },
    "A": {
      "name": "Vasya and Robot",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "greedy",
        "math"
      ]
    }
  },
  "353": {
    "E": {
      "name": "Antichain",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2200,
      "tags": [
        "dp",
        "graph matchings",
        "greedy"
      ]
    },
    "D": {
      "name": "Queue",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "dp"
      ]
    },
    "C": {
      "name": "Find Maximum",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "implementation",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Two Heaps",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "greedy",
        "implementation",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Domino",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "352": {
    "B": {
      "name": "Jeff and Periods",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Jeff and Digits",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    }
  },
  "351": {
    "E": {
      "name": "Jeff and Permutation",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "greedy"
      ]
    },
    "D": {
      "name": "Jeff and Removing Periods",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "data structures"
      ]
    },
    "C": {
      "name": "Jeff and Brackets",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "dp",
        "matrices"
      ]
    },
    "B": {
      "name": "Jeff and Furik",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "combinatorics",
        "dp",
        "probabilities"
      ]
    },
    "A": {
      "name": "Jeff and Rounding",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "dp",
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "350": {
    "E": {
      "name": "Wrong Floyd",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "graphs"
      ]
    },
    "D": {
      "name": "Looking for Owls",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "data structures",
        "geometry",
        "hashing",
        "sortings"
      ]
    },
    "C": {
      "name": "Bombs",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Resort",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "graphs"
      ]
    },
    "A": {
      "name": "TL",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    }
  },
  "349": {
    "B": {
      "name": "Color the Fence",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Cinema Line",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "348": {
    "E": {
      "name": "Pilgrims",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "D": {
      "name": "Turtles",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "dp",
        "matrices"
      ]
    },
    "C": {
      "name": "Subset Sums",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "data structures"
      ]
    },
    "B": {
      "name": "Apple Tree",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "dfs and similar",
        "number theory",
        "trees"
      ]
    },
    "A": {
      "name": "Mafia",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "math",
        "sortings"
      ]
    }
  },
  "347": {
    "B": {
      "name": "Fixed Points",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Difference Row",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "implementation",
        "sortings"
      ]
    }
  },
  "346": {
    "E": {
      "name": "Doodle Jump",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Robot Control",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "dp",
        "graphs",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Number Transformation II",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Lucky Common Subsequence",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "dp",
        "strings"
      ]
    },
    "A": {
      "name": "Alice and Bob",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "games",
        "math",
        "number theory"
      ]
    }
  },
  "345": {
    "G": {
      "name": "Suffix Subgroup",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "*special",
        "strings"
      ]
    },
    "F": {
      "name": "Superstitions Inspection",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "*special"
      ]
    },
    "E": {
      "name": "Black Cat Rush",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "*special"
      ]
    },
    "D": {
      "name": "Chain Letter",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "*special",
        "dfs and similar",
        "graphs"
      ]
    },
    "C": {
      "name": "Counting Fridays",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "*special"
      ]
    },
    "B": {
      "name": "Triskaidekaphobia",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "*special"
      ]
    },
    "A": {
      "name": "Expecting Trouble",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "*special",
        "probabilities"
      ]
    }
  },
  "344": {
    "B": {
      "name": "Simple Molecules",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "graphs",
        "math"
      ]
    },
    "A": {
      "name": "Magnets",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "343": {
    "E": {
      "name": "Pumping Stations",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "brute force",
        "dfs and similar",
        "divide and conquer",
        "flows",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "D": {
      "name": "Water Tree",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "C": {
      "name": "Read Time",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "greedy",
        "two pointers"
      ]
    },
    "B": {
      "name": "Alternating Current",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Rational Resistance",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "math",
        "number theory"
      ]
    }
  },
  "342": {
    "E": {
      "name": "Xenia and Tree",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "divide and conquer",
        "trees"
      ]
    },
    "D": {
      "name": "Xenia and Dominoes",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "bitmasks",
        "dfs and similar",
        "dp"
      ]
    },
    "C": {
      "name": "Cupboard and Balloons",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "geometry"
      ]
    },
    "B": {
      "name": "Xenia and Spies",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Xenia and Divisors",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "341": {
    "E": {
      "name": "Candies Game",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "D": {
      "name": "Iahub and Xors",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "data structures"
      ]
    }
  },
  "340": {
    "E": {
      "name": "Iahub and Permutations",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2000,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "D": {
      "name": "Bubble Sort Graph",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "data structures",
        "dp"
      ]
    },
    "C": {
      "name": "Tourist Problem",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1600,
      "tags": [
        "combinatorics",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Maximal Area Quadrilateral",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "geometry"
      ]
    },
    "A": {
      "name": "The Wall",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "math"
      ]
    }
  },
  "339": {
    "E": {
      "name": "Three Swaps",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2700,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "greedy"
      ]
    },
    "D": {
      "name": "Xenia and Bit Operations",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "C": {
      "name": "Xenia and Weights",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "graphs",
        "greedy",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Xenia and Ringroad",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Helpful Maths",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "implementation",
        "sortings",
        "strings"
      ]
    }
  },
  "338": {
    "E": {
      "name": "Optimize!",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "GCD Table",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "chinese remainder theorem",
        "math",
        "number theory"
      ]
    }
  },
  "337": {
    "E": {
      "name": "Divisor Tree",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "number theory",
        "trees"
      ]
    },
    "D": {
      "name": "Book of Evil",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "divide and conquer",
        "dp",
        "trees"
      ]
    },
    "C": {
      "name": "Quiz",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "greedy",
        "math",
        "matrices",
        "number theory"
      ]
    },
    "B": {
      "name": "Routine Problem",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Puzzles",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "greedy"
      ]
    }
  },
  "336": {
    "E": {
      "name": "Vasily the Bear and Painting Square",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "implementation"
      ]
    },
    "D": {
      "name": "Vasily the Bear and Beautiful Strings",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "combinatorics",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Vasily the Bear and Sequence",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "greedy",
        "implementation",
        "number theory"
      ]
    },
    "B": {
      "name": "Vasily the Bear and Fly",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Vasily the Bear and Triangle",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "335": {
    "F": {
      "name": "Buy One, Get One Free",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "E": {
      "name": "Counting Skyscrapers",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "dp",
        "math",
        "probabilities"
      ]
    },
    "D": {
      "name": "Rectangles and Square",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "brute force",
        "dp"
      ]
    },
    "C": {
      "name": "More Reclamation",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "games"
      ]
    },
    "B": {
      "name": "Palindrome",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "dp"
      ]
    },
    "A": {
      "name": "Banana",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "binary search",
        "constructive algorithms",
        "greedy"
      ]
    }
  },
  "334": {
    "B": {
      "name": "Eight Point Sets",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "sortings"
      ]
    },
    "A": {
      "name": "Candy Bags",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "333": {
    "E": {
      "name": "Summer Earnings",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "geometry",
        "sortings"
      ]
    },
    "D": {
      "name": "Characteristics of Rectangles",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "implementation",
        "sortings"
      ]
    },
    "C": {
      "name": "Lucky Tickets",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2700,
      "tags": [
        "brute force",
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Chips",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Secrets",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "greedy"
      ]
    }
  },
  "332": {
    "E": {
      "name": "Binary Key",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2400,
      "tags": [
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "D": {
      "name": "Theft of Blueprints",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2400,
      "tags": [
        "graphs",
        "math"
      ]
    },
    "C": {
      "name": "Students' Revenge",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Maximum Absurdity",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "data structures",
        "dp",
        "implementation"
      ]
    },
    "A": {
      "name": "Down the Hatch!",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    }
  },
  "331": {
    "E2": {
      "name": "Deja Vu",
      "type": "PROGRAMMING",
      "points": 50.0,
      "rating": 3100,
      "tags": [
        "constructive algorithms",
        "dp"
      ]
    },
    "E1": {
      "name": "Deja Vu",
      "type": "PROGRAMMING",
      "points": 50.0,
      "rating": 2900,
      "tags": [
        "constructive algorithms",
        "graphs",
        "implementation"
      ]
    },
    "D3": {
      "name": "Escaping on Beaveractor",
      "type": "PROGRAMMING",
      "points": 40.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "implementation",
        "trees"
      ]
    },
    "D2": {
      "name": "Escaping on Beaveractor",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 2600,
      "tags": [
        "graphs"
      ]
    },
    "D1": {
      "name": "Escaping on Beaveractor",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 2400,
      "tags": [
        "dfs and similar",
        "implementation"
      ]
    },
    "C3": {
      "name": "The Great Julya Calendar",
      "type": "PROGRAMMING",
      "points": 60.0,
      "rating": 2500,
      "tags": [
        "dp"
      ]
    },
    "C2": {
      "name": "The Great Julya Calendar",
      "type": "PROGRAMMING",
      "points": 20.0,
      "rating": 2400,
      "tags": [
        "dp"
      ]
    },
    "C1": {
      "name": "The Great Julya Calendar",
      "type": "PROGRAMMING",
      "points": 20.0,
      "rating": 1100,
      "tags": [
        "dp"
      ]
    },
    "B2": {
      "name": "Shave Beaver!",
      "type": "PROGRAMMING",
      "points": 70.0,
      "rating": 1900,
      "tags": [
        "data structures"
      ]
    },
    "B1": {
      "name": "Shave Beaver!",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 1700,
      "tags": [
        "implementation"
      ]
    },
    "A2": {
      "name": "Oh Sweet Beaverette",
      "type": "PROGRAMMING",
      "points": 70.0,
      "rating": 1500,
      "tags": [
        "data structures",
        "sortings"
      ]
    },
    "A1": {
      "name": "Oh Sweet Beaverette",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "330": {
    "B": {
      "name": "Road Construction",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "graphs"
      ]
    },
    "A": {
      "name": "Cakeminator",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "329": {
    "E": {
      "name": "Evil",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "math"
      ]
    },
    "D": {
      "name": "The Evil Temple and the Moving Rocks",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms"
      ]
    },
    "C": {
      "name": "Graph Reconstruction",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Biridian Forest",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "dfs and similar",
        "shortest paths"
      ]
    },
    "A": {
      "name": "Purification",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    }
  },
  "328": {
    "B": {
      "name": "Sheldon and Ice Pieces",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "IQ Test",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "implementation"
      ]
    }
  },
  "327": {
    "E": {
      "name": "Axis Walking",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2300,
      "tags": [
        "bitmasks",
        "combinatorics",
        "constructive algorithms",
        "dp",
        "meet-in-the-middle"
      ]
    },
    "D": {
      "name": "Block Tower",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs"
      ]
    },
    "C": {
      "name": "Magic Five",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "B": {
      "name": "Hungry Sequence",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Flipping Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "dp",
        "implementation"
      ]
    }
  },
  "325": {
    "E": {
      "name": "The Red Button",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy"
      ]
    },
    "D": {
      "name": "Reclamation",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "dsu"
      ]
    },
    "C": {
      "name": "Monsters and Diamonds",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "dfs and similar",
        "graphs",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Stadium and Games",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "math"
      ]
    },
    "A": {
      "name": "Square and Rectangles",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "implementation"
      ]
    }
  },
  "323": {
    "C": {
      "name": "Two permutations",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "data structures"
      ]
    },
    "B": {
      "name": "Tournament-graph",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "graphs"
      ]
    },
    "A": {
      "name": "Black-and-White Cube",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "combinatorics",
        "constructive algorithms"
      ]
    }
  },
  "322": {
    "B": {
      "name": "Ciel and Flowers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "A": {
      "name": "Ciel and Dancing",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "greedy"
      ]
    }
  },
  "321": {
    "E": {
      "name": "Ciel and Gondolas",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "divide and conquer",
        "dp"
      ]
    },
    "D": {
      "name": "Ciel and Flipboard",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "dp",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Ciel the Commander",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "divide and conquer",
        "greedy",
        "trees"
      ]
    },
    "B": {
      "name": "Ciel and Duel",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "dp",
        "flows",
        "greedy"
      ]
    },
    "A": {
      "name": "Ciel and Robot",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "implementation",
        "math"
      ]
    }
  },
  "320": {
    "B": {
      "name": "Ping-Pong (Easy Version)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "A": {
      "name": "Magic Numbers",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "brute force",
        "greedy"
      ]
    }
  },
  "319": {
    "E": {
      "name": "Ping-Pong",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Have You Ever Heard About the Word?",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "greedy",
        "hashing",
        "string suffix structures",
        "strings"
      ]
    },
    "C": {
      "name": "Kalila and Dimna in the Logging Industry",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "dp",
        "geometry"
      ]
    },
    "B": {
      "name": "Psychos in a Line",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "A": {
      "name": "Malek Dance Club",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "combinatorics",
        "math"
      ]
    }
  },
  "318": {
    "B": {
      "name": "Strings of Power",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "implementation",
        "strings",
        "two pointers"
      ]
    },
    "A": {
      "name": "Even Odds",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "math"
      ]
    }
  },
  "317": {
    "E": {
      "name": "Princess and Her Shadow",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3100,
      "tags": [
        "constructive algorithms",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Game with Powers",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "dp",
        "games"
      ]
    },
    "C": {
      "name": "Balance",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "B": {
      "name": "Ants",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Perfect Pair",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "brute force"
      ]
    }
  },
  "316": {
    "G3": {
      "name": "Good Substrings",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 2400,
      "tags": [
        "string suffix structures"
      ]
    },
    "G2": {
      "name": "Good Substrings",
      "type": "PROGRAMMING",
      "points": 40.0,
      "rating": 2200,
      "tags": [
        "string suffix structures"
      ]
    },
    "G1": {
      "name": "Good Substrings",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 1700,
      "tags": [
        "hashing",
        "strings"
      ]
    },
    "F3": {
      "name": "Suns and Rays",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "implementation"
      ]
    },
    "F2": {
      "name": "Suns and Rays",
      "type": "PROGRAMMING",
      "points": 40.0,
      "rating": 2300,
      "tags": []
    },
    "F1": {
      "name": "Suns and Rays",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "implementation"
      ]
    },
    "E3": {
      "name": "Summer Homework",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "math"
      ]
    },
    "E2": {
      "name": "Summer Homework",
      "type": "PROGRAMMING",
      "points": 40.0,
      "rating": 2300,
      "tags": [
        "data structures",
        "math"
      ]
    },
    "E1": {
      "name": "Summer Homework",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "data structures"
      ]
    },
    "D3": {
      "name": "PE Lesson",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 2400,
      "tags": [
        "dp",
        "math"
      ]
    },
    "D2": {
      "name": "PE Lesson",
      "type": "PROGRAMMING",
      "points": 40.0,
      "rating": 2300,
      "tags": [
        "dp"
      ]
    },
    "D1": {
      "name": "PE Lesson",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "dp"
      ]
    },
    "C2": {
      "name": "Tidying Up",
      "type": "PROGRAMMING",
      "points": 70.0,
      "rating": 2300,
      "tags": [
        "flows",
        "graph matchings"
      ]
    },
    "C1": {
      "name": "Tidying Up",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 2200,
      "tags": [
        "flows"
      ]
    },
    "B2": {
      "name": "EKG",
      "type": "PROGRAMMING",
      "points": 70.0,
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "dp"
      ]
    },
    "B1": {
      "name": "EKG",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "dfs and similar"
      ]
    },
    "A2": {
      "name": "Special Task",
      "type": "PROGRAMMING",
      "points": 70.0,
      "rating": 1400,
      "tags": [
        "math"
      ]
    },
    "A1": {
      "name": "Special Task",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 1100,
      "tags": [
        "greedy"
      ]
    }
  },
  "315": {
    "B": {
      "name": "Sereja and Array",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Sereja and Bottles",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "brute force"
      ]
    }
  },
  "314": {
    "E": {
      "name": "Sereja and Squares",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "dp"
      ]
    },
    "D": {
      "name": "Sereja and Straight Lines",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "data structures",
        "geometry",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Sereja and Subsequences",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "B": {
      "name": "Sereja and Periods",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "dfs and similar",
        "strings"
      ]
    },
    "A": {
      "name": "Sereja and Contest",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    }
  },
  "313": {
    "E": {
      "name": "Ilya and Two Numbers",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "data structures",
        "dsu",
        "greedy"
      ]
    },
    "D": {
      "name": "Ilya and Roads",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Ilya and Matrix",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Ilya and Queries",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "dp",
        "implementation"
      ]
    },
    "A": {
      "name": "Ilya and Bank Account",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation",
        "number theory"
      ]
    }
  },
  "312": {
    "B": {
      "name": "Archer",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "math",
        "probabilities"
      ]
    },
    "A": {
      "name": "Whose sentence is it?",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "311": {
    "E": {
      "name": "Biologist",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "flows"
      ]
    },
    "D": {
      "name": "Interval Cubing",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "math"
      ]
    },
    "C": {
      "name": "Fetch the Treasure",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "data structures",
        "graphs",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Cats Transport",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "A": {
      "name": "The Closest Pair",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "309": {
    "E": {
      "name": "Sheep",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "binary search",
        "greedy"
      ]
    },
    "D": {
      "name": "Tennis Rackets",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "brute force",
        "geometry"
      ]
    },
    "C": {
      "name": "Memory for Arrays",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "bitmasks",
        "greedy"
      ]
    },
    "B": {
      "name": "Context Advertising",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 2100,
      "tags": [
        "dp",
        "two pointers"
      ]
    },
    "A": {
      "name": "Morning run",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "math",
        "two pointers"
      ]
    }
  },
  "306": {
    "D": {
      "name": "Polygon",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "geometry"
      ]
    },
    "C": {
      "name": "White, Black and White Again",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "combinatorics",
        "number theory"
      ]
    },
    "B": {
      "name": "Optimizer",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Candies",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "305": {
    "E": {
      "name": "Playing with String",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "games"
      ]
    },
    "D": {
      "name": "Olya and Graph",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "C": {
      "name": "Ivan and Powers of Two",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Continued Fractions",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Strange Addition",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "304": {
    "B": {
      "name": "Calendar",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Pythagorean Theorem II",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "math"
      ]
    }
  },
  "303": {
    "E": {
      "name": "Random Ranking",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "dp",
        "math",
        "probabilities"
      ]
    },
    "D": {
      "name": "Rotatable Number",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Minimum Modular",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "brute force",
        "graphs",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Rectangle Puzzle II",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Lucky Permutation Triple",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "implementation",
        "math"
      ]
    }
  },
  "302": {
    "B": {
      "name": "Eugeny and Play List",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "binary search",
        "implementation",
        "two pointers"
      ]
    },
    "A": {
      "name": "Eugeny and Array",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "301": {
    "E": {
      "name": "Yaroslav and Arrangements",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "dp"
      ]
    },
    "D": {
      "name": "Yaroslav and Divisors",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "data structures"
      ]
    },
    "C": {
      "name": "Yaroslav and Algorithm",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Yaroslav and Time",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "graphs",
        "shortest paths"
      ]
    },
    "A": {
      "name": "Yaroslav and Sequence",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms"
      ]
    }
  },
  "300": {
    "E": {
      "name": "Empire Strikes Back",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Painting Square",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2300,
      "tags": [
        "dp",
        "fft"
      ]
    },
    "C": {
      "name": "Beautiful Numbers",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "combinatorics"
      ]
    },
    "B": {
      "name": "Coach",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "dfs and similar",
        "graphs"
      ]
    },
    "A": {
      "name": "Array",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "299": {
    "B": {
      "name": "Ksusha the Squirrel",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Ksusha and Array",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "number theory",
        "sortings"
      ]
    }
  },
  "298": {
    "B": {
      "name": "Sail",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Snow Footprints",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "297": {
    "E": {
      "name": "Mystic Carvings",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Color the Carpet",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms"
      ]
    },
    "C": {
      "name": "Splitting the Uniqueness",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Fish Weight",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "Parity Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms"
      ]
    }
  },
  "296": {
    "B": {
      "name": "Yaroslav and Two Strings",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "A": {
      "name": "Yaroslav and Permutations",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "295": {
    "E": {
      "name": "Yaroslav and Points",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Greg and Caves",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "C": {
      "name": "Greg and Friends",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "combinatorics",
        "dp",
        "graphs",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Greg and Graph",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "dp",
        "graphs",
        "shortest paths"
      ]
    },
    "A": {
      "name": "Greg and Array",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "data structures",
        "implementation"
      ]
    }
  },
  "294": {
    "E": {
      "name": "Shaass the Great",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "dp",
        "trees"
      ]
    },
    "D": {
      "name": "Shaass and Painter Robot",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "implementation",
        "number theory"
      ]
    },
    "C": {
      "name": "Shaass and Lights",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "combinatorics",
        "number theory"
      ]
    },
    "B": {
      "name": "Shaass and Bookshelf",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "A": {
      "name": "Shaass and Oskols",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "293": {
    "E": {
      "name": "Close Vertices",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "divide and conquer",
        "trees"
      ]
    },
    "D": {
      "name": "Ksusha and Square",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "geometry",
        "math",
        "probabilities",
        "two pointers"
      ]
    },
    "C": {
      "name": "Cube Problem",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Distinct Paths",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2700,
      "tags": [
        "brute force",
        "combinatorics"
      ]
    },
    "A": {
      "name": "Weird Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "games",
        "greedy"
      ]
    }
  },
  "292": {
    "E": {
      "name": "Copying Data",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 1900,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Connected Components",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "dsu"
      ]
    },
    "C": {
      "name": "Beautiful IP Addresses",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "brute force"
      ]
    },
    "B": {
      "name": "Network Topology",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "graphs",
        "implementation"
      ]
    },
    "A": {
      "name": "SMSC",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    }
  },
  "291": {
    "E": {
      "name": "Tree-String Problem",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "*special",
        "dfs and similar",
        "hashing",
        "strings"
      ]
    },
    "D": {
      "name": "Parallel Programming",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1600,
      "tags": [
        "*special",
        "greedy"
      ]
    },
    "C": {
      "name": "Network Mask",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "*special",
        "bitmasks",
        "brute force",
        "implementation"
      ]
    },
    "B": {
      "name": "Command Line Arguments",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "*special",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Spyke Talks",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "*special",
        "implementation",
        "sortings"
      ]
    }
  },
  "290": {
    "F": {
      "name": "Greedy Petya",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "*special",
        "dfs and similar",
        "graphs",
        "greedy"
      ]
    },
    "E": {
      "name": "HQ",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "*special",
        "constructive algorithms"
      ]
    },
    "D": {
      "name": "Orange",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "C": {
      "name": "WTF?",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "*special",
        "graph matchings",
        "implementation",
        "trees"
      ]
    },
    "B": {
      "name": "QR code",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "A": {
      "name": "Mysterious strings",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "*special",
        "implementation"
      ]
    }
  },
  "289": {
    "B": {
      "name": "Polo the Penguin and Matrix",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "dp",
        "implementation",
        "sortings",
        "ternary search"
      ]
    },
    "A": {
      "name": "Polo the Penguin and Segments ",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "288": {
    "E": {
      "name": "Polo the Penguin and Lucky Numbers",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "dp",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Polo the Penguin and Trees ",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "trees"
      ]
    },
    "C": {
      "name": "Polo the Penguin and XOR operation",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Polo the Penguin and Houses ",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "combinatorics"
      ]
    },
    "A": {
      "name": "Polo the Penguin and Strings",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "greedy"
      ]
    }
  },
  "287": {
    "B": {
      "name": "Pipeline",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "math"
      ]
    },
    "A": {
      "name": "IQ Test",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "286": {
    "E": {
      "name": "Ladies' Shop",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "constructive algorithms",
        "fft",
        "math"
      ]
    },
    "D": {
      "name": "Tourists",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "sortings"
      ]
    },
    "C": {
      "name": "Main Sequence",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Shifting",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Lucky Permutation",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "285": {
    "E": {
      "name": "Positions in Permutations",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "D": {
      "name": "Permutation Sum",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "implementation",
        "meet-in-the-middle"
      ]
    },
    "C": {
      "name": "Building Permutation",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Find Marble",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Slightly Decreasing Permutations",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "284": {
    "B": {
      "name": "Cows and Poker Game",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Cows and Primitive Roots",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "implementation",
        "math",
        "number theory"
      ]
    }
  },
  "283": {
    "E": {
      "name": "Cow Tennis Tournament",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "combinatorics",
        "data structures",
        "math"
      ]
    },
    "D": {
      "name": "Cows and Cool Sequences",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "dp",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Coin Troubles",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Cow Program",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs"
      ]
    },
    "A": {
      "name": "Cows and Sequence",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "data structures",
        "implementation"
      ]
    }
  },
  "282": {
    "E": {
      "name": "Sausage Maximization",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "bitmasks",
        "data structures",
        "trees"
      ]
    },
    "D": {
      "name": "Yet Another Number Game",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "dp",
        "games"
      ]
    },
    "C": {
      "name": "XOR and OR",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Painting Eggs",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Bit++",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "281": {
    "B": {
      "name": "Nearest Fraction",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "implementation",
        "two pointers"
      ]
    },
    "A": {
      "name": "Word Capitalization",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "280": {
    "E": {
      "name": "Sequence Transformation",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "brute force",
        "data structures",
        "dp",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "k-Maximum Subsequence Sum",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "flows",
        "graphs",
        "implementation"
      ]
    },
    "C": {
      "name": "Game on Tree",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "implementation",
        "math",
        "probabilities",
        "trees"
      ]
    },
    "B": {
      "name": "Maximum Xor Secondary",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "data structures",
        "implementation",
        "two pointers"
      ]
    },
    "A": {
      "name": "Rectangle Puzzle",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 2000,
      "tags": [
        "geometry"
      ]
    }
  },
  "279": {
    "E": {
      "name": "Beautiful Decomposition",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "dp",
        "games",
        "greedy",
        "number theory"
      ]
    },
    "D": {
      "name": "The Minimum Number of Variables",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "C": {
      "name": "Ladder",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "dp",
        "implementation",
        "two pointers"
      ]
    },
    "B": {
      "name": "Books",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "binary search",
        "brute force",
        "implementation",
        "two pointers"
      ]
    },
    "A": {
      "name": "Point on Spiral",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "geometry",
        "implementation"
      ]
    }
  },
  "278": {
    "B": {
      "name": "New Problem",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "strings"
      ]
    },
    "A": {
      "name": "Circle Line",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "277": {
    "E": {
      "name": "Binary Tree on Plane",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "flows",
        "trees"
      ]
    },
    "D": {
      "name": "Google Code Jam",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "dp",
        "probabilities"
      ]
    },
    "C": {
      "name": "Game",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "games",
        "implementation"
      ]
    },
    "B": {
      "name": "Set of Points",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "geometry"
      ]
    },
    "A": {
      "name": "Learning Languages",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "dfs and similar",
        "dsu"
      ]
    }
  },
  "276": {
    "E": {
      "name": "Little Girl and Problem on Trees",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "graphs",
        "trees"
      ]
    },
    "D": {
      "name": "Little Girl and Maximum XOR",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "bitmasks",
        "dp",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Little Girl and Maximum Sum",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "data structures",
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Little Girl and Game",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "games",
        "greedy"
      ]
    },
    "A": {
      "name": "Lunch Rush",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "275": {
    "B": {
      "name": "Convex Shape",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "Lights Out",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "274": {
    "E": {
      "name": "Mirror Room",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "D": {
      "name": "Lovely Matrix",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "graphs",
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "The Last Hole!",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2600,
      "tags": [
        "brute force",
        "geometry"
      ]
    },
    "B": {
      "name": "Zero Tree",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "A": {
      "name": "k-Multiple Free Set",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "greedy",
        "sortings"
      ]
    }
  },
  "273": {
    "E": {
      "name": "Dima and Game",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "dp",
        "games"
      ]
    },
    "D": {
      "name": "Dima and Figure",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "dp"
      ]
    }
  },
  "272": {
    "E": {
      "name": "Dima and Horses",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "graphs"
      ]
    },
    "D": {
      "name": "Dima and Two Sequences",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1600,
      "tags": [
        "combinatorics",
        "math",
        "sortings"
      ]
    },
    "C": {
      "name": "Dima and Staircase",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "B": {
      "name": "Dima and Sequence",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Dima and Friends",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "271": {
    "E": {
      "name": "Three Horses",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Good Substrings",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "data structures",
        "strings"
      ]
    },
    "C": {
      "name": "Secret",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "B": {
      "name": "Prime Matrix",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "binary search",
        "brute force",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Beautiful Year",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force"
      ]
    }
  },
  "270": {
    "B": {
      "name": "Multithreading",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "data structures",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Fancy Fence",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "geometry",
        "implementation",
        "math"
      ]
    }
  },
  "269": {
    "E": {
      "name": "String Theory",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "geometry",
        "math",
        "strings"
      ]
    },
    "D": {
      "name": "Maximum Waterfall",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "dp",
        "graphs",
        "sortings"
      ]
    },
    "C": {
      "name": "Flawed Flow",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "flows",
        "graphs",
        "greedy"
      ]
    },
    "B": {
      "name": "Greenhouse Effect",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "dp"
      ]
    },
    "A": {
      "name": "Magical Boxes",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "268": {
    "E": {
      "name": "Playlist",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "math",
        "probabilities",
        "sortings"
      ]
    },
    "D": {
      "name": "Wall Bars",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Beautiful Sets of Points",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "B": {
      "name": "Buttons",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Games",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force"
      ]
    }
  },
  "267": {
    "C": {
      "name": "Berland Traffic",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2700,
      "tags": [
        "math",
        "matrices"
      ]
    },
    "B": {
      "name": "Dominoes",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "A": {
      "name": "Subtractions",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "math",
        "number theory"
      ]
    }
  },
  "266": {
    "E": {
      "name": "More Queries to Array...",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "math"
      ]
    },
    "D": {
      "name": "BerDonalds",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2400,
      "tags": [
        "graphs",
        "math",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Below the Diagonal",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "B": {
      "name": "Queue at the School",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "graph matchings",
        "implementation",
        "shortest paths"
      ]
    },
    "A": {
      "name": "Stones on the Table",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "265": {
    "B": {
      "name": "Roadside Trees (Simplified Edition)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Colorful Stones (Simplified Edition)",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "264": {
    "E": {
      "name": "Roadside Trees",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "D": {
      "name": "Colorful Stones",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "dp",
        "two pointers"
      ]
    },
    "C": {
      "name": "Choosing Balls",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Good Sequences",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "dp",
        "number theory"
      ]
    },
    "A": {
      "name": "Escape from Stones",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "data structures",
        "implementation",
        "two pointers"
      ]
    }
  },
  "263": {
    "E": {
      "name": "Rhombus",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "data structures",
        "dp"
      ]
    },
    "D": {
      "name": "Cycle in Graph",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "C": {
      "name": "Circle of Numbers",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "dfs and similar",
        "implementation"
      ]
    },
    "B": {
      "name": "Squares",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Beautiful Matrix",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "262": {
    "B": {
      "name": "Roma and Changing Signs",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Roma and Lucky Numbers",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "261": {
    "E": {
      "name": "Maxim and Calculator",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "brute force",
        "dp",
        "two pointers"
      ]
    },
    "D": {
      "name": "Maxim and Increasing Subsequence",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Maxim and Matrix",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "dp",
        "math"
      ]
    },
    "B": {
      "name": "Maxim and Restaurant",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "dp",
        "math",
        "probabilities"
      ]
    },
    "A": {
      "name": "Maxim and Discounts",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "sortings"
      ]
    }
  },
  "260": {
    "E": {
      "name": "Dividing Kingdom",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "brute force",
        "data structures"
      ]
    },
    "D": {
      "name": "Black and White Tree",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "dsu",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "C": {
      "name": "Balls and Boxes",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Ancient Prophesy",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Adding Digits",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "259": {
    "B": {
      "name": "Little Elephant and Magic Square",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Little Elephant and Chess",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "strings"
      ]
    }
  },
  "258": {
    "E": {
      "name": "Little Elephant and Tree",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "dfs and similar",
        "trees"
      ]
    },
    "D": {
      "name": "Little Elephant and Broken Sorting",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "dp",
        "math",
        "probabilities"
      ]
    },
    "C": {
      "name": "Little Elephant and LCM",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "B": {
      "name": "Little Elephant and Elections",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "combinatorics",
        "dp"
      ]
    },
    "A": {
      "name": "Little Elephant and Bits",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "257": {
    "E": {
      "name": "Greedy Elevator",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "D": {
      "name": "Sum",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "View Angle",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "geometry",
        "math"
      ]
    },
    "B": {
      "name": "Playing Cubes",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "games",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Sockets",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    }
  },
  "256": {
    "E": {
      "name": "Lucky Arrays",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Liars and Serge",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "dp"
      ]
    }
  },
  "255": {
    "E": {
      "name": "Furlo and Rublo and Game",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "games",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Mr. Bender and Square",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Almost Arithmetical Progression",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "dp"
      ]
    },
    "B": {
      "name": "Code Parsing",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Greg's Workout",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "254": {
    "E": {
      "name": "Dormitory",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "dp",
        "implementation"
      ]
    },
    "D": {
      "name": "Rats",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "dfs and similar",
        "graphs",
        "implementation",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Anagram",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "greedy",
        "strings"
      ]
    },
    "B": {
      "name": "Jury Size",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Cards with Numbers",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "sortings"
      ]
    }
  },
  "253": {
    "E": {
      "name": "Printer",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "data structures",
        "implementation",
        "sortings"
      ]
    },
    "D": {
      "name": "Table with Letters - 2",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "two pointers"
      ]
    },
    "C": {
      "name": "Text Editor",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "greedy",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Physics Practical",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "binary search",
        "dp",
        "sortings",
        "two pointers"
      ]
    },
    "A": {
      "name": "Boys and Girls",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "greedy"
      ]
    }
  },
  "252": {
    "B": {
      "name": "Unsorting Array",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "sortings"
      ]
    },
    "A": {
      "name": "Little Xor",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "251": {
    "E": {
      "name": "Tree and Table",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "dfs and similar",
        "dp",
        "implementation",
        "trees"
      ]
    },
    "D": {
      "name": "Two Sets",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "bitmasks",
        "math"
      ]
    },
    "C": {
      "name": "Number Transformation",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "dp",
        "greedy",
        "number theory"
      ]
    },
    "B": {
      "name": "Playing with Permutations",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Points on Line",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "binary search",
        "combinatorics",
        "two pointers"
      ]
    }
  },
  "250": {
    "E": {
      "name": "Mad Joe",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "brute force"
      ]
    },
    "D": {
      "name": "Building Bridge",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "geometry",
        "ternary search",
        "two pointers"
      ]
    },
    "C": {
      "name": "Movie Critics",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Restoring IPv6",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Paper Work",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "greedy"
      ]
    }
  },
  "249": {
    "E": {
      "name": "Endless Matrix",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "math"
      ]
    },
    "D": {
      "name": "Donkey and Stars",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "dp",
        "geometry",
        "math",
        "sortings"
      ]
    }
  },
  "248": {
    "E": {
      "name": "Piglet's Birthday",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "dp",
        "math",
        "probabilities"
      ]
    },
    "D": {
      "name": "Sweets for Everyone!",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Robo-Footballer",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "geometry"
      ]
    },
    "B": {
      "name": "Chilly Willy",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Cupboards",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "246": {
    "E": {
      "name": "Blood Cousins Return",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "dp",
        "sortings"
      ]
    },
    "D": {
      "name": "Colorful Graph",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "dfs and similar",
        "graphs"
      ]
    },
    "C": {
      "name": "Beauty Pageant",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
      ]
    },
    "B": {
      "name": "Increase and Decrease",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Buggy Sorting",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "constructive algorithms",
        "greedy",
        "sortings"
      ]
    }
  },
  "245": {
    "H": {
      "name": "Queries for Number of Palindromes",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "dp",
        "hashing",
        "strings"
      ]
    },
    "G": {
      "name": "Suggested Friends",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "brute force",
        "graphs"
      ]
    },
    "F": {
      "name": "Log Stream Analysis",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "binary search",
        "brute force",
        "implementation",
        "strings"
      ]
    },
    "E": {
      "name": "Mishap in Club",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "D": {
      "name": "Restoring Table",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "C": {
      "name": "Game with Coins",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Internet Address",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "System Administrator",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "244": {
    "B": {
      "name": "Undoubtedly Lucky Numbers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar"
      ]
    },
    "A": {
      "name": "Dividing Orange",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "243": {
    "E": {
      "name": "Matrix",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Cubes",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "dp",
        "geometry",
        "two pointers"
      ]
    },
    "C": {
      "name": "Colorado Potato Beetle",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "implementation"
      ]
    },
    "B": {
      "name": "Hydra",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "graphs",
        "sortings"
      ]
    },
    "A": {
      "name": "The Brand New Function",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "bitmasks"
      ]
    }
  },
  "242": {
    "E": {
      "name": "XOR on Segment",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "bitmasks",
        "data structures"
      ]
    },
    "D": {
      "name": "Dispute",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "dfs and similar",
        "graphs",
        "greedy"
      ]
    },
    "C": {
      "name": "King's Path",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "dfs and similar",
        "graphs",
        "hashing",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Big Segment",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Heads or Tails",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "241": {
    "G": {
      "name": "Challenging Balloons",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "constructive algorithms"
      ]
    },
    "F": {
      "name": "Race",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "E": {
      "name": "Flights",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "graphs",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Numbers",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": []
    },
    "C": {
      "name": "Mirror Box",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "geometry",
        "implementation"
      ]
    },
    "B": {
      "name": "Friends",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "binary search",
        "bitmasks",
        "data structures",
        "math"
      ]
    },
    "A": {
      "name": "Old Peykan",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "greedy"
      ]
    }
  },
  "240": {
    "F": {
      "name": "TorCoder",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "data structures"
      ]
    },
    "E": {
      "name": "Road Repairs",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "dfs and similar",
        "graphs",
        "greedy"
      ]
    }
  },
  "239": {
    "B": {
      "name": "Easy Tape Programming",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Two Bags of Potatoes",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "238": {
    "E": {
      "name": "Meeting Her",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "dp",
        "graphs",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Tape Programming",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "C": {
      "name": "World Eater Brothers",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
      ]
    },
    "B": {
      "name": "Boring Partition",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "Not Wool Sequences",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "237": {
    "E": {
      "name": "Build String",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "flows",
        "graphs"
      ]
    },
    "D": {
      "name": "T-decomposition",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
      ]
    },
    "C": {
      "name": "Primes on Interval",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "number theory",
        "two pointers"
      ]
    },
    "B": {
      "name": "Young Table",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Free Cash",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "236": {
    "B": {
      "name": "Easy Number Challenge",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "implementation",
        "number theory"
      ]
    },
    "A": {
      "name": "Boy or Girl",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "implementation",
        "strings"
      ]
    }
  },
  "235": {
    "E": {
      "name": "Number Challenge",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "combinatorics",
        "dp",
        "implementation",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Graph Game",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3000,
      "tags": [
        "graphs"
      ]
    },
    "C": {
      "name": "Cyclical Quest",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "string suffix structures",
        "strings"
      ]
    },
    "B": {
      "name": "Let's Play Osu!",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "dp",
        "math",
        "probabilities"
      ]
    },
    "A": {
      "name": "LCM Challenge",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "number theory"
      ]
    }
  },
  "234": {
    "H": {
      "name": "Merging Two Decks",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "G": {
      "name": "Practice",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "divide and conquer",
        "implementation"
      ]
    },
    "F": {
      "name": "Fence",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "dp"
      ]
    },
    "E": {
      "name": "Champions' League",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    },
    "D": {
      "name": "Cinema",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    },
    "C": {
      "name": "Weather",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "dp",
        "implementation"
      ]
    },
    "B": {
      "name": "Reading",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "sortings"
      ]
    },
    "A": {
      "name": "Lefthanders and Righthanders ",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    }
  },
  "233": {
    "B": {
      "name": "Non-square Equation",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "binary search",
        "brute force",
        "math"
      ]
    },
    "A": {
      "name": "Perfect Permutation",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "232": {
    "E": {
      "name": "Quick Tortoise",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "bitmasks",
        "divide and conquer",
        "dp"
      ]
    },
    "D": {
      "name": "Fence",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "binary search",
        "data structures",
        "string suffix structures"
      ]
    },
    "C": {
      "name": "Doe Graphs",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2600,
      "tags": [
        "constructive algorithms",
        "divide and conquer",
        "dp",
        "graphs",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Table",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "A": {
      "name": "Cycles",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "constructive algorithms",
        "graphs",
        "greedy"
      ]
    }
  },
  "231": {
    "E": {
      "name": "Cactus",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
      ]
    },
    "D": {
      "name": "Magic Box",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "geometry"
      ]
    },
    "C": {
      "name": "To Add or Not to Add",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "sortings",
        "two pointers"
      ]
    },
    "B": {
      "name": "Magic, Wizardry and Wonders",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "Team",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "greedy"
      ]
    }
  },
  "230": {
    "B": {
      "name": "T-primes",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "binary search",
        "implementation",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Dragons",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "sortings"
      ]
    }
  },
  "229": {
    "E": {
      "name": "Gifts",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2600,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "probabilities"
      ]
    },
    "D": {
      "name": "Towers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "dp",
        "greedy",
        "two pointers"
      ]
    },
    "C": {
      "name": "Triangles",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "combinatorics",
        "graphs",
        "math"
      ]
    },
    "B": {
      "name": "Planets",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "data structures",
        "graphs",
        "shortest paths"
      ]
    },
    "A": {
      "name": "Shifts",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "two pointers"
      ]
    }
  },
  "228": {
    "E": {
      "name": "The Road to Berland is Paved With Good Intentions",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 1900,
      "tags": [
        "2-sat",
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "D": {
      "name": "Zigzag",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "data structures"
      ]
    },
    "C": {
      "name": "Fractal Detector",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "dp",
        "hashing"
      ]
    },
    "B": {
      "name": "Two Tables",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Is your horseshoe on the other hoof?",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "227": {
    "B": {
      "name": "Effective Approach",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Where do I Turn?",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "geometry"
      ]
    }
  },
  "226": {
    "E": {
      "name": "Noble Knight's Path",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "D": {
      "name": "The table",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "C": {
      "name": "Anniversary",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "implementation",
        "math",
        "matrices",
        "number theory"
      ]
    },
    "B": {
      "name": "Naughty Stone Piles",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Flying Saucer Segments",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "math"
      ]
    }
  },
  "225": {
    "E": {
      "name": "Unsolvable",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2100,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Snake",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2200,
      "tags": [
        "bitmasks",
        "dfs and similar",
        "graphs",
        "implementation"
      ]
    },
    "C": {
      "name": "Barcode",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "dp",
        "matrices"
      ]
    },
    "B": {
      "name": "Well-known Numbers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "greedy",
        "number theory"
      ]
    },
    "A": {
      "name": "Dice Tower",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    }
  },
  "224": {
    "B": {
      "name": "Array",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "bitmasks",
        "implementation",
        "two pointers"
      ]
    },
    "A": {
      "name": "Parallelepiped",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "geometry",
        "math"
      ]
    }
  },
  "223": {
    "E": {
      "name": "Planar Graph",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "flows",
        "geometry",
        "graphs"
      ]
    },
    "D": {
      "name": "Spider",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3000,
      "tags": [
        "geometry",
        "graphs"
      ]
    },
    "C": {
      "name": "Partial Sums",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "combinatorics",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Two Strings",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "dp",
        "strings"
      ]
    },
    "A": {
      "name": "Bracket Sequence",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "data structures",
        "expression parsing",
        "implementation"
      ]
    }
  },
  "222": {
    "E": {
      "name": "Decoding Genome",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 1900,
      "tags": [
        "dp",
        "matrices"
      ]
    },
    "D": {
      "name": "Olympiad",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Reducing Fractions",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "implementation",
        "math",
        "number theory",
        "sortings"
      ]
    },
    "B": {
      "name": "Cosmic Tables",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "A": {
      "name": "Shooshuns and Sequence ",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "221": {
    "B": {
      "name": "Little Elephant and Numbers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Little Elephant and Function",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "220": {
    "E": {
      "name": "Little Elephant and Inversions",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "two pointers"
      ]
    },
    "D": {
      "name": "Little Elephant and Triangle",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "geometry",
        "math"
      ]
    },
    "C": {
      "name": "Little Elephant and Shifts",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "data structures"
      ]
    },
    "B": {
      "name": "Little Elephant and Array",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "data structures"
      ]
    },
    "A": {
      "name": "Little Elephant and Problem",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "implementation",
        "sortings"
      ]
    }
  },
  "219": {
    "E": {
      "name": "Parking Lot",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2200,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Choosing Capital for Treeland",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
      ]
    },
    "C": {
      "name": "Color Stripe",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "dp",
        "greedy"
      ]
    },
    "B": {
      "name": "Special Offer! Super Price 999 Bourles!",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "k-String",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "218": {
    "B": {
      "name": "Airport",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Mountain Scenery",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "217": {
    "E": {
      "name": "Alien DNA",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "dsu",
        "trees"
      ]
    },
    "D": {
      "name": "Bitonix' Patrol",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2900,
      "tags": [
        "bitmasks",
        "brute force",
        "combinatorics",
        "dfs and similar",
        "math"
      ]
    },
    "C": {
      "name": "Formurosa",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "divide and conquer",
        "dp",
        "expression parsing"
      ]
    },
    "B": {
      "name": "Blackboard Fibonacci",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "math"
      ]
    },
    "A": {
      "name": "Ice Skating",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    }
  },
  "216": {
    "E": {
      "name": "Martian Luck",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2000,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Spider's Web",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Hiring Staff",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Forming Teams",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "implementation"
      ]
    },
    "A": {
      "name": "Tiling with Hexagons",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "215": {
    "E": {
      "name": "Periodical Numbers",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2100,
      "tags": [
        "combinatorics",
        "dp",
        "number theory"
      ]
    },
    "D": {
      "name": "Hot Days",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "greedy"
      ]
    },
    "C": {
      "name": "Crosses",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "B": {
      "name": "Olympic Medal",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Bicycle Chain",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "214": {
    "B": {
      "name": "Hometask",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "System of Equations",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force"
      ]
    }
  },
  "213": {
    "E": {
      "name": "Two Permutations",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "hashing",
        "strings"
      ]
    },
    "D": {
      "name": "Stars",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "geometry"
      ]
    },
    "C": {
      "name": "Relay Race",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Numbers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "A": {
      "name": "Game",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "greedy"
      ]
    }
  },
  "212": {
    "E": {
      "name": "IT Restaurants",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "D": {
      "name": "Cutting a Fence",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "data structures",
        "dsu"
      ]
    },
    "C": {
      "name": "Cowboys",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "B": {
      "name": "Polycarpus is Looking for Good Substrings",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "bitmasks",
        "hashing",
        "implementation"
      ]
    },
    "A": {
      "name": "Privatization",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "flows",
        "graphs"
      ]
    }
  },
  "209": {
    "C": {
      "name": "Trails and Glades",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "dsu",
        "graphs",
        "greedy"
      ]
    },
    "B": {
      "name": "Pixels",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "A": {
      "name": "Multicolored Marbles",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "dp",
        "math"
      ]
    }
  },
  "208": {
    "E": {
      "name": "Blood Cousins",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "trees"
      ]
    },
    "D": {
      "name": "Prizes, Prizes, more Prizes",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    },
    "C": {
      "name": "Police Station",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 1900,
      "tags": [
        "dp",
        "graphs",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Solitaire",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "dfs and similar",
        "dp"
      ]
    },
    "A": {
      "name": "Dubstep",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "strings"
      ]
    }
  },
  "207": {
    "D9": {
      "name": "The Beaver's Problem - 3",
      "type": "PROGRAMMING",
      "points": 10.0,
      "rating": 1800,
      "tags": []
    },
    "D8": {
      "name": "The Beaver's Problem - 3",
      "type": "PROGRAMMING",
      "points": 10.0,
      "rating": 2300,
      "tags": []
    },
    "D7": {
      "name": "The Beaver's Problem - 3",
      "type": "PROGRAMMING",
      "points": 10.0,
      "rating": 1600,
      "tags": []
    },
    "D6": {
      "name": "The Beaver's Problem - 3",
      "type": "PROGRAMMING",
      "points": 10.0,
      "rating": 2100,
      "tags": []
    },
    "D5": {
      "name": "The Beaver's Problem - 3",
      "type": "PROGRAMMING",
      "points": 10.0,
      "rating": 1600,
      "tags": []
    },
    "D4": {
      "name": "The Beaver's Problem - 3",
      "type": "PROGRAMMING",
      "points": 10.0,
      "rating": 2100,
      "tags": []
    },
    "D3": {
      "name": "The Beaver's Problem - 3",
      "type": "PROGRAMMING",
      "points": 10.0,
      "rating": 2000,
      "tags": []
    },
    "D2": {
      "name": "The Beaver's Problem - 3",
      "type": "PROGRAMMING",
      "points": 10.0,
      "rating": 2000,
      "tags": []
    },
    "D10": {
      "name": "The Beaver's Problem - 3",
      "type": "PROGRAMMING",
      "points": 10.0,
      "rating": 2100,
      "tags": []
    },
    "D1": {
      "name": "The Beaver's Problem - 3",
      "type": "PROGRAMMING",
      "points": 10.0,
      "rating": 1800,
      "tags": []
    },
    "C3": {
      "name": "Game with Two Trees",
      "type": "PROGRAMMING",
      "points": 50.0,
      "rating": 2700,
      "tags": [
        "data structures"
      ]
    },
    "C2": {
      "name": "Game with Two Trees",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 2200,
      "tags": []
    },
    "C1": {
      "name": "Game with Two Trees",
      "type": "PROGRAMMING",
      "points": 20.0,
      "rating": 2100,
      "tags": []
    },
    "B3": {
      "name": "Military Trainings",
      "type": "PROGRAMMING",
      "points": 50.0,
      "rating": 1700,
      "tags": []
    },
    "B2": {
      "name": "Military Trainings",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 1900,
      "tags": []
    },
    "B1": {
      "name": "Military Trainings",
      "type": "PROGRAMMING",
      "points": 20.0,
      "rating": 1600,
      "tags": []
    },
    "A3": {
      "name": "Beaver's Calculator 1.0",
      "type": "PROGRAMMING",
      "points": 50.0,
      "rating": 2000,
      "tags": [
        "greedy"
      ]
    },
    "A2": {
      "name": "Beaver's Calculator 1.0",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 1800,
      "tags": [
        "greedy"
      ]
    },
    "A1": {
      "name": "Beaver's Calculator 1.0",
      "type": "PROGRAMMING",
      "points": 20.0,
      "rating": 1600,
      "tags": [
        "greedy"
      ]
    }
  },
  "205": {
    "B": {
      "name": "Little Elephant and Sorting",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "greedy"
      ]
    },
    "A": {
      "name": "Little Elephant and Rozdil",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "204": {
    "E": {
      "name": "Little Elephant and Strings",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "implementation",
        "string suffix structures",
        "two pointers"
      ]
    },
    "D": {
      "name": "Little Elephant and Retro Strings",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Little Elephant and Furik and Rubik",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "math",
        "probabilities"
      ]
    },
    "B": {
      "name": "Little Elephant and Cards",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "A": {
      "name": "Little Elephant and Interval",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "combinatorics",
        "dp"
      ]
    }
  },
  "203": {
    "E": {
      "name": "Transportation",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "D": {
      "name": "Hit Ball",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "geometry",
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Photographer",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Game on Paper",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Two Problems",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "202": {
    "B": {
      "name": "Brand New Easy Problem",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "brute force"
      ]
    },
    "A": {
      "name": "LLPS",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "greedy",
        "implementation",
        "strings"
      ]
    }
  },
  "201": {
    "E": {
      "name": "Thoroughly Bureaucratic Organization",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "binary search",
        "combinatorics"
      ]
    },
    "D": {
      "name": "Brand New Problem",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "bitmasks",
        "brute force",
        "dp"
      ]
    },
    "C": {
      "name": "Fragile Bridges",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Guess That Car!",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "math",
        "ternary search"
      ]
    },
    "A": {
      "name": "Clear Symmetry",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "dp",
        "math"
      ]
    }
  },
  "200": {
    "E": {
      "name": "Tractor College",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2400,
      "tags": [
        "implementation",
        "math",
        "number theory",
        "ternary search"
      ]
    },
    "D": {
      "name": "Programming Language",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "brute force",
        "expression parsing",
        "implementation"
      ]
    },
    "C": {
      "name": "Football Championship",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "B": {
      "name": "Drinks",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Cinema",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2400,
      "tags": [
        "brute force",
        "data structures"
      ]
    }
  },
  "199": {
    "B": {
      "name": "Special Olympics",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "geometry"
      ]
    },
    "A": {
      "name": "Hexadecimal's theorem",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation",
        "number theory"
      ]
    }
  },
  "198": {
    "E": {
      "name": "Gripping Story",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "data structures",
        "sortings"
      ]
    },
    "D": {
      "name": "Cube Snake",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "constructive algorithms"
      ]
    },
    "C": {
      "name": "Delivering Carcinogen",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "geometry"
      ]
    },
    "B": {
      "name": "Jumping on Walls",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "shortest paths"
      ]
    },
    "A": {
      "name": "About Bacteria",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "197": {
    "B": {
      "name": "Limit",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Plate Game",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "games",
        "math"
      ]
    }
  },
  "196": {
    "E": {
      "name": "Opening Portals",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "dsu",
        "graphs",
        "shortest paths"
      ]
    },
    "D": {
      "name": "The Next Good String",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "greedy",
        "hashing",
        "strings"
      ]
    },
    "C": {
      "name": "Paint Tree",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "divide and conquer",
        "geometry",
        "sortings",
        "trees"
      ]
    },
    "B": {
      "name": "Infinite Maze",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "A": {
      "name": "Lexicographically Maximum Subsequence",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "strings"
      ]
    }
  },
  "195": {
    "E": {
      "name": "Building Forest",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "data structures",
        "dsu",
        "graphs"
      ]
    },
    "D": {
      "name": "Analyzing Polyline",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "geometry",
        "math",
        "sortings"
      ]
    },
    "C": {
      "name": "Try and Catch",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "expression parsing",
        "implementation"
      ]
    },
    "B": {
      "name": "After Training",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "data structures",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Let's Watch Football",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "binary search",
        "brute force",
        "math"
      ]
    }
  },
  "194": {
    "B": {
      "name": "Square",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Exams",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "193": {
    "E": {
      "name": "Fibonacci Number",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "brute force",
        "math",
        "matrices"
      ]
    },
    "D": {
      "name": "Two Segments",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "data structures"
      ]
    },
    "C": {
      "name": "Hamming Distance",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "matrices"
      ]
    },
    "B": {
      "name": "Xor",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "brute force"
      ]
    },
    "A": {
      "name": "Cutting Figure",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "graphs",
        "trees"
      ]
    }
  },
  "192": {
    "B": {
      "name": "Walking in the Rain",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Funky Numbers",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "binary search",
        "brute force",
        "implementation"
      ]
    }
  },
  "191": {
    "E": {
      "name": "Thwarting Demonstrations",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "data structures",
        "trees"
      ]
    },
    "D": {
      "name": "Metro Scheme",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "graphs",
        "greedy"
      ]
    },
    "C": {
      "name": "Fools and Roads",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "dfs and similar",
        "trees"
      ]
    },
    "B": {
      "name": "Demonstration",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Dynasty Puzzles",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "dp"
      ]
    }
  },
  "190": {
    "E": {
      "name": "Counter Attack",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "dsu",
        "graphs",
        "hashing",
        "sortings"
      ]
    },
    "D": {
      "name": "Non-Secret Cypher",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "two pointers"
      ]
    },
    "C": {
      "name": "STL",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "dfs and similar"
      ]
    },
    "B": {
      "name": "Surrounded",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "geometry"
      ]
    },
    "A": {
      "name": "Vasya and the Bus",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "189": {
    "B": {
      "name": "Counting Rhombi",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "math"
      ]
    },
    "A": {
      "name": "Cut Ribbon",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "dp"
      ]
    }
  },
  "188": {
    "H": {
      "name": "Stack",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special",
        "expression parsing",
        "implementation"
      ]
    },
    "G": {
      "name": "Array Sorting",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "F": {
      "name": "Binary Notation",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "E": {
      "name": "HQ9+",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "D": {
      "name": "Asterisks",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "C": {
      "name": "LCM",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "*special",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "A + Reverse B",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "A": {
      "name": "Hexagonal Numbers",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "*special"
      ]
    }
  },
  "187": {
    "E": {
      "name": "Heaven Tour",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "D": {
      "name": "BRT Contract ",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2800,
      "tags": [
        "data structures"
      ]
    },
    "C": {
      "name": "Weak Memory",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "dsu"
      ]
    },
    "B": {
      "name": "AlgoRace",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "dp",
        "shortest paths"
      ]
    },
    "A": {
      "name": "Permutations",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "greedy"
      ]
    }
  },
  "186": {
    "B": {
      "name": "Growing Mushrooms",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Comparing Strings",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "185": {
    "E": {
      "name": "Soap Time! - 2",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "D": {
      "name": "Visit of the Great",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Clever Fat Rat",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Mushroom Scientists",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "math",
        "ternary search"
      ]
    },
    "A": {
      "name": "Plant",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "math"
      ]
    }
  },
  "183": {
    "E": {
      "name": "Candy Shop",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "greedy"
      ]
    },
    "D": {
      "name": "T-shirt",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "dp",
        "greedy",
        "probabilities"
      ]
    },
    "C": {
      "name": "Cyclic Coloring",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "dfs and similar"
      ]
    },
    "B": {
      "name": "Zoo",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "geometry"
      ]
    },
    "A": {
      "name": "Headquarters",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    }
  },
  "182": {
    "E": {
      "name": "Wooden Fence",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "dp"
      ]
    },
    "D": {
      "name": "Common Divisors",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "hashing",
        "implementation",
        "math",
        "strings"
      ]
    },
    "C": {
      "name": "Optimal Sum",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2000,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "B": {
      "name": "Vasya's Calendar",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Battlefield",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2200,
      "tags": [
        "geometry",
        "graphs",
        "implementation",
        "shortest paths"
      ]
    }
  },
  "181": {
    "B": {
      "name": "Number of Triplets",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "binary search",
        "brute force"
      ]
    },
    "A": {
      "name": "Series of Crimes",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "geometry",
        "implementation"
      ]
    }
  },
  "180": {
    "F": {
      "name": "Mathematical Analysis Rocks!",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "implementation",
        "math"
      ]
    },
    "E": {
      "name": "Cubes",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "binary search",
        "dp",
        "two pointers"
      ]
    },
    "D": {
      "name": "Name",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "greedy",
        "strings"
      ]
    },
    "C": {
      "name": "Letter",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Divisibility Rules",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Defragmentation",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "implementation"
      ]
    }
  },
  "178": {
    "F3": {
      "name": "Representative Sampling",
      "type": "PROGRAMMING",
      "points": 50.0,
      "rating": 2500,
      "tags": []
    },
    "F2": {
      "name": "Representative Sampling",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 2200,
      "tags": [
        "dp",
        "sortings",
        "strings"
      ]
    },
    "F1": {
      "name": "Representative Sampling",
      "type": "PROGRAMMING",
      "points": 20.0,
      "rating": 1800,
      "tags": []
    },
    "E3": {
      "name": "The Beaver's Problem - 2",
      "type": "PROGRAMMING",
      "points": 50.0,
      "rating": 2300,
      "tags": []
    },
    "E2": {
      "name": "The Beaver's Problem - 2",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 2000,
      "tags": []
    },
    "E1": {
      "name": "The Beaver's Problem - 2",
      "type": "PROGRAMMING",
      "points": 20.0,
      "rating": 1900,
      "tags": []
    },
    "D3": {
      "name": "Magic Squares",
      "type": "PROGRAMMING",
      "points": 50.0,
      "rating": 2100,
      "tags": []
    },
    "D2": {
      "name": "Magic Squares",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 1900,
      "tags": []
    },
    "D1": {
      "name": "Magic Squares",
      "type": "PROGRAMMING",
      "points": 20.0,
      "rating": 1500,
      "tags": []
    },
    "C3": {
      "name": "Smart Beaver and Resolving Collisions",
      "type": "PROGRAMMING",
      "points": 50.0,
      "rating": 2000,
      "tags": []
    },
    "C2": {
      "name": "Smart Beaver and Resolving Collisions",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 1900,
      "tags": []
    },
    "C1": {
      "name": "Smart Beaver and Resolving Collisions",
      "type": "PROGRAMMING",
      "points": 20.0,
      "rating": 1600,
      "tags": []
    },
    "B3": {
      "name": "Greedy Merchants",
      "type": "PROGRAMMING",
      "points": 50.0,
      "rating": 1800,
      "tags": []
    },
    "B2": {
      "name": "Greedy Merchants",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 1600,
      "tags": []
    },
    "B1": {
      "name": "Greedy Merchants",
      "type": "PROGRAMMING",
      "points": 20.0,
      "rating": 1600,
      "tags": []
    },
    "A3": {
      "name": "Educational Game",
      "type": "PROGRAMMING",
      "points": 50.0,
      "rating": 1100,
      "tags": [
        "greedy"
      ]
    },
    "A2": {
      "name": "Educational Game",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 1000,
      "tags": [
        "greedy"
      ]
    },
    "A1": {
      "name": "Educational Game",
      "type": "PROGRAMMING",
      "points": 20.0,
      "rating": 1000,
      "tags": []
    }
  },
  "177": {
    "G2": {
      "name": "Fibonacci Strings",
      "type": "PROGRAMMING",
      "points": 70.0,
      "rating": 2600,
      "tags": [
        "matrices",
        "strings"
      ]
    },
    "G1": {
      "name": "Fibonacci Strings",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 2400,
      "tags": [
        "strings"
      ]
    },
    "F2": {
      "name": "Script Generation",
      "type": "PROGRAMMING",
      "points": 70.0,
      "rating": 2300,
      "tags": []
    },
    "F1": {
      "name": "Script Generation",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 1800,
      "tags": []
    },
    "E2": {
      "name": "Space Voyage",
      "type": "PROGRAMMING",
      "points": 70.0,
      "rating": 1900,
      "tags": [
        "binary search"
      ]
    },
    "E1": {
      "name": "Space Voyage",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 1700,
      "tags": [
        "binary search"
      ]
    },
    "D2": {
      "name": "Encrypting Messages",
      "type": "PROGRAMMING",
      "points": 70.0,
      "rating": 1500,
      "tags": [
        "data structures"
      ]
    },
    "D1": {
      "name": "Encrypting Messages",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 1200,
      "tags": [
        "brute force"
      ]
    },
    "C2": {
      "name": "Party",
      "type": "PROGRAMMING",
      "points": 70.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "C1": {
      "name": "Party",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 1500,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "B2": {
      "name": "Rectangular Game",
      "type": "PROGRAMMING",
      "points": 70.0,
      "rating": 1200,
      "tags": [
        "number theory"
      ]
    },
    "B1": {
      "name": "Rectangular Game",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 1000,
      "tags": [
        "number theory"
      ]
    },
    "A2": {
      "name": "Good Matrix Elements",
      "type": "PROGRAMMING",
      "points": 70.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    },
    "A1": {
      "name": "Good Matrix Elements",
      "type": "PROGRAMMING",
      "points": 30.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "176": {
    "E": {
      "name": "Archaeology",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "data structures",
        "dfs and similar",
        "trees"
      ]
    },
    "D": {
      "name": "Hyper String",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Playing with Superglue",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "combinatorics",
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Word Cut",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "dp"
      ]
    },
    "A": {
      "name": "Trading Business",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "sortings"
      ]
    }
  },
  "175": {
    "F": {
      "name": "Gnomes of Might and Magic",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "graphs",
        "implementation",
        "shortest paths"
      ]
    },
    "E": {
      "name": "Power Defence",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2600,
      "tags": [
        "brute force",
        "dp",
        "geometry",
        "greedy"
      ]
    },
    "D": {
      "name": "Plane of Tanks: Duel",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "brute force",
        "dp",
        "math",
        "probabilities"
      ]
    },
    "C": {
      "name": "Geometry Horse",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "greedy",
        "implementation",
        "sortings",
        "two pointers"
      ]
    },
    "B": {
      "name": "Plane of Tanks: Pro",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Robot Bicorn Attack",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "174": {
    "C": {
      "name": "Range Increments",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "B": {
      "name": "File List",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "dp",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Problem About Equation",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "math"
      ]
    }
  },
  "173": {
    "E": {
      "name": "Camping Groups",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "data structures",
        "sortings"
      ]
    },
    "D": {
      "name": "Deputies",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "graphs",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Spiral Maximum",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "dp"
      ]
    },
    "B": {
      "name": "Chamber of Secrets",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "dfs and similar",
        "shortest paths"
      ]
    },
    "A": {
      "name": "Rock-Paper-Scissors",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "172": {
    "E": {
      "name": "BHTML+BCSS",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "*special",
        "dfs and similar",
        "expression parsing"
      ]
    },
    "D": {
      "name": "Calendar Reform",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "*special",
        "number theory"
      ]
    },
    "C": {
      "name": "Bus",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "*special",
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Pseudorandom Sequence Period",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "*special",
        "implementation",
        "number theory"
      ]
    },
    "A": {
      "name": "Phone Code",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 800,
      "tags": [
        "*special",
        "brute force",
        "implementation"
      ]
    }
  },
  "171": {
    "H": {
      "name": "A polyline",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "G": {
      "name": "Mysterious numbers - 2",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "*special"
      ]
    },
    "F": {
      "name": "ucyhf",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "*special",
        "brute force",
        "implementation",
        "number theory"
      ]
    },
    "E": {
      "name": "MYSTERIOUS LANGUAGE",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "*special"
      ]
    },
    "D": {
      "name": "Broken checker",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "*special",
        "brute force"
      ]
    },
    "C": {
      "name": "A Piece of Cake",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "B": {
      "name": "Star",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "*special",
        "combinatorics"
      ]
    },
    "A": {
      "name": "Mysterious numbers - 1",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "*special",
        "constructive algorithms"
      ]
    }
  },
  "169": {
    "B": {
      "name": "Replacing Digits",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Chores",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "sortings"
      ]
    }
  },
  "168": {
    "B": {
      "name": "Wizards and Minimal Spell",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Wizards and Demonstration",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "167": {
    "E": {
      "name": "Wizards and Bets",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "dfs and similar",
        "graphs",
        "math",
        "matrices"
      ]
    },
    "D": {
      "name": "Wizards and Roads",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 3000,
      "tags": [
        "data structures",
        "divide and conquer",
        "graph matchings",
        "graphs",
        "greedy"
      ]
    },
    "C": {
      "name": "Wizards and Numbers",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "games",
        "math"
      ]
    },
    "B": {
      "name": "Wizards and Huge Prize",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "dp",
        "math",
        "probabilities"
      ]
    },
    "A": {
      "name": "Wizards and Trolleybuses",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "166": {
    "E": {
      "name": "Tetrahedron",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "dp",
        "math",
        "matrices"
      ]
    },
    "D": {
      "name": "Shoe Store",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2500,
      "tags": [
        "dp",
        "graph matchings",
        "greedy",
        "sortings",
        "two pointers"
      ]
    },
    "C": {
      "name": "Median",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "greedy",
        "math",
        "sortings"
      ]
    },
    "B": {
      "name": "Polygons",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2100,
      "tags": [
        "geometry",
        "sortings"
      ]
    },
    "A": {
      "name": "Rank List",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "binary search",
        "implementation",
        "sortings"
      ]
    }
  },
  "165": {
    "E": {
      "name": "Compatible Numbers",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar",
        "dp"
      ]
    },
    "D": {
      "name": "Beard Graph",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "dsu",
        "trees"
      ]
    },
    "C": {
      "name": "Another Problem on Strings",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "brute force",
        "dp",
        "math",
        "strings",
        "two pointers"
      ]
    },
    "B": {
      "name": "Burning Midnight Oil",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "implementation"
      ]
    },
    "A": {
      "name": "Supercentral Point",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "164": {
    "E": {
      "name": "Polycarpus and Tasks",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": []
    },
    "D": {
      "name": "Minimum Diameter",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3100,
      "tags": [
        "binary search",
        "brute force"
      ]
    },
    "C": {
      "name": "Machine Programming",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "flows",
        "graphs"
      ]
    },
    "B": {
      "name": "Ancient Berland Hieroglyphs",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "two pointers"
      ]
    },
    "A": {
      "name": "Variable, or There and Back Again",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    }
  },
  "163": {
    "E": {
      "name": "e-Government",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "strings",
        "trees"
      ]
    },
    "D": {
      "name": "Large Refrigerator",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "brute force"
      ]
    },
    "C": {
      "name": "Conveyor",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "sortings",
        "two pointers"
      ]
    },
    "B": {
      "name": "Lemmings",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "binary search"
      ]
    },
    "A": {
      "name": "Substring and Subsequence",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "dp"
      ]
    }
  },
  "162": {
    "J": {
      "name": "Brackets",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special"
      ]
    },
    "I": {
      "name": "Truncatable primes",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "*special"
      ]
    },
    "H": {
      "name": "Alternating case",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special"
      ]
    },
    "G": {
      "name": "Non-decimal sum",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "*special"
      ]
    },
    "F": {
      "name": "Factorial zeros",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special"
      ]
    },
    "E": {
      "name": "HQ9+",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special"
      ]
    },
    "D": {
      "name": "Remove digits",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "*special"
      ]
    },
    "C": {
      "name": "Prime factorization",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special"
      ]
    },
    "B": {
      "name": "Binary notation",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special"
      ]
    },
    "A": {
      "name": "Pentagonal numbers",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "*special",
        "implementation"
      ]
    }
  },
  "161": {
    "E": {
      "name": "Polycarpus the Safecracker",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "dp"
      ]
    },
    "D": {
      "name": "Distance in Tree",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "dfs and similar",
        "dp",
        "trees"
      ]
    },
    "C": {
      "name": "Abracadabra",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "divide and conquer"
      ]
    },
    "B": {
      "name": "Discounts",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Dress'em in Vests!",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "binary search",
        "brute force",
        "greedy",
        "two pointers"
      ]
    }
  },
  "160": {
    "E": {
      "name": "Buses and People",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "data structures",
        "sortings"
      ]
    },
    "D": {
      "name": "Edges in MST",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "sortings"
      ]
    },
    "C": {
      "name": "Find Pair",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "implementation",
        "math",
        "sortings"
      ]
    },
    "B": {
      "name": "Unlucky Ticket",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Twins",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "greedy",
        "sortings"
      ]
    }
  },
  "159": {
    "E": {
      "name": "Zebra Tower",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 1700,
      "tags": [
        "*special",
        "data structures",
        "greedy",
        "sortings"
      ]
    },
    "D": {
      "name": "Palindrome pairs",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1500,
      "tags": [
        "*special",
        "brute force",
        "dp",
        "strings"
      ]
    },
    "C": {
      "name": "String Manipulation 1.0",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "*special",
        "binary search",
        "brute force",
        "data structures",
        "strings"
      ]
    },
    "B": {
      "name": "Matchmaker",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "*special",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Friends or Not",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "*special",
        "greedy",
        "implementation"
      ]
    }
  },
  "158": {
    "E": {
      "name": "Phone Talks",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "*special",
        "dp",
        "sortings"
      ]
    },
    "D": {
      "name": "Ice Sculptures",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "*special",
        "brute force",
        "number theory"
      ]
    },
    "C": {
      "name": "Cd and pwd commands",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "*special",
        "data structures",
        "implementation"
      ]
    },
    "B": {
      "name": "Taxi",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "*special",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Next Round",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "*special",
        "implementation"
      ]
    }
  },
  "157": {
    "B": {
      "name": "Trace",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "geometry",
        "sortings"
      ]
    },
    "A": {
      "name": "Game Outcome",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force"
      ]
    }
  },
  "156": {
    "E": {
      "name": "Mrs. Hudson's Pancakes",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "brute force",
        "dp"
      ]
    },
    "D": {
      "name": "Clues",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "combinatorics",
        "graphs"
      ]
    },
    "C": {
      "name": "Cipher",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "B": {
      "name": "Suspects",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "data structures",
        "implementation"
      ]
    },
    "A": {
      "name": "Message",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "brute force"
      ]
    }
  },
  "155": {
    "B": {
      "name": "Combination",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "I_love_\\%username\\%",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force"
      ]
    }
  },
  "154": {
    "E": {
      "name": "Martian Colony",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "geometry"
      ]
    },
    "D": {
      "name": "Flatland Fencing",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "games",
        "math"
      ]
    },
    "C": {
      "name": "Double Profiles",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "graphs",
        "hashing",
        "sortings"
      ]
    },
    "B": {
      "name": "Colliders",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Hometask",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "greedy"
      ]
    }
  },
  "153": {
    "E": {
      "name": "Euclidean Distance",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "*special"
      ]
    },
    "D": {
      "name": "Date Change",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "*special"
      ]
    },
    "C": {
      "name": "Caesar Cipher",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "*special"
      ]
    },
    "B": {
      "name": "Binary notation",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special"
      ]
    },
    "A": {
      "name": "A + B",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "*special"
      ]
    }
  },
  "152": {
    "E": {
      "name": "Garden",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "dp",
        "graphs",
        "trees"
      ]
    },
    "D": {
      "name": "Frames",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "brute force"
      ]
    },
    "C": {
      "name": "Pocket Book",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "combinatorics"
      ]
    },
    "B": {
      "name": "Steps",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "binary search",
        "implementation"
      ]
    },
    "A": {
      "name": "Marks",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "151": {
    "B": {
      "name": "Phone Numbers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Soft Drinking",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "150": {
    "E": {
      "name": "Freezing with Style",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 3000,
      "tags": [
        "binary search",
        "data structures",
        "divide and conquer",
        "trees"
      ]
    },
    "D": {
      "name": "Mission Impassable",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2600,
      "tags": [
        "dp",
        "strings"
      ]
    },
    "C": {
      "name": "Smart Cheater",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "math",
        "probabilities"
      ]
    },
    "B": {
      "name": "Quantity of Strings",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "combinatorics",
        "dfs and similar",
        "graphs",
        "math"
      ]
    },
    "A": {
      "name": "Win or Freeze",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "games",
        "math",
        "number theory"
      ]
    }
  },
  "149": {
    "E": {
      "name": "Martian Strings",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "string suffix structures",
        "strings"
      ]
    },
    "D": {
      "name": "Coloring Brackets",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 1900,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Division into Teams",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "greedy",
        "math",
        "sortings"
      ]
    },
    "B": {
      "name": "Martian Clock",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Business trip",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    }
  },
  "148": {
    "E": {
      "name": "Porcelain",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "dp"
      ]
    },
    "D": {
      "name": "Bag of mice",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "dp",
        "games",
        "math",
        "probabilities"
      ]
    },
    "C": {
      "name": "Terse princess",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "B": {
      "name": "Escape",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Insomnia cure",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 800,
      "tags": [
        "constructive algorithms",
        "implementation",
        "math"
      ]
    }
  },
  "147": {
    "B": {
      "name": "Smile House",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "graphs",
        "matrices"
      ]
    },
    "A": {
      "name": "Punctuation",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "146": {
    "B": {
      "name": "Lucky Mask",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Lucky Ticket",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "145": {
    "E": {
      "name": "Lucky Queries",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Lucky Pair",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "combinatorics",
        "data structures",
        "implementation"
      ]
    },
    "C": {
      "name": "Lucky Subsequence",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "B": {
      "name": "Lucky Number 2",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms"
      ]
    },
    "A": {
      "name": "Lucky Conversion",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "144": {
    "E": {
      "name": "Competition",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "D": {
      "name": "Missile Silos",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Anagram Search",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "B": {
      "name": "Meeting",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Arrival of the General",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "143": {
    "B": {
      "name": "Help Kingdom of Far Far Away 2",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Help Vasilisa the Wise 2",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "math"
      ]
    }
  },
  "142": {
    "E": {
      "name": "Help Greg the Dwarf 2",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "geometry"
      ]
    },
    "D": {
      "name": "Help Shrek and Donkey 2",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "games"
      ]
    },
    "C": {
      "name": "Help Caretaker",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "dp"
      ]
    },
    "B": {
      "name": "Help General",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Help Farmer",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "math"
      ]
    }
  },
  "141": {
    "E": {
      "name": "Clearing Up",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "dp",
        "dsu",
        "graphs"
      ]
    },
    "D": {
      "name": "Take-off Ramps",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "graphs",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Queue",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "constructive algorithms",
        "greedy",
        "sortings"
      ]
    },
    "B": {
      "name": "Hopscotch",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "geometry",
        "math"
      ]
    },
    "A": {
      "name": "Amusing Joke",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "sortings",
        "strings"
      ]
    }
  },
  "140": {
    "F": {
      "name": "New Year Snowflake",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2600,
      "tags": [
        "geometry",
        "sortings"
      ]
    },
    "E": {
      "name": "New Year Garland",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "D": {
      "name": "New Year Contest",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "New Year Snowmen",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "data structures",
        "greedy"
      ]
    },
    "B": {
      "name": "New Year Cards",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "New Year Table",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "geometry",
        "math"
      ]
    }
  },
  "139": {
    "B": {
      "name": "Wallpaper",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Petr and Book",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "138": {
    "E": {
      "name": "Hellish Constraints",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "brute force",
        "dp",
        "two pointers"
      ]
    },
    "D": {
      "name": "World of Darkraft",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "dp",
        "games"
      ]
    },
    "C": {
      "name": "Mushroom Gnomes - 2",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "data structures",
        "probabilities",
        "sortings"
      ]
    },
    "B": {
      "name": "Digits Permutations",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Literature Lesson",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    }
  },
  "137": {
    "E": {
      "name": "Last Chance",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "data structures",
        "implementation",
        "strings"
      ]
    },
    "D": {
      "name": "Palindromes",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "dp",
        "strings"
      ]
    },
    "C": {
      "name": "History",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "sortings"
      ]
    },
    "B": {
      "name": "Permutation",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Postcards and photos",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "136": {
    "B": {
      "name": "Ternary Logic",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Presents",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "135": {
    "E": {
      "name": "Weak Subsequence",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "combinatorics"
      ]
    },
    "D": {
      "name": "Cycle",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "dfs and similar",
        "implementation"
      ]
    },
    "C": {
      "name": "Zero-One",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "games",
        "greedy"
      ]
    },
    "B": {
      "name": "Rectangle and Square",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "brute force",
        "geometry",
        "math"
      ]
    },
    "A": {
      "name": "Replacement",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    }
  },
  "134": {
    "C": {
      "name": "Swaps",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "graphs",
        "greedy"
      ]
    },
    "B": {
      "name": "Pairs of Numbers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "dfs and similar",
        "math",
        "number theory"
      ]
    },
    "A": {
      "name": "Average Numbers",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "133": {
    "B": {
      "name": "Unary",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "HQ9+",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "132": {
    "E": {
      "name": "Bits of merry old England",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "flows",
        "graphs"
      ]
    },
    "D": {
      "name": "Constants in the language of Shakespeare",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Logo Turtle",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Piet",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Turing Tape",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    }
  },
  "131": {
    "F": {
      "name": "Present to Mom",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "two pointers"
      ]
    },
    "E": {
      "name": "Yet Another Task with Queens",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 1700,
      "tags": [
        "sortings"
      ]
    },
    "D": {
      "name": "Subway",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "C": {
      "name": "The World is a Theatre",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1400,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "B": {
      "name": "Opposites Attract",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "cAPS lOCK",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "130": {
    "J": {
      "name": "Date calculation",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special"
      ]
    },
    "I": {
      "name": "Array sorting",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "*special",
        "sortings"
      ]
    },
    "H": {
      "name": "Balanced brackets",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "*special"
      ]
    },
    "G": {
      "name": "CAPS LOCK ON",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "*special"
      ]
    },
    "F": {
      "name": "Prime factorization",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "*special"
      ]
    },
    "E": {
      "name": "Tribonacci numbers",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "*special"
      ]
    },
    "D": {
      "name": "Exponentiation",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "*special"
      ]
    },
    "C": {
      "name": "Decimal sum",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "*special"
      ]
    },
    "B": {
      "name": "Gnikool Ssalg",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "*special",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Hexagonal numbers",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "*special",
        "implementation"
      ]
    }
  },
  "129": {
    "B": {
      "name": "Students and Shoelaces",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "dfs and similar",
        "graphs",
        "implementation"
      ]
    },
    "A": {
      "name": "Cookies",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "128": {
    "E": {
      "name": "Birthday",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "geometry",
        "math"
      ]
    },
    "D": {
      "name": "Numbers",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "C": {
      "name": "Games with Rectangle",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "B": {
      "name": "String",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "constructive algorithms",
        "hashing",
        "implementation",
        "string suffix structures",
        "strings"
      ]
    },
    "A": {
      "name": "Statues",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "dfs and similar"
      ]
    }
  },
  "127": {
    "B": {
      "name": "Canvas Frames",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Wasted Time",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "geometry"
      ]
    }
  },
  "126": {
    "E": {
      "name": "Pills",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "brute force",
        "flows"
      ]
    },
    "D": {
      "name": "Fibonacci Sums",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "dp",
        "math"
      ]
    },
    "C": {
      "name": "E-reader Display",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "B": {
      "name": "Password",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "dp",
        "hashing",
        "string suffix structures",
        "strings"
      ]
    },
    "A": {
      "name": "Hot Bath",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "brute force",
        "math"
      ]
    }
  },
  "125": {
    "E": {
      "name": "MST Company",
      "type": "PROGRAMMING",
      "points": 5000.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "graphs"
      ]
    },
    "D": {
      "name": "Two progressions",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "C": {
      "name": "Hobbits' Party",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "B": {
      "name": "Simple XML",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Measuring Lengths in Baden",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "math"
      ]
    }
  },
  "124": {
    "B": {
      "name": "Permutations",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "combinatorics",
        "implementation"
      ]
    },
    "A": {
      "name": "The number of positions",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "math"
      ]
    }
  },
  "123": {
    "E": {
      "name": "Maze",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "dfs and similar",
        "dp",
        "probabilities",
        "trees"
      ]
    },
    "D": {
      "name": "String",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "string suffix structures"
      ]
    },
    "C": {
      "name": "Brackets",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "combinatorics",
        "dp",
        "greedy"
      ]
    },
    "B": {
      "name": "Squares",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Prime Permutation",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "implementation",
        "number theory",
        "strings"
      ]
    }
  },
  "122": {
    "B": {
      "name": "Lucky Substring",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Lucky Division",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "number theory"
      ]
    }
  },
  "121": {
    "E": {
      "name": "Lucky Array",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Lucky Segments",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "binary search",
        "implementation",
        "two pointers"
      ]
    },
    "C": {
      "name": "Lucky Permutation",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "combinatorics",
        "number theory"
      ]
    },
    "B": {
      "name": "Lucky Transformation",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "strings"
      ]
    },
    "A": {
      "name": "Lucky Sum",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    }
  },
  "120": {
    "J": {
      "name": "Minimum Sum",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "divide and conquer",
        "geometry",
        "sortings"
      ]
    },
    "I": {
      "name": "Luck is in Numbers",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "greedy"
      ]
    },
    "H": {
      "name": "Brevity is Soul of Wit",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "graph matchings"
      ]
    },
    "G": {
      "name": "Boom",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "implementation"
      ]
    },
    "F": {
      "name": "Spiders",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "dp",
        "greedy",
        "trees"
      ]
    },
    "E": {
      "name": "Put Knight!",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "games",
        "math"
      ]
    },
    "D": {
      "name": "Three Sons",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "brute force"
      ]
    },
    "C": {
      "name": "Winnie-the-Pooh and honey",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Quiz League",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Elevator",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    }
  },
  "119": {
    "E": {
      "name": "Alternative Reality",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "geometry"
      ]
    },
    "D": {
      "name": "String Transformation",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "hashing",
        "strings"
      ]
    },
    "C": {
      "name": "Education Reform",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Before Exam",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Epic Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "118": {
    "E": {
      "name": "Bertown roads",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "D": {
      "name": "Caesar's Legions",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Fancy Number",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "greedy",
        "sortings",
        "strings"
      ]
    },
    "B": {
      "name": "Present from Lena",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "String Task",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "117": {
    "E": {
      "name": "Tree or not Tree",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "data structures",
        "divide and conquer",
        "implementation",
        "trees"
      ]
    },
    "D": {
      "name": "Not Quick Transformation",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "divide and conquer",
        "math"
      ]
    },
    "C": {
      "name": "Cycle",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "B": {
      "name": "Very Interesting Game",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "number theory"
      ]
    },
    "A": {
      "name": "Elevator",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "116": {
    "B": {
      "name": "Little Pigs and Wolves",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Tram",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "115": {
    "E": {
      "name": "Linear Kingdom Races",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "D": {
      "name": "Unambiguous Arithmetic Expression",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "dp",
        "expression parsing"
      ]
    },
    "C": {
      "name": "Plumber",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "math"
      ]
    },
    "B": {
      "name": "Lawnmower",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Party",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "dfs and similar",
        "graphs",
        "trees"
      ]
    }
  },
  "114": {
    "B": {
      "name": "PFAST Inc.",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "bitmasks",
        "brute force",
        "graphs"
      ]
    },
    "A": {
      "name": "Cifera",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "math"
      ]
    }
  },
  "113": {
    "E": {
      "name": "Sleeping",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "combinatorics",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Museum",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "math",
        "matrices",
        "probabilities"
      ]
    },
    "C": {
      "name": "Double Happiness",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Petr#",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "data structures",
        "hashing",
        "strings"
      ]
    },
    "A": {
      "name": "Grammar Lessons",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "112": {
    "B": {
      "name": "Petya and Square",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Petya and Strings",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "111": {
    "E": {
      "name": "Petya and Rectangle",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": []
    },
    "D": {
      "name": "Petya and Coloring",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "C": {
      "name": "Petya and Spiders",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "bitmasks",
        "dp",
        "dsu"
      ]
    },
    "B": {
      "name": "Petya and Divisors",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "data structures",
        "number theory"
      ]
    },
    "A": {
      "name": "Petya and Inequiations",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "greedy"
      ]
    }
  },
  "110": {
    "B": {
      "name": "Lucky String",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "constructive algorithms",
        "strings"
      ]
    },
    "A": {
      "name": "Nearly Lucky Number",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "109": {
    "E": {
      "name": "Lucky Interval",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "brute force",
        "math"
      ]
    },
    "D": {
      "name": "Lucky Sorting",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "sortings"
      ]
    },
    "C": {
      "name": "Lucky Tree",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "dp",
        "dsu",
        "trees"
      ]
    },
    "B": {
      "name": "Lucky Probability",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "brute force",
        "probabilities"
      ]
    },
    "A": {
      "name": "Lucky Sum of Digits",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "108": {
    "B": {
      "name": "Datatypes",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Palindromic Times",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "107": {
    "E": {
      "name": "Darts",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "geometry",
        "probabilities"
      ]
    },
    "D": {
      "name": "Crime Management",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "dp",
        "graphs",
        "matrices"
      ]
    },
    "C": {
      "name": "Arrangement",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "B": {
      "name": "Basketball Team",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "combinatorics",
        "dp",
        "math",
        "probabilities"
      ]
    },
    "A": {
      "name": "Dorm Water Supply",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    }
  },
  "106": {
    "E": {
      "name": "Space Rescuers",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "geometry",
        "ternary search"
      ]
    },
    "D": {
      "name": "Treasure Island",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "C": {
      "name": "Buns",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Choosing Laptop",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Card Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "105": {
    "E": {
      "name": "Lift and Throw",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "brute force"
      ]
    },
    "D": {
      "name": "Entertaining Geodetics",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "brute force",
        "dsu",
        "implementation"
      ]
    },
    "C": {
      "name": "Item World",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Dark Assembly",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "probabilities"
      ]
    },
    "A": {
      "name": "Transmigration",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "implementation"
      ]
    }
  },
  "104": {
    "A": {
      "name": "Blackjack",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "103": {
    "E": {
      "name": "Buying Sets",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "flows",
        "graph matchings"
      ]
    },
    "D": {
      "name": "Time to Raid Cowavans",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "data structures",
        "sortings"
      ]
    },
    "C": {
      "name": "Russian Roulette",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "B": {
      "name": "Cthulhu",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "A": {
      "name": "Testing Pants for Sadness",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "greedy",
        "implementation",
        "math"
      ]
    }
  },
  "102": {
    "B": {
      "name": "Sum of Digits",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Clothes",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "brute force"
      ]
    }
  },
  "101": {
    "E": {
      "name": "Candies and Stones",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "divide and conquer",
        "dp"
      ]
    },
    "D": {
      "name": "Castle",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "dp",
        "greedy",
        "probabilities",
        "sortings",
        "trees"
      ]
    },
    "C": {
      "name": "Vectors",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Buses",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "data structures",
        "dp"
      ]
    },
    "A": {
      "name": "Homework",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "greedy"
      ]
    }
  },
  "100": {
    "J": {
      "name": "Interval Coloring",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "*special",
        "greedy",
        "math"
      ]
    },
    "I": {
      "name": "Rotation",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "*special",
        "geometry",
        "math"
      ]
    },
    "H": {
      "name": "Battleship",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "*special",
        "dfs and similar",
        "implementation"
      ]
    },
    "G": {
      "name": "Name the album",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special",
        "data structures",
        "implementation"
      ]
    },
    "F": {
      "name": "Polynom",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "E": {
      "name": "Lamps in a Line",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "*special",
        "math"
      ]
    },
    "D": {
      "name": "World of Mouth",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "*special",
        "strings"
      ]
    },
    "C": {
      "name": "A+B",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "B": {
      "name": "Friendly Numbers",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "A": {
      "name": "Carpeting the Room",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "*special",
        "implementation"
      ]
    }
  },
  "99": {
    "B": {
      "name": "Help Chef Gerasim",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Help Far Away Kingdom",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "strings"
      ]
    }
  },
  "98": {
    "E": {
      "name": "Help Shrek and Donkey",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "dp",
        "games",
        "math",
        "probabilities"
      ]
    },
    "D": {
      "name": "Help Monks",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "constructive algorithms"
      ]
    },
    "C": {
      "name": "Help Greg the Dwarf",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "geometry",
        "ternary search"
      ]
    },
    "B": {
      "name": "Help King",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2200,
      "tags": [
        "implementation",
        "probabilities",
        "trees"
      ]
    },
    "A": {
      "name": "Help Victoria the Wise",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "97": {
    "E": {
      "name": "Leaders",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "trees"
      ]
    },
    "D": {
      "name": "Robot in Basement",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "bitmasks",
        "brute force",
        "implementation"
      ]
    },
    "C": {
      "name": "Winning Strategy",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "graphs",
        "math",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Superset",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "divide and conquer"
      ]
    },
    "A": {
      "name": "Domino",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 2400,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "96": {
    "B": {
      "name": "Lucky Numbers (easy)",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "binary search",
        "bitmasks",
        "brute force"
      ]
    },
    "A": {
      "name": "Football",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "95": {
    "E": {
      "name": "Lucky Country",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "dp",
        "dsu",
        "graphs"
      ]
    },
    "D": {
      "name": "Horse Races",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "dp",
        "math"
      ]
    },
    "C": {
      "name": "Volleyball",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "shortest paths"
      ]
    },
    "B": {
      "name": "Lucky Numbers",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "A": {
      "name": "Hockey",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "94": {
    "B": {
      "name": "Friends",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "graphs",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Restoring Password",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "93": {
    "E": {
      "name": "Lostborn",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "dp",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Flags",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "dp",
        "math",
        "matrices"
      ]
    },
    "C": {
      "name": "Azembler",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "B": {
      "name": "End of Exams",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1900,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Frames",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "implementation"
      ]
    }
  },
  "92": {
    "B": {
      "name": "Binary Number",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Chips",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "91": {
    "E": {
      "name": "Igloo Skyscraper",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "geometry"
      ]
    },
    "D": {
      "name": "Grocer's Problem",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "constructive algorithms",
        "graphs",
        "greedy"
      ]
    },
    "C": {
      "name": "Ski Base",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "combinatorics",
        "dsu",
        "graphs"
      ]
    },
    "B": {
      "name": "Queue",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "binary search",
        "data structures"
      ]
    },
    "A": {
      "name": "Newspaper Headline",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "greedy",
        "strings"
      ]
    }
  },
  "90": {
    "B": {
      "name": "African Crossword",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Cableway",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "89": {
    "E": {
      "name": "Fire and Ice",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "greedy"
      ]
    },
    "D": {
      "name": "Space mines",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2500,
      "tags": [
        "geometry"
      ]
    },
    "C": {
      "name": "Chip Play",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "data structures",
        "implementation"
      ]
    },
    "B": {
      "name": "Widget Library",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2300,
      "tags": [
        "dp",
        "expression parsing",
        "graphs",
        "implementation"
      ]
    },
    "A": {
      "name": "Robbery",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "greedy"
      ]
    }
  },
  "88": {
    "B": {
      "name": "Keyboard",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Chord",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "87": {
    "E": {
      "name": "Mogohu-Rea Idol",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "geometry"
      ]
    },
    "D": {
      "name": "Beautiful Road",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "dfs and similar",
        "dp",
        "dsu",
        "graphs",
        "implementation",
        "sortings",
        "trees"
      ]
    },
    "C": {
      "name": "Interesting Game",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "dp",
        "games",
        "math"
      ]
    },
    "B": {
      "name": "Vasya and Types",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Trains",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1500,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "86": {
    "E": {
      "name": "Long sequence",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "brute force",
        "math",
        "matrices"
      ]
    },
    "D": {
      "name": "Powerful array",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "implementation",
        "math",
        "two pointers"
      ]
    },
    "C": {
      "name": "Genetic engineering",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "dp",
        "string suffix structures",
        "trees"
      ]
    },
    "B": {
      "name": "Tetris revisited",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2200,
      "tags": [
        "constructive algorithms",
        "graph matchings",
        "greedy",
        "math"
      ]
    },
    "A": {
      "name": "Reflection",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "math"
      ]
    }
  },
  "85": {
    "E": {
      "name": "Guard Towers",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "binary search",
        "dsu",
        "geometry",
        "graphs",
        "sortings"
      ]
    },
    "D": {
      "name": "Sum of Medians",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "brute force",
        "data structures",
        "implementation"
      ]
    },
    "C": {
      "name": "Petya and Tree",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "dfs and similar",
        "probabilities",
        "sortings",
        "trees"
      ]
    },
    "B": {
      "name": "Embassy Queue",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "data structures",
        "greedy"
      ]
    },
    "A": {
      "name": "Domino",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    }
  },
  "84": {
    "C": {
      "name": "Biathlon",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "implementation"
      ]
    },
    "A": {
      "name": "Toy Army",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "math",
        "number theory"
      ]
    }
  },
  "83": {
    "E": {
      "name": "Two Subsequences",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "D": {
      "name": "Numbers",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "dp",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Track",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "graphs",
        "greedy",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Doctor",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "math",
        "sortings"
      ]
    },
    "A": {
      "name": "Magical Array",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "math"
      ]
    }
  },
  "82": {
    "E": {
      "name": "Corridor",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "geometry"
      ]
    },
    "D": {
      "name": "Two out of Three",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "General Mobilization",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "data structures",
        "dfs and similar",
        "sortings"
      ]
    },
    "B": {
      "name": "Sets",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "hashing",
        "implementation"
      ]
    },
    "A": {
      "name": "Double Cola",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "81": {
    "E": {
      "name": "Pairs",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "dfs and similar",
        "dp",
        "dsu",
        "graphs",
        "implementation",
        "trees"
      ]
    },
    "D": {
      "name": "Polycarp's Picture Gallery",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "C": {
      "name": "Average Score",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "greedy",
        "math",
        "sortings"
      ]
    },
    "B": {
      "name": "Sequence Formatting",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Plug-in",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "implementation"
      ]
    }
  },
  "80": {
    "B": {
      "name": "Depression",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "geometry",
        "math"
      ]
    },
    "A": {
      "name": "Panoramix's Prediction",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force"
      ]
    }
  },
  "79": {
    "E": {
      "name": "Security System",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "math"
      ]
    },
    "D": {
      "name": "Password",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2800,
      "tags": [
        "bitmasks",
        "dp",
        "shortest paths"
      ]
    },
    "C": {
      "name": "Beaver",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "hashing",
        "strings",
        "two pointers"
      ]
    },
    "B": {
      "name": "Colorful Field",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Bus Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "greedy"
      ]
    }
  },
  "78": {
    "E": {
      "name": "Evacuation",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "flows",
        "graphs",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Archer's Shot",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "binary search",
        "geometry",
        "math",
        "two pointers"
      ]
    },
    "C": {
      "name": "Beaver Game",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "dp",
        "games",
        "number theory"
      ]
    },
    "B": {
      "name": "Easter Eggs",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "implementation"
      ]
    },
    "A": {
      "name": "Haiku",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "77": {
    "E": {
      "name": "Martian Food",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2800,
      "tags": [
        "geometry"
      ]
    },
    "D": {
      "name": "Domino Carpet",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "dp",
        "implementation"
      ]
    },
    "C": {
      "name": "Beavermuncher-0xFF",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "dfs and similar",
        "dp",
        "dsu",
        "greedy",
        "trees"
      ]
    },
    "B": {
      "name": "Falling Anvils",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "math",
        "probabilities"
      ]
    },
    "A": {
      "name": "Heroes",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "76": {
    "F": {
      "name": "Tourist",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "binary search",
        "data structures",
        "dp"
      ]
    },
    "E": {
      "name": "Points",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Plus and xor",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "dp",
        "greedy",
        "math"
      ]
    },
    "C": {
      "name": "Mutation",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "bitmasks",
        "dp",
        "math"
      ]
    },
    "B": {
      "name": "Mice",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "greedy",
        "two pointers"
      ]
    },
    "A": {
      "name": "Gift",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "dsu",
        "graphs",
        "sortings",
        "trees"
      ]
    }
  },
  "75": {
    "E": {
      "name": "Ship's Shortest Path",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "geometry",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Big Maximum Sum",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "data structures",
        "dp",
        "greedy",
        "implementation",
        "math",
        "trees"
      ]
    },
    "C": {
      "name": "Modified GCD",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "binary search",
        "number theory"
      ]
    },
    "B": {
      "name": "Facetook Priority Wall",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "expression parsing",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Life Without Zeros",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "74": {
    "E": {
      "name": "Shift It!",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "constructive algorithms"
      ]
    },
    "D": {
      "name": "Hanger",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "data structures"
      ]
    },
    "C": {
      "name": "Chessboard Billiard",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "number theory"
      ]
    },
    "B": {
      "name": "Train",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "dp",
        "games",
        "greedy"
      ]
    },
    "A": {
      "name": "Room Leader",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "73": {
    "F": {
      "name": "Plane of Tanks",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2900,
      "tags": [
        "brute force",
        "geometry"
      ]
    },
    "E": {
      "name": "Morrowindows",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2400,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "FreeDiv",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "dfs and similar",
        "graphs",
        "greedy"
      ]
    },
    "C": {
      "name": "LionAge II",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Need For Brake",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "The Elder Trolls IV: Oblivon",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "72": {
    "I": {
      "name": "Goofy Numbers",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "H": {
      "name": "Reverse It!",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "G": {
      "name": "Fibonacci army",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "*special",
        "dp"
      ]
    },
    "F": {
      "name": "Oil",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "*special",
        "greedy",
        "math"
      ]
    },
    "E": {
      "name": "Ali goes shopping",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special",
        "brute force",
        "strings"
      ]
    },
    "D": {
      "name": "Perse-script",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "*special",
        "expression parsing"
      ]
    },
    "C": {
      "name": "Extraordinarily Nice Numbers",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "*special",
        "math"
      ]
    },
    "B": {
      "name": "INI-file",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "*special",
        "implementation"
      ]
    },
    "A": {
      "name": "Goshtasp, Vishtasp and Eidi",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special",
        "greedy",
        "math"
      ]
    }
  },
  "71": {
    "E": {
      "name": "Nuclear Fusion",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "D": {
      "name": "Solitaire",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "C": {
      "name": "Round Table Knights",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "dp",
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Progress Bar",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Way Too Long Words",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "strings"
      ]
    }
  },
  "70": {
    "E": {
      "name": "Information Reform",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "dp",
        "implementation",
        "trees"
      ]
    },
    "D": {
      "name": "Professor's task",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2700,
      "tags": [
        "data structures",
        "geometry"
      ]
    },
    "C": {
      "name": "Lucky Tickets",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "data structures",
        "sortings",
        "two pointers"
      ]
    },
    "B": {
      "name": "Text Messaging",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "expression parsing",
        "greedy",
        "strings"
      ]
    },
    "A": {
      "name": "Cookies",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "math"
      ]
    }
  },
  "69": {
    "E": {
      "name": "Subsegments",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 1800,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "D": {
      "name": "Dot",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "dp",
        "games"
      ]
    },
    "C": {
      "name": "Game",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "implementation"
      ]
    },
    "B": {
      "name": "Bets",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Young Physicist",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "68": {
    "E": {
      "name": "Contact",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "geometry"
      ]
    },
    "D": {
      "name": "Half-decay tree",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "data structures",
        "divide and conquer",
        "dp",
        "math",
        "probabilities"
      ]
    },
    "C": {
      "name": "Synchrophasotron",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "brute force"
      ]
    },
    "B": {
      "name": "Energy exchange",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "binary search"
      ]
    },
    "A": {
      "name": "Irrational problem",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "implementation",
        "number theory"
      ]
    }
  },
  "67": {
    "E": {
      "name": "Save the City!",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "geometry"
      ]
    },
    "D": {
      "name": "Optical Experiment",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "binary search",
        "data structures",
        "dp"
      ]
    },
    "C": {
      "name": "Sequence of Balls",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2600,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Restoration of the Permutation",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Partial Teacher",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "dp",
        "graphs",
        "greedy",
        "implementation"
      ]
    }
  },
  "66": {
    "E": {
      "name": "Petya and Post",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "D": {
      "name": "Petya and His Friends",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "math",
        "number theory"
      ]
    },
    "C": {
      "name": "Petya and File System",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "B": {
      "name": "Petya and Countryside",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Petya and Java",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "65": {
    "E": {
      "name": "Harry Potter and Moving Staircases",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2900,
      "tags": [
        "dfs and similar",
        "implementation"
      ]
    },
    "D": {
      "name": "Harry Potter and the Sorting Hat",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "dfs and similar",
        "hashing"
      ]
    },
    "C": {
      "name": "Harry Potter and the Golden Snitch",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "geometry"
      ]
    },
    "B": {
      "name": "Harry Potter and the History of Magic",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Harry Potter and Three Spells",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1800,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "64": {
    "I": {
      "name": "Sort the Table",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "*special",
        "sortings"
      ]
    },
    "H": {
      "name": "Table Bowling",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "*special",
        "sortings"
      ]
    },
    "G": {
      "name": "Path Canonization",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "*special"
      ]
    },
    "F": {
      "name": "Domain",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "*special",
        "expression parsing"
      ]
    },
    "E": {
      "name": "Prime Segment",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special",
        "brute force",
        "math",
        "number theory"
      ]
    },
    "D": {
      "name": "Presents",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "*special",
        "greedy"
      ]
    },
    "C": {
      "name": "Table",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "*special",
        "greedy",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Expression",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "*special",
        "expression parsing"
      ]
    },
    "A": {
      "name": "Factorial",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "*special",
        "implementation"
      ]
    }
  },
  "63": {
    "E": {
      "name": "Sweets Game",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "bitmasks",
        "dfs and similar",
        "dp",
        "games",
        "implementation"
      ]
    },
    "D": {
      "name": "Dividing Island",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms"
      ]
    },
    "C": {
      "name": "Bulls and Cows",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "B": {
      "name": "Settlers' Training",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Sinking Ship",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation",
        "sortings",
        "strings"
      ]
    }
  },
  "62": {
    "E": {
      "name": "World Evil",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "dp",
        "flows"
      ]
    },
    "D": {
      "name": "Wormhouse",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "C": {
      "name": "Inquisition",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "geometry",
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Tyndex.Brome",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "implementation"
      ]
    },
    "A": {
      "name": "A Student's Dream",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "61": {
    "E": {
      "name": "Enemy is weak",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "trees"
      ]
    },
    "D": {
      "name": "Eternal Victory",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "dfs and similar",
        "graphs",
        "greedy",
        "shortest paths",
        "trees"
      ]
    },
    "C": {
      "name": "Capture Valerian",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "math"
      ]
    },
    "B": {
      "name": "Hard Work",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "strings"
      ]
    },
    "A": {
      "name": "Ultra-Fast Mathematician",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "60": {
    "E": {
      "name": "Mushroom Gnomes",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "math",
        "matrices"
      ]
    },
    "D": {
      "name": "Savior",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "brute force",
        "dsu",
        "math"
      ]
    },
    "C": {
      "name": "Mushroom Strife",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "dfs and similar"
      ]
    },
    "B": {
      "name": "Serial Time!",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "dfs and similar",
        "dsu"
      ]
    },
    "A": {
      "name": "Where Are My Flakes?",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "implementation",
        "two pointers"
      ]
    }
  },
  "59": {
    "E": {
      "name": "Shortest Path",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "graphs",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Team Arrangement",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "C": {
      "name": "Title",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1600,
      "tags": [
        "expression parsing"
      ]
    },
    "B": {
      "name": "Fortune Telling",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "implementation",
        "number theory"
      ]
    },
    "A": {
      "name": "Word",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "58": {
    "E": {
      "name": "Expression",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "dp"
      ]
    },
    "D": {
      "name": "Calendar",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "greedy",
        "strings"
      ]
    },
    "C": {
      "name": "Trees",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "brute force"
      ]
    },
    "B": {
      "name": "Coins",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Chat room",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "greedy",
        "strings"
      ]
    }
  },
  "57": {
    "E": {
      "name": "Chess",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 3000,
      "tags": [
        "math",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Journey",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "dp",
        "math"
      ]
    },
    "C": {
      "name": "Array",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "combinatorics",
        "math"
      ]
    },
    "B": {
      "name": "Martian Architecture",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Square Earth?",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "dfs and similar",
        "greedy",
        "implementation"
      ]
    }
  },
  "56": {
    "E": {
      "name": "Domino Principle",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "binary search",
        "data structures",
        "sortings"
      ]
    },
    "D": {
      "name": "Changing a String",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Corporation Mail",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "data structures",
        "expression parsing",
        "implementation"
      ]
    },
    "B": {
      "name": "Spoilt Permutation",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Bar",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "55": {
    "E": {
      "name": "Very simple problem",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "geometry",
        "two pointers"
      ]
    },
    "D": {
      "name": "Beautiful numbers",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2500,
      "tags": [
        "dp",
        "number theory"
      ]
    },
    "C": {
      "name": "Pie or die",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "games"
      ]
    },
    "B": {
      "name": "Smallest number",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "brute force"
      ]
    },
    "A": {
      "name": "Flea travel",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "54": {
    "E": {
      "name": "Vacuum \u0421leaner",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "geometry"
      ]
    },
    "D": {
      "name": "Writing a Song",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "brute force",
        "dp",
        "strings"
      ]
    },
    "C": {
      "name": "First Digit Law",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "dp",
        "math",
        "probabilities"
      ]
    },
    "B": {
      "name": "Cutting Jigsaw Puzzle",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "hashing",
        "implementation"
      ]
    },
    "A": {
      "name": "Presents",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    }
  },
  "53": {
    "E": {
      "name": "Dead Ends",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "D": {
      "name": "Physical Education",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1500,
      "tags": [
        "sortings"
      ]
    },
    "C": {
      "name": "Little Frog",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1200,
      "tags": [
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Blog Photo",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "binary search",
        "implementation"
      ]
    },
    "A": {
      "name": "Autocomplete",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    }
  },
  "52": {
    "C": {
      "name": "Circular RMQ",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "data structures"
      ]
    },
    "B": {
      "name": "Right Triangles",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "combinatorics"
      ]
    },
    "A": {
      "name": "123-sequence",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "51": {
    "F": {
      "name": "Caterpillar",
      "type": "PROGRAMMING",
      "points": 3000.0,
      "rating": 2800,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
      ]
    },
    "E": {
      "name": "Pentagon",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "combinatorics",
        "graphs",
        "matrices"
      ]
    },
    "D": {
      "name": "Geometrical problem",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "implementation"
      ]
    },
    "C": {
      "name": "Three Base Stations",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "binary search",
        "greedy"
      ]
    },
    "B": {
      "name": "bHTML Tables Analisys",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "expression parsing"
      ]
    },
    "A": {
      "name": "Cheaterius's Problem",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    }
  },
  "50": {
    "E": {
      "name": "Square Equation Roots",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "math"
      ]
    },
    "D": {
      "name": "Bombing",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2100,
      "tags": [
        "binary search",
        "dp",
        "probabilities"
      ]
    },
    "C": {
      "name": "Happy Farm 5",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "geometry"
      ]
    },
    "B": {
      "name": "Choosing Symbol Pairs",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "strings"
      ]
    },
    "A": {
      "name": "Domino piling",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "greedy",
        "math"
      ]
    }
  },
  "49": {
    "E": {
      "name": "Common ancestor",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "dp"
      ]
    },
    "D": {
      "name": "Game",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1800,
      "tags": [
        "brute force",
        "dp",
        "implementation"
      ]
    },
    "C": {
      "name": "Disposition",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "B": {
      "name": "Sum",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Sleuth",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "48": {
    "H": {
      "name": "Black and White",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "constructive algorithms"
      ]
    },
    "G": {
      "name": "Galaxy Union",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "dp",
        "trees",
        "two pointers"
      ]
    },
    "F": {
      "name": "Snow sellers",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "E": {
      "name": "Ivan the Fool VS Gorynych the Dragon",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dp",
        "games",
        "graphs"
      ]
    },
    "D": {
      "name": "Permutations",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "greedy"
      ]
    },
    "C": {
      "name": "The Race",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "math"
      ]
    },
    "B": {
      "name": "Land Lot",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "brute force",
        "implementation"
      ]
    },
    "A": {
      "name": "Rock-paper-scissors",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "implementation",
        "schedules"
      ]
    }
  },
  "47": {
    "E": {
      "name": "Cannon",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2200,
      "tags": [
        "data structures",
        "geometry",
        "sortings"
      ]
    },
    "D": {
      "name": "Safe",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "brute force"
      ]
    },
    "C": {
      "name": "Crossword",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "implementation"
      ]
    },
    "B": {
      "name": "Coins",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Triangular numbers",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force",
        "math"
      ]
    }
  },
  "46": {
    "G": {
      "name": "Emperor's Problem",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "geometry"
      ]
    },
    "F": {
      "name": "Hercule Poirot Problem",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "dsu",
        "graphs"
      ]
    },
    "E": {
      "name": "Comb",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "data structures",
        "dp"
      ]
    },
    "D": {
      "name": "Parking Lot",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "C": {
      "name": "Hamsters and Tigers",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "two pointers"
      ]
    },
    "B": {
      "name": "T-shirts from Sponsor",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Ball Game",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "implementation"
      ]
    }
  },
  "45": {
    "J": {
      "name": "Planting Trees",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "constructive algorithms"
      ]
    },
    "I": {
      "name": "TCMCF+++",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "greedy"
      ]
    },
    "H": {
      "name": "Road Problem",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "graphs"
      ]
    },
    "G": {
      "name": "Prime Problem",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "number theory"
      ]
    },
    "F": {
      "name": "Goats and Wolves",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "greedy"
      ]
    },
    "E": {
      "name": "Director",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "D": {
      "name": "Event Dates",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "greedy",
        "meet-in-the-middle",
        "sortings"
      ]
    },
    "C": {
      "name": "Dancing Lessons",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "data structures"
      ]
    },
    "B": {
      "name": "School",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "dp",
        "dsu"
      ]
    },
    "A": {
      "name": "Codecraft III",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "44": {
    "J": {
      "name": "Triminoes",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "I": {
      "name": "Toys",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "brute force",
        "combinatorics"
      ]
    },
    "H": {
      "name": "Phone Number",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "dp"
      ]
    },
    "G": {
      "name": "Shooting Gallery",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "F": {
      "name": "BerPaint",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "geometry",
        "graphs"
      ]
    },
    "E": {
      "name": "Anfisa the Monkey",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "dp"
      ]
    },
    "D": {
      "name": "Hyperdrive",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "math"
      ]
    },
    "C": {
      "name": "Holidays",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "B": {
      "name": "Cola",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Indian Summer",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "43": {
    "E": {
      "name": "Race",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2300,
      "tags": [
        "brute force",
        "implementation",
        "two pointers"
      ]
    },
    "D": {
      "name": "Journey",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "constructive algorithms",
        "implementation"
      ]
    },
    "C": {
      "name": "Lucky Tickets",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "Letter",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1100,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Football",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "strings"
      ]
    }
  },
  "42": {
    "E": {
      "name": "Baldman and the military",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2700,
      "tags": [
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "D": {
      "name": "Strange town",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "constructive algorithms",
        "math"
      ]
    },
    "C": {
      "name": "Safe cracking",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "brute force",
        "constructive algorithms"
      ]
    },
    "B": {
      "name": "Game of chess unfinished",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Guilty --- to the kitchen!",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "41": {
    "E": {
      "name": "3-cycles",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "graphs",
        "greedy"
      ]
    },
    "D": {
      "name": "Pawn",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1900,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Email address",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "expression parsing",
        "implementation"
      ]
    },
    "B": {
      "name": "Martian Dollar",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "brute force"
      ]
    },
    "A": {
      "name": "Translation",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "40": {
    "E": {
      "name": "Number Table",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2500,
      "tags": [
        "combinatorics"
      ]
    },
    "D": {
      "name": "Interesting Sequence",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "math"
      ]
    },
    "C": {
      "name": "Berland Square",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2300,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Repaintings",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Find Color",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "constructive algorithms",
        "geometry",
        "implementation",
        "math"
      ]
    }
  },
  "39": {
    "K": {
      "name": "Testing",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": []
    },
    "J": {
      "name": "Spelling Check",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "hashing",
        "implementation",
        "strings"
      ]
    },
    "I": {
      "name": "Tram",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": []
    },
    "H": {
      "name": "Multiplication Table",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "G": {
      "name": "Inverse Function",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "implementation"
      ]
    },
    "F": {
      "name": "Pacifist frogs",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    },
    "E": {
      "name": "What Has Dirichlet Got to Do with That?",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "dp",
        "games"
      ]
    },
    "D": {
      "name": "Cubical Planet",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "math"
      ]
    },
    "C": {
      "name": "Moon Craters",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dp",
        "sortings"
      ]
    },
    "B": {
      "name": "Company Income Growth",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "C*++ Calculations",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "expression parsing",
        "greedy"
      ]
    }
  },
  "38": {
    "H": {
      "name": "The Great Marathon",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "dp"
      ]
    },
    "G": {
      "name": "Queue",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "data structures"
      ]
    },
    "F": {
      "name": "Smart Boy",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "dp",
        "games",
        "strings"
      ]
    },
    "E": {
      "name": "Let's Go Rolling!",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "dp",
        "sortings"
      ]
    },
    "D": {
      "name": "Vasya the Architect",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "implementation"
      ]
    },
    "C": {
      "name": "Blinds",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "brute force"
      ]
    },
    "B": {
      "name": "Chess",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Army",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "37": {
    "E": {
      "name": "Trial for Chief",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "graphs",
        "greedy",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Lesson Timetable",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "combinatorics",
        "dp",
        "math"
      ]
    },
    "C": {
      "name": "Old Berland Language",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "data structures",
        "greedy",
        "trees"
      ]
    },
    "B": {
      "name": "Computer Game",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "greedy",
        "implementation"
      ]
    },
    "A": {
      "name": "Towers",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "sortings"
      ]
    }
  },
  "36": {
    "E": {
      "name": "Two Paths",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": [
        "constructive algorithms",
        "dsu",
        "graphs",
        "implementation"
      ]
    },
    "D": {
      "name": "New Game with a Chess Piece",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2300,
      "tags": [
        "games"
      ]
    },
    "C": {
      "name": "Bowls",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "geometry",
        "implementation"
      ]
    },
    "B": {
      "name": "Fractal",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Extra-terrestrial Intelligence",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1300,
      "tags": [
        "implementation"
      ]
    }
  },
  "35": {
    "E": {
      "name": "Parade",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2100,
      "tags": [
        "data structures",
        "sortings"
      ]
    },
    "D": {
      "name": "Animals",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1700,
      "tags": [
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Fire Again",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1500,
      "tags": [
        "brute force",
        "dfs and similar",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Warehouse",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Shell Game",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "34": {
    "E": {
      "name": "Collisions",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    },
    "D": {
      "name": "Road Map",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "graphs"
      ]
    },
    "C": {
      "name": "Page Numbers",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1300,
      "tags": [
        "expression parsing",
        "implementation",
        "sortings",
        "strings"
      ]
    },
    "B": {
      "name": "Sale",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 900,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Reconnaissance 2",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "33": {
    "E": {
      "name": "Helper",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2600,
      "tags": []
    },
    "D": {
      "name": "Knights",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "geometry",
        "graphs",
        "shortest paths",
        "sortings"
      ]
    },
    "C": {
      "name": "Wonderful Randomized Sum",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "greedy"
      ]
    },
    "B": {
      "name": "String Problem",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1800,
      "tags": [
        "shortest paths"
      ]
    },
    "A": {
      "name": "What is for dinner?",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "greedy",
        "implementation"
      ]
    }
  },
  "32": {
    "E": {
      "name": "Hide-and-Seek",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "geometry",
        "implementation"
      ]
    },
    "D": {
      "name": "Constellation",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    },
    "C": {
      "name": "Flea",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "math"
      ]
    },
    "B": {
      "name": "Borze",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 800,
      "tags": [
        "expression parsing",
        "implementation"
      ]
    },
    "A": {
      "name": "Reconnaissance",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 800,
      "tags": [
        "brute force"
      ]
    }
  },
  "31": {
    "E": {
      "name": "TV Game",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "dp"
      ]
    },
    "D": {
      "name": "Chocolate",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "dfs and similar",
        "implementation"
      ]
    },
    "C": {
      "name": "Schedule",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "implementation"
      ]
    },
    "B": {
      "name": "Sysadmin Bob",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "greedy",
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Worms Evolution",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "implementation"
      ]
    }
  },
  "30": {
    "E": {
      "name": "Tricky and Clever Password",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "greedy",
        "hashing",
        "strings"
      ]
    },
    "D": {
      "name": "King's Problem?",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2600,
      "tags": [
        "geometry",
        "greedy"
      ]
    },
    "C": {
      "name": "Shooting Gallery",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1800,
      "tags": [
        "dp",
        "probabilities"
      ]
    },
    "B": {
      "name": "Codeforces World Finals",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1700,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Accounting",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1400,
      "tags": [
        "brute force",
        "math"
      ]
    }
  },
  "29": {
    "E": {
      "name": "Quarrel",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "graphs",
        "shortest paths"
      ]
    },
    "D": {
      "name": "Ant on the Tree",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2000,
      "tags": [
        "constructive algorithms",
        "dfs and similar",
        "trees"
      ]
    },
    "C": {
      "name": "Mail Stamps",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1700,
      "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "implementation"
      ]
    },
    "B": {
      "name": "Traffic Lights",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1500,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Spit Problem",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1000,
      "tags": [
        "brute force"
      ]
    }
  },
  "28": {
    "E": {
      "name": "DravDe saves the world",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2800,
      "tags": [
        "geometry",
        "math"
      ]
    },
    "D": {
      "name": "Don't fear, DravDe is kind",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "binary search",
        "data structures",
        "dp",
        "hashing"
      ]
    },
    "C": {
      "name": "Bath Queue",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2200,
      "tags": [
        "combinatorics",
        "dp",
        "probabilities"
      ]
    },
    "B": {
      "name": "pSort",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1600,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "A": {
      "name": "Bender Problem",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    }
  },
  "27": {
    "E": {
      "name": "Number With The Given Amount Of Divisors",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2000,
      "tags": [
        "brute force",
        "dp",
        "number theory"
      ]
    },
    "D": {
      "name": "Ring Road 2",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2200,
      "tags": [
        "2-sat",
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "C": {
      "name": "Unordered Subsequence",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "B": {
      "name": "Tournament",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1300,
      "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar",
        "greedy"
      ]
    },
    "A": {
      "name": "Next Test",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1200,
      "tags": [
        "implementation",
        "sortings"
      ]
    }
  },
  "26": {
    "E": {
      "name": "Multithreading",
      "type": "PROGRAMMING",
      "points": 2500.0,
      "rating": 2400,
      "tags": [
        "constructive algorithms"
      ]
    },
    "D": {
      "name": "Tickets",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "combinatorics",
        "math",
        "probabilities"
      ]
    },
    "C": {
      "name": "Parquet",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "combinatorics",
        "constructive algorithms",
        "greedy",
        "implementation"
      ]
    },
    "B": {
      "name": "Regular Bracket Sequence",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 1400,
      "tags": [
        "greedy"
      ]
    },
    "A": {
      "name": "Almost Prime",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 900,
      "tags": [
        "number theory"
      ]
    }
  },
  "25": {
    "E": {
      "name": "Test",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "hashing",
        "strings"
      ]
    },
    "D": {
      "name": "Roads not only in Berland",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "dsu",
        "graphs",
        "trees"
      ]
    },
    "C": {
      "name": "Roads in Berland",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "graphs",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Phone numbers",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "IQ test",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "brute force"
      ]
    }
  },
  "24": {
    "E": {
      "name": "Berland collider",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "binary search"
      ]
    },
    "D": {
      "name": "Broken robot",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "dp",
        "math",
        "probabilities"
      ]
    },
    "C": {
      "name": "Sequence of points",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "geometry",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "F1 Champions",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Ring road",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "graphs"
      ]
    }
  },
  "23": {
    "E": {
      "name": "Tree",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "dp"
      ]
    },
    "D": {
      "name": "Tetragon",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "geometry",
        "math"
      ]
    },
    "C": {
      "name": "Oranges and Apples",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "constructive algorithms",
        "sortings"
      ]
    },
    "B": {
      "name": "Party",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "constructive algorithms",
        "graphs",
        "math"
      ]
    },
    "A": {
      "name": "You're Given a String...",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "brute force",
        "greedy"
      ]
    }
  },
  "22": {
    "E": {
      "name": "Scheme",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "dfs and similar",
        "graphs",
        "trees"
      ]
    },
    "D": {
      "name": "Segments",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "C": {
      "name": "System Administrator",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "graphs"
      ]
    },
    "B": {
      "name": "Bargaining Table",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "brute force",
        "dp"
      ]
    },
    "A": {
      "name": "Second Order Statistics",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force"
      ]
    }
  },
  "21": {
    "D": {
      "name": "Traveling Graph",
      "type": "PROGRAMMING",
      "points": 2000.0,
      "rating": 2400,
      "tags": [
        "bitmasks",
        "graph matchings",
        "graphs"
      ]
    },
    "C": {
      "name": "Stripe 2",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 2000,
      "tags": [
        "binary search",
        "dp",
        "sortings"
      ]
    },
    "B": {
      "name": "Intersection",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Jabber ID",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1900,
      "tags": [
        "implementation",
        "strings"
      ]
    }
  },
  "20": {
    "C": {
      "name": "Dijkstra?",
      "type": "PROGRAMMING",
      "points": 1500.0,
      "rating": 1900,
      "tags": [
        "graphs",
        "shortest paths"
      ]
    },
    "B": {
      "name": "Equation",
      "type": "PROGRAMMING",
      "points": 1000.0,
      "rating": 2000,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "BerOS file system",
      "type": "PROGRAMMING",
      "points": 500.0,
      "rating": 1700,
      "tags": [
        "implementation"
      ]
    }
  },
  "19": {
    "E": {
      "name": "Fairy",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "dfs and similar",
        "divide and conquer",
        "dsu"
      ]
    },
    "D": {
      "name": "Points",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "data structures"
      ]
    },
    "C": {
      "name": "Deletion of Repeats",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "greedy",
        "hashing",
        "string suffix structures"
      ]
    },
    "B": {
      "name": "Checkout Assistant",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "dp"
      ]
    },
    "A": {
      "name": "World Football Cup",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "implementation"
      ]
    }
  },
  "18": {
    "E": {
      "name": "Flag 2",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "dp"
      ]
    },
    "D": {
      "name": "Seller Bob",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "brute force",
        "dp",
        "greedy"
      ]
    },
    "C": {
      "name": "Stripe",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "data structures",
        "implementation"
      ]
    },
    "B": {
      "name": "Platforms",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "brute force",
        "math"
      ]
    },
    "A": {
      "name": "Triangle",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "brute force",
        "geometry"
      ]
    }
  },
  "17": {
    "E": {
      "name": "Palisection",
      "type": "PROGRAMMING",
      "rating": 2900,
      "tags": [
        "strings"
      ]
    },
    "D": {
      "name": "Notepad",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "number theory"
      ]
    },
    "C": {
      "name": "Balance",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "dp"
      ]
    },
    "B": {
      "name": "Hierarchy",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "dfs and similar",
        "dsu",
        "greedy",
        "shortest paths"
      ]
    },
    "A": {
      "name": "Noldbach problem",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "brute force",
        "math",
        "number theory"
      ]
    }
  },
  "16": {
    "E": {
      "name": "Fish",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "bitmasks",
        "dp",
        "probabilities"
      ]
    },
    "D": {
      "name": "Logging",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "C": {
      "name": "Monitor",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "binary search",
        "number theory"
      ]
    },
    "B": {
      "name": "Burglar and Matches",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Flag",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "15": {
    "E": {
      "name": "Triangles",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "combinatorics",
        "dp"
      ]
    },
    "D": {
      "name": "Map",
      "type": "PROGRAMMING",
      "rating": 2500,
      "tags": [
        "data structures",
        "implementation",
        "sortings"
      ]
    },
    "C": {
      "name": "Industrial Nim",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "games"
      ]
    },
    "B": {
      "name": "Laser",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Cottage Village",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "implementation",
        "sortings"
      ]
    }
  },
  "14": {
    "E": {
      "name": "Camels",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "dp"
      ]
    },
    "D": {
      "name": "Two Paths",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "shortest paths",
        "trees",
        "two pointers"
      ]
    },
    "C": {
      "name": "Four Segments",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "brute force",
        "constructive algorithms",
        "geometry",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Young Photographer",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Letter",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "13": {
    "E": {
      "name": "Holes",
      "type": "PROGRAMMING",
      "rating": 2700,
      "tags": [
        "data structures",
        "dsu"
      ]
    },
    "D": {
      "name": "Triangles",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "dp",
        "geometry"
      ]
    },
    "C": {
      "name": "Sequence",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "dp",
        "sortings"
      ]
    },
    "B": {
      "name": "Letter A",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "geometry",
        "implementation"
      ]
    },
    "A": {
      "name": "Numbers",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation",
        "math"
      ]
    }
  },
  "12": {
    "E": {
      "name": "Start of the session",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "constructive algorithms"
      ]
    },
    "D": {
      "name": "Ball",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "data structures",
        "sortings"
      ]
    },
    "C": {
      "name": "Fruits",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "greedy",
        "implementation",
        "sortings"
      ]
    },
    "B": {
      "name": "Correct Solution?",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "implementation",
        "sortings"
      ]
    },
    "A": {
      "name": "Super Agent",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "implementation"
      ]
    }
  },
  "11": {
    "E": {
      "name": "Forward, march!",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "binary search",
        "dp",
        "greedy"
      ]
    },
    "D": {
      "name": "A Simple Task",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "bitmasks",
        "dp",
        "graphs"
      ]
    },
    "C": {
      "name": "How Many Squares?",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "implementation"
      ]
    },
    "B": {
      "name": "Jumping Jack",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "math"
      ]
    },
    "A": {
      "name": "Increasing Sequence",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "constructive algorithms",
        "implementation",
        "math"
      ]
    }
  },
  "10": {
    "E": {
      "name": "Greedy Change",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "constructive algorithms"
      ]
    },
    "D": {
      "name": "LCIS",
      "type": "PROGRAMMING",
      "rating": 2800,
      "tags": [
        "dp"
      ]
    },
    "C": {
      "name": "Digital Root",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "number theory"
      ]
    },
    "B": {
      "name": "Cinema Cashier",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "dp",
        "implementation"
      ]
    },
    "A": {
      "name": "Power Consumption Calculation",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "implementation"
      ]
    }
  },
  "9": {
    "E": {
      "name": "Interestring graph and Apples",
      "type": "PROGRAMMING",
      "rating": 2300,
      "tags": [
        "dfs and similar",
        "dsu",
        "graphs"
      ]
    },
    "D": {
      "name": "How many trees?",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "combinatorics",
        "divide and conquer",
        "dp"
      ]
    },
    "C": {
      "name": "Hexadecimal's Numbers",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "brute force",
        "implementation",
        "math"
      ]
    },
    "B": {
      "name": "Running Student",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "brute force",
        "geometry",
        "implementation"
      ]
    },
    "A": {
      "name": "Die Roll",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "math",
        "probabilities"
      ]
    }
  },
  "8": {
    "E": {
      "name": "Beads",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "dp",
        "graphs"
      ]
    },
    "D": {
      "name": "Two Friends",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "binary search",
        "geometry"
      ]
    },
    "C": {
      "name": "Looking for Order",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "bitmasks",
        "dp"
      ]
    },
    "B": {
      "name": "Obsession with Robots",
      "type": "PROGRAMMING",
      "rating": 1400,
      "tags": [
        "constructive algorithms",
        "graphs",
        "implementation"
      ]
    },
    "A": {
      "name": "Train and Peter",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "strings"
      ]
    }
  },
  "7": {
    "E": {
      "name": "Defining Macros",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "dp",
        "expression parsing",
        "implementation"
      ]
    },
    "D": {
      "name": "Palindrome Degree",
      "type": "PROGRAMMING",
      "rating": 2200,
      "tags": [
        "hashing",
        "strings"
      ]
    },
    "C": {
      "name": "Line",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "math",
        "number theory"
      ]
    },
    "B": {
      "name": "Memory Manager",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Kalevitch and Chess",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "brute force",
        "constructive algorithms"
      ]
    }
  },
  "6": {
    "E": {
      "name": "Exposition",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "binary search",
        "data structures",
        "dsu",
        "trees",
        "two pointers"
      ]
    },
    "D": {
      "name": "Lizards and Basements 2",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "brute force",
        "dp"
      ]
    },
    "C": {
      "name": "Alice, Bob and Chocolate",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "greedy",
        "two pointers"
      ]
    },
    "B": {
      "name": "President's Office",
      "type": "PROGRAMMING",
      "rating": 1100,
      "tags": [
        "implementation"
      ]
    },
    "A": {
      "name": "Triangle",
      "type": "PROGRAMMING",
      "rating": 900,
      "tags": [
        "brute force",
        "geometry"
      ]
    }
  },
  "5": {
    "E": {
      "name": "Bindian Signalizing",
      "type": "PROGRAMMING",
      "rating": 2400,
      "tags": [
        "data structures"
      ]
    },
    "D": {
      "name": "Follow Traffic Rules",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "C": {
      "name": "Longest Regular Bracket Sequence",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "constructive algorithms",
        "data structures",
        "dp",
        "greedy",
        "sortings",
        "strings"
      ]
    },
    "B": {
      "name": "Center Alignment",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "implementation",
        "strings"
      ]
    },
    "A": {
      "name": "Chat Servers Outgoing Traffic",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "implementation"
      ]
    }
  },
  "4": {
    "D": {
      "name": "Mysterious Present",
      "type": "PROGRAMMING",
      "rating": 1700,
      "tags": [
        "dp",
        "sortings"
      ]
    },
    "C": {
      "name": "Registration System",
      "type": "PROGRAMMING",
      "rating": 1300,
      "tags": [
        "data structures",
        "hashing",
        "implementation"
      ]
    },
    "B": {
      "name": "Before an Exam",
      "type": "PROGRAMMING",
      "rating": 1200,
      "tags": [
        "constructive algorithms",
        "greedy"
      ]
    },
    "A": {
      "name": "Watermelon",
      "type": "PROGRAMMING",
      "rating": 800,
      "tags": [
        "brute force",
        "math"
      ]
    }
  },
  "3": {
    "D": {
      "name": "Least Cost Bracket Sequence",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "greedy"
      ]
    },
    "C": {
      "name": "Tic-tac-toe",
      "type": "PROGRAMMING",
      "rating": 1800,
      "tags": [
        "brute force",
        "games",
        "implementation"
      ]
    },
    "B": {
      "name": "Lorry",
      "type": "PROGRAMMING",
      "rating": 1900,
      "tags": [
        "greedy",
        "sortings"
      ]
    },
    "A": {
      "name": "Shortest path of the king",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "greedy",
        "shortest paths"
      ]
    }
  },
  "2": {
    "C": {
      "name": "Commentator problem",
      "type": "PROGRAMMING",
      "rating": 2600,
      "tags": [
        "geometry"
      ]
    },
    "B": {
      "name": "The least round way",
      "type": "PROGRAMMING",
      "rating": 2000,
      "tags": [
        "dp",
        "math"
      ]
    },
    "A": {
      "name": "Winner",
      "type": "PROGRAMMING",
      "rating": 1500,
      "tags": [
        "hashing",
        "implementation"
      ]
    }
  },
  "1": {
    "C": {
      "name": "Ancient Berland Circus",
      "type": "PROGRAMMING",
      "rating": 2100,
      "tags": [
        "geometry",
        "math"
      ]
    },
    "B": {
      "name": "Spreadsheet",
      "type": "PROGRAMMING",
      "rating": 1600,
      "tags": [
        "implementation",
        "math"
      ]
    },
    "A": {
      "name": "Theatre Square",
      "type": "PROGRAMMING",
      "rating": 1000,
      "tags": [
        "math"
      ]
    }
  }
}